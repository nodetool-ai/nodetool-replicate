{
  "name": "nodetool-replicate",
  "description": "Replicate support for Nodetool",
  "version": "0.6.0",
  "authors": [
    "Matthias Georgi <matti.georgi@gmail.com>"
  ],
  "nodes": [
    {
      "title": "Replicate",
      "description": "This is the base class for all replicate nodes.\n\n    Methods:\n        replicate_model_id: Returns the model ID for replication.\n        get_hardware: Returns the hardware information.\n        run_replicate: Runs prediction on Replicate.\n        extra_params: Returns any extra parameters.\n        process: Processes the prediction output.\n        convert_output: Converts the output to the specified type.",
      "namespace": "replicate.replicate_node",
      "node_type": "replicate.replicate_node.Replicate",
      "layout": "default",
      "properties": [],
      "outputs": [],
      "the_model_info": {},
      "recommended_models": [],
      "basic_fields": [],
      "is_dynamic": false
    },
    {
      "title": "Audio To Waveform",
      "description": "Create a waveform video from audio",
      "namespace": "replicate.video.generate",
      "node_type": "replicate.video.generate.AudioToWaveform",
      "layout": "default",
      "properties": [
        {
          "name": "audio",
          "type": {
            "type": "audio"
          },
          "default": {},
          "title": "Audio",
          "description": "Audio file to create waveform from"
        },
        {
          "name": "bg_color",
          "type": {
            "type": "str"
          },
          "default": "#000000",
          "title": "Bg Color",
          "description": "Background color of waveform"
        },
        {
          "name": "fg_alpha",
          "type": {
            "type": "float"
          },
          "default": 0.75,
          "title": "Fg Alpha",
          "description": "Opacity of foreground waveform"
        },
        {
          "name": "bar_count",
          "type": {
            "type": "int"
          },
          "default": 100,
          "title": "Bar Count",
          "description": "Number of bars in waveform"
        },
        {
          "name": "bar_width",
          "type": {
            "type": "float"
          },
          "default": 0.4,
          "title": "Bar Width",
          "description": "Width of bars in waveform. 1 represents full width, 0.5 represents half width, etc."
        },
        {
          "name": "bars_color",
          "type": {
            "type": "str"
          },
          "default": "#ffffff",
          "title": "Bars Color",
          "description": "Color of waveform bars"
        },
        {
          "name": "caption_text",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Caption Text",
          "description": "Caption text for the video"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "video"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/5d5cad9c-d4ba-44e1-8c4f-dc08648bbf5e/fofr_a_waveform_bar_chart_video_e.png",
        "created_at": "2023-06-13T15:26:38.672021Z",
        "description": "Create a waveform video from audio",
        "github_url": "https://github.com/fofr/audio-to-waveform",
        "license_url": "https://github.com/fofr/audio-to-waveform/blob/main/LICENSE",
        "name": "audio-to-waveform",
        "owner": "fofr",
        "paper_url": "https://gradio.app/docs/#make_waveform",
        "run_count": 382149,
        "url": "https://replicate.com/fofr/audio-to-waveform",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "audio",
        "bg_color",
        "fg_alpha"
      ],
      "is_dynamic": false
    },
    {
      "title": "Hotshot XL",
      "description": "\ud83d\ude0a Hotshot-XL is an AI text-to-GIF model trained to work alongside Stable Diffusion XL",
      "namespace": "replicate.video.generate",
      "node_type": "replicate.video.generate.HotshotXL",
      "layout": "default",
      "properties": [
        {
          "name": "mp4",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Mp4",
          "description": "Save as mp4, False for GIF"
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Leave blank to randomize the seed"
        },
        {
          "name": "steps",
          "type": {
            "type": "int"
          },
          "default": 30,
          "title": "Steps",
          "description": "Number of denoising steps",
          "min": 1.0,
          "max": 500.0
        },
        {
          "name": "width",
          "type": {
            "type": "enum",
            "values": [
              256,
              320,
              384,
              448,
              512,
              576,
              640,
              672,
              704,
              768,
              832,
              896,
              960,
              1024
            ],
            "type_name": "nodetool.nodes.replicate.video.generate.Width"
          },
          "default": 672,
          "title": "Width",
          "description": "Width of the output"
        },
        {
          "name": "height",
          "type": {
            "type": "enum",
            "values": [
              256,
              320,
              384,
              448,
              512,
              576,
              640,
              672,
              704,
              768,
              832,
              896,
              960,
              1024
            ],
            "type_name": "nodetool.nodes.replicate.video.generate.Height"
          },
          "default": 384,
          "title": "Height",
          "description": "Height of the output"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "a camel smoking a cigarette, hd, high quality",
          "title": "Prompt",
          "description": "Input prompt"
        },
        {
          "name": "scheduler",
          "type": {
            "type": "enum",
            "values": [
              "DDIMScheduler",
              "DPMSolverMultistepScheduler",
              "HeunDiscreteScheduler",
              "KarrasDPM",
              "EulerAncestralDiscreteScheduler",
              "EulerDiscreteScheduler",
              "PNDMScheduler"
            ],
            "type_name": "nodetool.nodes.replicate.video.generate.Scheduler"
          },
          "default": "EulerAncestralDiscreteScheduler",
          "title": "Scheduler",
          "description": "Select a Scheduler"
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "blurry",
          "title": "Negative Prompt",
          "description": "Negative prompt"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "video"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/70393e62-deab-4f95-ace7-eaeb8a9800db/compressed.gif",
        "created_at": "2023-10-05T04:09:21.646870Z",
        "description": "\ud83d\ude0a Hotshot-XL is an AI text-to-GIF model trained to work alongside Stable Diffusion XL",
        "github_url": "https://github.com/lucataco/cog-hotshot-xl",
        "license_url": "https://github.com/hotshotco/Hotshot-XL/blob/main/LICENSE",
        "name": "hotshot-xl",
        "owner": "lucataco",
        "paper_url": "https://huggingface.co/hotshotco/SDXL-512",
        "run_count": 519787,
        "url": "https://replicate.com/lucataco/hotshot-xl",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "mp4",
        "seed",
        "steps"
      ],
      "is_dynamic": false
    },
    {
      "title": "Hunyuan Video",
      "description": "A state-of-the-art text-to-video generation model capable of creating high-quality videos with realistic motion from text descriptions",
      "namespace": "replicate.video.generate",
      "node_type": "replicate.video.generate.Hunyuan_Video",
      "layout": "default",
      "properties": [
        {
          "name": "fps",
          "type": {
            "type": "int"
          },
          "default": 24,
          "title": "Fps",
          "description": "Frames per second of the output video",
          "min": 1.0
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed (leave empty for random)"
        },
        {
          "name": "width",
          "type": {
            "type": "int"
          },
          "default": 864,
          "title": "Width",
          "description": "Width of the video in pixels (must be divisible by 16)",
          "min": 16.0,
          "max": 1280.0
        },
        {
          "name": "height",
          "type": {
            "type": "int"
          },
          "default": 480,
          "title": "Height",
          "description": "Height of the video in pixels (must be divisible by 16)",
          "min": 16.0,
          "max": 1280.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "A cat walks on the grass, realistic style",
          "title": "Prompt",
          "description": "The prompt to guide the video generation"
        },
        {
          "name": "infer_steps",
          "type": {
            "type": "int"
          },
          "default": 50,
          "title": "Infer Steps",
          "description": "Number of denoising steps",
          "min": 1.0
        },
        {
          "name": "video_length",
          "type": {
            "type": "int"
          },
          "default": 129,
          "title": "Video Length",
          "description": "Number of frames to generate (must be 4k+1, ex: 49 or 129)",
          "min": 1.0,
          "max": 200.0
        },
        {
          "name": "embedded_guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 6,
          "title": "Embedded Guidance Scale",
          "description": "Guidance scale",
          "min": 1.0,
          "max": 10.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "video"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/3bebc89d-37c7-47ea-9a7b-a334b76eea87/hunyuan-featured.webp",
        "created_at": "2024-12-03T14:21:37.443615Z",
        "description": "A state-of-the-art text-to-video generation model capable of creating high-quality videos with realistic motion from text descriptions",
        "github_url": "https://github.com/zsxkib/HunyuanVideo/tree/replicate",
        "license_url": "https://huggingface.co/tencent/HunyuanVideo/blob/main/LICENSE",
        "name": "hunyuan-video",
        "owner": "tencent",
        "paper_url": "https://github.com/Tencent/HunyuanVideo/blob/main/assets/hunyuanvideo.pdf",
        "run_count": 74726,
        "url": "https://replicate.com/tencent/hunyuan-video",
        "visibility": "public",
        "weights_url": "https://huggingface.co/tencent/HunyuanVideo"
      },
      "recommended_models": [],
      "basic_fields": [
        "fps",
        "seed",
        "width"
      ],
      "is_dynamic": false
    },
    {
      "title": "LTX Video",
      "description": "LTX-Video is the first DiT-based video generation model capable of generating high-quality videos in real-time. It produces 24 FPS videos at a 768x512 resolution faster than they can be watched.",
      "namespace": "replicate.video.generate",
      "node_type": "replicate.video.generate.LTX_Video",
      "layout": "default",
      "properties": [
        {
          "name": "cfg",
          "type": {
            "type": "float"
          },
          "default": 3,
          "title": "Cfg",
          "description": "How strongly the video follows the prompt",
          "min": 1.0,
          "max": 20.0
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Set a seed for reproducibility. Random by default."
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Optional input image to use as the starting frame"
        },
        {
          "name": "model",
          "type": {
            "type": "enum",
            "values": [
              "0.9.1",
              "0.9"
            ],
            "type_name": "nodetool.nodes.replicate.video.generate.Model"
          },
          "default": "0.9.1",
          "title": "Model",
          "description": "Model version to use"
        },
        {
          "name": "steps",
          "type": {
            "type": "int"
          },
          "default": 30,
          "title": "Steps",
          "description": "Number of steps",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "length",
          "type": {
            "type": "enum",
            "values": [
              97,
              129,
              161,
              193,
              225,
              257
            ],
            "type_name": "nodetool.nodes.replicate.video.generate.Length"
          },
          "default": 97,
          "title": "Length",
          "description": "Length of the output video in frames"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "best quality, 4k, HDR, a tracking shot of a beautiful scene",
          "title": "Prompt",
          "description": "Text prompt for the video. This model needs long descriptive prompts, if the prompt is too short the quality won't be good."
        },
        {
          "name": "target_size",
          "type": {
            "type": "enum",
            "values": [
              512,
              576,
              640,
              704,
              768,
              832,
              896,
              960,
              1024
            ],
            "type_name": "nodetool.nodes.replicate.video.generate.Target_size"
          },
          "default": 640,
          "title": "Target Size",
          "description": "Target size for the output video"
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "1:2",
              "2:1",
              "2:3",
              "3:2",
              "3:4",
              "4:3",
              "4:5",
              "5:4",
              "9:16",
              "16:9",
              "9:21",
              "21:9"
            ],
            "type_name": "nodetool.nodes.replicate.video.generate.Aspect_ratio"
          },
          "default": "3:2",
          "title": "Aspect Ratio",
          "description": "Aspect ratio of the output video. Ignored if an image is provided."
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "low quality, worst quality, deformed, distorted",
          "title": "Negative Prompt",
          "description": "Things you do not want to see in your video"
        },
        {
          "name": "image_noise_scale",
          "type": {
            "type": "float"
          },
          "default": 0.15,
          "title": "Image Noise Scale",
          "description": "Lower numbers stick more closely to the input image",
          "min": 0.0,
          "max": 1.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "video"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/184609cb-a0c5-47c9-8fec-987fb21cc977/replicate-prediction-_QTChmfY.webp",
        "created_at": "2024-11-29T14:15:01.460922Z",
        "description": "LTX-Video is the first DiT-based video generation model capable of generating high-quality videos in real-time. It produces 24 FPS videos at a 768x512 resolution faster than they can be watched.",
        "github_url": "https://github.com/Lightricks/LTX-Video",
        "license_url": "https://github.com/Lightricks/LTX-Video/blob/main/LICENSE",
        "name": "ltx-video",
        "owner": "lightricks",
        "paper_url": null,
        "run_count": 58435,
        "url": "https://replicate.com/lightricks/ltx-video",
        "visibility": "public",
        "weights_url": "https://huggingface.co/Lightricks/LTX-Video"
      },
      "recommended_models": [],
      "basic_fields": [
        "cfg",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Music 01",
      "description": "Quickly generate up to 1 minute of music with lyrics and vocals in the style of a reference track",
      "namespace": "replicate.video.generate",
      "node_type": "replicate.video.generate.Music_01",
      "layout": "default",
      "properties": [
        {
          "name": "lyrics",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Lyrics",
          "description": "Lyrics with optional formatting. You can use a newline to separate each line of lyrics. You can use two newlines to add a pause between lines. You can use double hash marks (##) at the beginning and end of the lyrics to add accompaniment."
        },
        {
          "name": "bitrate",
          "type": {
            "type": "enum",
            "values": [
              32000,
              64000,
              128000,
              256000
            ],
            "type_name": "nodetool.nodes.replicate.video.generate.Bitrate"
          },
          "default": 256000,
          "title": "Bitrate",
          "description": "Bitrate for the generated music"
        },
        {
          "name": "voice_id",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Voice Id",
          "description": "Reuse a previously uploaded voice ID"
        },
        {
          "name": "song_file",
          "type": {
            "type": "audio"
          },
          "default": {},
          "title": "Song File",
          "description": "Reference song, should contain music and vocals. Must be a .wav or .mp3 file longer than 15 seconds."
        },
        {
          "name": "voice_file",
          "type": {
            "type": "audio"
          },
          "default": {},
          "title": "Voice File",
          "description": "Voice reference. Must be a .wav or .mp3 file longer than 15 seconds. If only a voice reference is given, an a cappella vocal hum will be generated."
        },
        {
          "name": "sample_rate",
          "type": {
            "type": "enum",
            "values": [
              16000,
              24000,
              32000,
              44100
            ],
            "type_name": "nodetool.nodes.replicate.video.generate.Sample_rate"
          },
          "default": 44100,
          "title": "Sample Rate",
          "description": "Sample rate for the generated music"
        },
        {
          "name": "instrumental_id",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Instrumental Id",
          "description": "Reuse a previously uploaded instrumental ID"
        },
        {
          "name": "instrumental_file",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Instrumental File",
          "description": "Instrumental reference. Must be a .wav or .mp3 file longer than 15 seconds. If only an instrumental reference is given, a track without vocals will be generated."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "audio"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/1d2de931-15ff-48b0-9c4d-2f9200eb2913/music-01-cover.jpg",
        "created_at": "2024-12-17T12:40:30.320043Z",
        "description": "Quickly generate up to 1 minute of music with lyrics and vocals in the style of a reference track",
        "github_url": null,
        "license_url": "https://intl.minimaxi.com/protocol/terms-of-service",
        "name": "music-01",
        "owner": "minimax",
        "paper_url": null,
        "run_count": 68923,
        "url": "https://replicate.com/minimax/music-01",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "lyrics",
        "bitrate",
        "voice_id"
      ],
      "is_dynamic": false
    },
    {
      "title": "Ray",
      "description": "Fast, high quality text-to-video and image-to-video (Also known as Dream Machine)",
      "namespace": "replicate.video.generate",
      "node_type": "replicate.video.generate.Ray",
      "layout": "default",
      "properties": [
        {
          "name": "loop",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Loop",
          "description": "Whether the video should loop"
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Text prompt for video generation"
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "3:4",
              "4:3",
              "9:16",
              "16:9",
              "9:21",
              "21:9"
            ],
            "type_name": "nodetool.nodes.replicate.video.generate.Aspect_ratio"
          },
          "default": "16:9",
          "title": "Aspect Ratio",
          "description": "Aspect ratio of the video (e.g. '16:9'). Ignored if a start or end frame or video ID is given."
        },
        {
          "name": "end_video_id",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "End Video Id",
          "description": "Prepend a new video generation to the beginning of an existing one (Also called 'reverse extend'). You can combine this with start_image_url, or start_video_id."
        },
        {
          "name": "end_image_url",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "End Image Url",
          "description": "URL of an image to use as the ending frame"
        },
        {
          "name": "start_video_id",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Start Video Id",
          "description": "Continue or extend a video generation with a new generation. You can combine this with end_image_url, or end_video_id."
        },
        {
          "name": "start_image_url",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Start Image Url",
          "description": "URL of an image to use as the starting frame"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "video"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/496f8ab2-3a87-4fe7-9867-5572460c2b5e/ray-cover.webp",
        "created_at": "2024-12-12T16:30:42.287210Z",
        "description": "Fast, high quality text-to-video and image-to-video (Also known as Dream Machine)",
        "github_url": null,
        "license_url": "https://lumalabs.ai/dream-machine/api/terms",
        "name": "ray",
        "owner": "luma",
        "paper_url": "https://lumalabs.ai/dream-machine",
        "run_count": 15500,
        "url": "https://replicate.com/luma/ray",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "loop",
        "prompt",
        "aspect_ratio"
      ],
      "is_dynamic": false
    },
    {
      "title": "Robust Video Matting",
      "description": "extract foreground of a video",
      "namespace": "replicate.video.generate",
      "node_type": "replicate.video.generate.RobustVideoMatting",
      "layout": "default",
      "properties": [
        {
          "name": "input_video",
          "type": {
            "type": "video"
          },
          "default": {},
          "title": "Input Video",
          "description": "Video to segment."
        },
        {
          "name": "output_type",
          "type": {
            "type": "enum",
            "values": [
              "green-screen",
              "alpha-mask",
              "foreground-mask"
            ],
            "type_name": "nodetool.nodes.replicate.video.generate.Output_type"
          },
          "default": "green-screen",
          "title": "Output Type"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "video"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/1f92fd8f-2b90-4998-b5ae-1e23678ab004/showreel.gif",
        "created_at": "2022-11-25T14:06:18.152759Z",
        "description": "extract foreground of a video",
        "github_url": "https://github.com/PeterL1n/RobustVideoMatting",
        "license_url": "https://github.com/PeterL1n/RobustVideoMatting/blob/master/LICENSE",
        "name": "robust_video_matting",
        "owner": "arielreplicate",
        "paper_url": "https://arxiv.org/abs/2108.11515",
        "run_count": 52884,
        "url": "https://replicate.com/arielreplicate/robust_video_matting",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "input_video",
        "output_type"
      ],
      "is_dynamic": false
    },
    {
      "title": "Video 01",
      "description": "Generate 6s videos with prompts or images. (Also known as Hailuo). Use a subject reference to make a video with a character and the S2V-01 model.",
      "namespace": "replicate.video.generate",
      "node_type": "replicate.video.generate.Video_01",
      "layout": "default",
      "properties": [
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Text prompt for image generation"
        },
        {
          "name": "prompt_optimizer",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Prompt Optimizer",
          "description": "Use prompt optimizer"
        },
        {
          "name": "first_frame_image",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "First Frame Image",
          "description": "First frame image for video generation. The output video will have the same aspect ratio as this image."
        },
        {
          "name": "subject_reference",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Subject Reference",
          "description": "An optional character reference image to use as the subject in the generated video"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "video"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/b56c831c-4c68-4443-b69e-b71b105afe7f/minimax.webp",
        "created_at": "2024-11-26T14:40:21.652537Z",
        "description": "Generate 6s videos with prompts or images. (Also known as Hailuo). Use a subject reference to make a video with a character and the S2V-01 model.",
        "github_url": null,
        "license_url": "https://intl.minimaxi.com/protocol/terms-of-service",
        "name": "video-01",
        "owner": "minimax",
        "paper_url": null,
        "run_count": 295228,
        "url": "https://replicate.com/minimax/video-01",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "prompt",
        "prompt_optimizer",
        "first_frame_image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Video 01 Live",
      "description": "An image-to-video (I2V) model specifically trained for Live2D and general animation use cases",
      "namespace": "replicate.video.generate",
      "node_type": "replicate.video.generate.Video_01_Live",
      "layout": "default",
      "properties": [
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Text prompt for image generation"
        },
        {
          "name": "prompt_optimizer",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Prompt Optimizer",
          "description": "Use prompt optimizer"
        },
        {
          "name": "first_frame_image",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "First Frame Image",
          "description": "First frame image for video generation"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "video"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/c202ad97-edd0-40b6-afaf-c99d71398d44/video-01-live-cover.webp",
        "created_at": "2024-12-16T20:27:52.715593Z",
        "description": "An image-to-video (I2V) model specifically trained for Live2D and general animation use cases",
        "github_url": null,
        "license_url": "https://intl.minimaxi.com/protocol/terms-of-service",
        "name": "video-01-live",
        "owner": "minimax",
        "paper_url": null,
        "run_count": 69704,
        "url": "https://replicate.com/minimax/video-01-live",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "prompt",
        "prompt_optimizer",
        "first_frame_image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Wan 2 1 1 3 B",
      "description": "Generate 5s 480p videos. Wan is an advanced and powerful visual generation model developed by Tongyi Lab of Alibaba Group",
      "namespace": "replicate.video.generate",
      "node_type": "replicate.video.generate.Wan_2_1_1_3B",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed for reproducible results (leave blank for random)"
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Text prompt describing what you want to generate"
        },
        {
          "name": "frame_num",
          "type": {
            "type": "enum",
            "values": [
              17,
              33,
              49,
              65,
              81
            ],
            "type_name": "nodetool.nodes.replicate.video.generate.Frame_num"
          },
          "default": 81,
          "title": "Frame Num",
          "description": "Video duration in frames (based on standard 16fps playback)"
        },
        {
          "name": "resolution",
          "type": {
            "type": "enum",
            "values": [
              "480p"
            ],
            "type_name": "nodetool.nodes.replicate.video.generate.Resolution"
          },
          "default": "480p",
          "title": "Resolution",
          "description": "Video resolution"
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "16:9",
              "9:16"
            ],
            "type_name": "nodetool.nodes.replicate.video.generate.Aspect_ratio"
          },
          "default": "16:9",
          "title": "Aspect Ratio",
          "description": "Video aspect ratio"
        },
        {
          "name": "sample_shift",
          "type": {
            "type": "float"
          },
          "default": 8,
          "title": "Sample Shift",
          "description": "Sampling shift factor for flow matching (recommended range: 8-12)",
          "min": 0.0,
          "max": 20.0
        },
        {
          "name": "sample_steps",
          "type": {
            "type": "int"
          },
          "default": 30,
          "title": "Sample Steps",
          "description": "Number of sampling steps (higher = better quality but slower)",
          "min": 10.0,
          "max": 50.0
        },
        {
          "name": "sample_guide_scale",
          "type": {
            "type": "float"
          },
          "default": 6,
          "title": "Sample Guide Scale",
          "description": "Classifier free guidance scale (higher values strengthen prompt adherence)",
          "min": 0.0,
          "max": 20.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "video"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/a07f6849-fd97-4f6b-9166-887e84b0cb47/replicate-prediction-0s06z711.webp",
        "created_at": "2025-02-26T14:24:14.098215Z",
        "description": "Generate 5s 480p videos. Wan is an advanced and powerful visual generation model developed by Tongyi Lab of Alibaba Group",
        "github_url": "https://github.com/Wan-Video/Wan2.1",
        "license_url": "https://huggingface.co/datasets/choosealicense/licenses/blob/main/markdown/apache-2.0.md",
        "name": "wan-2.1-1.3b",
        "owner": "wan-video",
        "paper_url": "https://wanxai.com/",
        "run_count": 5218,
        "url": "https://replicate.com/wan-video/wan-2.1-1.3b",
        "visibility": "public",
        "weights_url": "https://huggingface.co/Wan-AI/Wan2.1-T2V-1.3B"
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "prompt",
        "frame_num"
      ],
      "is_dynamic": false
    },
    {
      "title": "Wan 2 1 I 2 V 480 p",
      "description": "Accelerated inference for Wan 2.1 14B image to video, a comprehensive and open suite of video foundation models that pushes the boundaries of video generation.",
      "namespace": "replicate.video.generate",
      "node_type": "replicate.video.generate.Wan_2_1_I2V_480p",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Leave blank for random"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image to start generating from"
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Prompt for video generation"
        },
        {
          "name": "max_area",
          "type": {
            "type": "enum",
            "values": [
              "832x480",
              "480x832"
            ],
            "type_name": "nodetool.nodes.replicate.video.generate.Max_area"
          },
          "default": "832x480",
          "title": "Max Area",
          "description": "Maximum area of generated image. The input image will shrink to fit these dimensions"
        },
        {
          "name": "fast_mode",
          "type": {
            "type": "enum",
            "values": [
              "Off",
              "Balanced",
              "Fast"
            ],
            "type_name": "nodetool.nodes.replicate.video.generate.Fast_mode"
          },
          "default": "Off",
          "title": "Fast Mode",
          "description": "Speed up generation with different levels of acceleration. Faster modes may degrade quality somewhat. The speedup is dependent on the content, so different videos may see different speedups."
        },
        {
          "name": "num_frames",
          "type": {
            "type": "int"
          },
          "default": 81,
          "title": "Num Frames",
          "description": "Number of video frames",
          "min": 5.0,
          "max": 100.0
        },
        {
          "name": "sample_shift",
          "type": {
            "type": "float"
          },
          "default": 3,
          "title": "Sample Shift",
          "description": "Sample shift factor",
          "min": 1.0,
          "max": 10.0
        },
        {
          "name": "sample_steps",
          "type": {
            "type": "int"
          },
          "default": 30,
          "title": "Sample Steps",
          "description": "Number of generation steps. Fewer steps means faster generation, at the expensive of output quality. 30 steps is sufficient for most prompts",
          "min": 1.0,
          "max": 40.0
        },
        {
          "name": "frames_per_second",
          "type": {
            "type": "int"
          },
          "default": 16,
          "title": "Frames Per Second",
          "description": "Frames per second. Note that the pricing of this model is based on the video duration at 16 fps",
          "min": 5.0,
          "max": 24.0
        },
        {
          "name": "sample_guide_scale",
          "type": {
            "type": "float"
          },
          "default": 5,
          "title": "Sample Guide Scale",
          "description": "Higher guide scale makes prompt adherence better, but can reduce variation",
          "min": 0.0,
          "max": 10.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "video"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/75f0346d-ec4c-4078-bb40-6705578c0d21/replicate-prediction-br080xq9.webp",
        "created_at": "2025-02-26T20:09:34.365160Z",
        "description": "Accelerated inference for Wan 2.1 14B image to video, a comprehensive and open suite of video foundation models that pushes the boundaries of video generation.",
        "github_url": "https://github.com/Wan-Video/Wan2.1",
        "license_url": "https://github.com/Wan-Video/Wan2.1/blob/main/LICENSE.txt",
        "name": "wan-2.1-i2v-480p",
        "owner": "wavespeedai",
        "paper_url": null,
        "run_count": 8623,
        "url": "https://replicate.com/wavespeedai/wan-2.1-i2v-480p",
        "visibility": "public",
        "weights_url": "https://huggingface.co/Wan-AI/Wan2.1-T2V-14B"
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "image",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Zeroscope V 2 XL",
      "description": "Zeroscope V2 XL & 576w",
      "namespace": "replicate.video.generate",
      "node_type": "replicate.video.generate.Zeroscope_V2_XL",
      "layout": "default",
      "properties": [
        {
          "name": "fps",
          "type": {
            "type": "int"
          },
          "default": 8,
          "title": "Fps",
          "description": "fps for the output video"
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Leave blank to randomize the seed"
        },
        {
          "name": "model",
          "type": {
            "type": "enum",
            "values": [
              "xl",
              "576w",
              "potat1",
              "animov-512x"
            ],
            "type_name": "nodetool.nodes.replicate.video.generate.Model"
          },
          "default": "xl",
          "title": "Model",
          "description": "Model to use"
        },
        {
          "name": "width",
          "type": {
            "type": "int"
          },
          "default": 576,
          "title": "Width",
          "description": "Width of the output video",
          "min": 256.0
        },
        {
          "name": "height",
          "type": {
            "type": "int"
          },
          "default": 320,
          "title": "Height",
          "description": "Height of the output video",
          "min": 256.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "An astronaut riding a horse",
          "title": "Prompt",
          "description": "Input prompt"
        },
        {
          "name": "batch_size",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Batch Size",
          "description": "Batch size",
          "min": 1.0
        },
        {
          "name": "init_video",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Init Video",
          "description": "URL of the initial video (optional)"
        },
        {
          "name": "num_frames",
          "type": {
            "type": "int"
          },
          "default": 24,
          "title": "Num Frames",
          "description": "Number of frames for the output video"
        },
        {
          "name": "init_weight",
          "type": {
            "type": "float"
          },
          "default": 0.5,
          "title": "Init Weight",
          "description": "Strength of init_video"
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 7.5,
          "title": "Guidance Scale",
          "description": "Guidance scale",
          "min": 1.0,
          "max": 100.0
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Negative Prompt",
          "description": "Negative prompt"
        },
        {
          "name": "remove_watermark",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Remove Watermark",
          "description": "Remove watermark"
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 50,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps",
          "min": 1.0,
          "max": 500.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "video"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/d56e8888-a591-4edd-a9d3-2285b2ab66b4/1mrNnh8.jpg",
        "created_at": "2023-06-24T18:30:41.874899Z",
        "description": "Zeroscope V2 XL & 576w",
        "github_url": "https://github.com/anotherjesse/cog-text2video",
        "license_url": "https://github.com/anotherjesse/cog-text2video/blob/main/LICENSE",
        "name": "zeroscope-v2-xl",
        "owner": "anotherjesse",
        "paper_url": "https://huggingface.co/cerspense/zeroscope_v2_576w",
        "run_count": 286076,
        "url": "https://replicate.com/anotherjesse/zeroscope-v2-xl",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "fps",
        "seed",
        "model"
      ],
      "is_dynamic": false
    },
    {
      "title": "Ad Inpaint",
      "description": "Product advertising image generator",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.AdInpaint",
      "layout": "default",
      "properties": [
        {
          "name": "pixel",
          "type": {
            "type": "enum",
            "values": [
              "512 * 512",
              "768 * 768",
              "1024 * 1024"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Pixel"
          },
          "default": "512 * 512",
          "title": "Pixel",
          "description": "image total pixel"
        },
        {
          "name": "scale",
          "type": {
            "type": "int"
          },
          "default": 3,
          "title": "Scale",
          "description": "Factor to scale image by (maximum: 4)",
          "min": 0.0,
          "max": 4.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Product name or prompt"
        },
        {
          "name": "image_num",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Image Num",
          "description": "Number of image to generate",
          "min": 0.0,
          "max": 4.0
        },
        {
          "name": "image_path",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image Path",
          "description": "input image"
        },
        {
          "name": "manual_seed",
          "type": {
            "type": "int"
          },
          "default": -1,
          "title": "Manual Seed",
          "description": "Manual Seed"
        },
        {
          "name": "product_size",
          "type": {
            "type": "enum",
            "values": [
              "Original",
              "0.6 * width",
              "0.5 * width",
              "0.4 * width",
              "0.3 * width",
              "0.2 * width"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Product_size"
          },
          "default": "Original",
          "title": "Product Size",
          "description": "Max product size"
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 7.5,
          "title": "Guidance Scale",
          "description": "Guidance Scale"
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "low quality, out of frame, illustration, 3d, sepia, painting, cartoons, sketch, watermark, text, Logo, advertisement",
          "title": "Negative Prompt",
          "description": "Anything you don't want in the photo"
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 20,
          "title": "Num Inference Steps",
          "description": "Inference Steps"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/e21a425b-4cdb-445b-8b2f-5be1b26fb78d/ad_inpaint_2.jpg",
        "created_at": "2023-04-03T11:25:28.290524Z",
        "description": "Product advertising image generator",
        "github_url": null,
        "license_url": null,
        "name": "ad-inpaint",
        "owner": "logerzhu",
        "paper_url": null,
        "run_count": 506171,
        "url": "https://replicate.com/logerzhu/ad-inpaint",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "pixel",
        "scale",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Consistent Character",
      "description": "Create images of a given character in different poses",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.ConsistentCharacter",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Set a seed for reproducibility. Random by default."
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "A headshot photo",
          "title": "Prompt",
          "description": "Describe the subject. Include clothes and hairstyle for more consistency."
        },
        {
          "name": "subject",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Subject",
          "description": "An image of a person. Best images are square close ups of a face, but they do not have to be."
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 80,
          "title": "Output Quality",
          "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality.",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Negative Prompt",
          "description": "Things you do not want to see in your image"
        },
        {
          "name": "randomise_poses",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Randomise Poses",
          "description": "Randomise the poses used."
        },
        {
          "name": "number_of_outputs",
          "type": {
            "type": "int"
          },
          "default": 3,
          "title": "Number Of Outputs",
          "description": "The number of images to generate.",
          "min": 1.0,
          "max": 20.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images."
        },
        {
          "name": "number_of_images_per_pose",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Number Of Images Per Pose",
          "description": "The number of images to generate for each pose.",
          "min": 1.0,
          "max": 4.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://replicate.delivery/xezq/TOVBIdLIP6rPLdn4HUtnZHyvHwBAaXzCNUWenllOPD8hBw6JA/ComfyUI_00005_.webp",
        "created_at": "2024-05-30T16:48:52.345721Z",
        "description": "Create images of a given character in different poses",
        "github_url": "https://github.com/fofr/cog-consistent-character",
        "license_url": "https://github.com/fofr/cog-consistent-character/blob/main/LICENSE",
        "name": "consistent-character",
        "owner": "fofr",
        "paper_url": null,
        "run_count": 863263,
        "url": "https://replicate.com/fofr/consistent-character",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "prompt",
        "subject"
      ],
      "is_dynamic": false
    },
    {
      "title": "Flux 1 1 Pro Ultra",
      "description": "FLUX1.1 [pro] in ultra and raw modes. Images are up to 4 megapixels. Use raw mode for realism.",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Flux_1_1_Pro_Ultra",
      "layout": "default",
      "properties": [
        {
          "name": "raw",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Raw",
          "description": "Generate less processed, more natural-looking images"
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Text prompt for image generation"
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "21:9",
              "16:9",
              "3:2",
              "4:3",
              "5:4",
              "1:1",
              "4:5",
              "3:4",
              "2:3",
              "9:16",
              "9:21"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "1:1",
          "title": "Aspect Ratio",
          "description": "Aspect ratio for the generated image"
        },
        {
          "name": "image_prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Image Prompt",
          "description": "Image to use with Flux Redux. This is used together with the text prompt to guide the generation towards the composition of the image_prompt. Must be jpeg, png, gif, or webp."
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "jpg",
          "title": "Output Format",
          "description": "Format of the output images."
        },
        {
          "name": "safety_tolerance",
          "type": {
            "type": "int"
          },
          "default": 2,
          "title": "Safety Tolerance",
          "description": "Safety tolerance, 1 is most strict and 6 is most permissive",
          "min": 1.0,
          "max": 6.0
        },
        {
          "name": "image_prompt_strength",
          "type": {
            "type": "float"
          },
          "default": 0.1,
          "title": "Image Prompt Strength",
          "description": "Blend between the prompt and the image prompt.",
          "min": 0.0,
          "max": 1.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/8121c76b-fbff-41d9-834d-c70dea9d2191/flux-ultra-cover.jpg",
        "created_at": "2024-11-06T19:13:05.091037Z",
        "description": "FLUX1.1 [pro] in ultra and raw modes. Images are up to 4 megapixels. Use raw mode for realism.",
        "github_url": null,
        "license_url": "https://replicate.com/black-forest-labs/flux-pro#license",
        "name": "flux-1.1-pro-ultra",
        "owner": "black-forest-labs",
        "paper_url": "https://blackforestlabs.ai/flux-1-1-ultra/",
        "run_count": 7204167,
        "url": "https://replicate.com/black-forest-labs/flux-1.1-pro-ultra",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "raw",
        "seed",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Flux 360",
      "description": "Generate 360 panorama images.",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Flux_360",
      "layout": "default",
      "properties": [
        {
          "name": "mask",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Mask",
          "description": "Image mask for image inpainting mode. If provided, aspect_ratio, width, and height inputs are ignored."
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image for image to image or inpainting mode. If provided, aspect_ratio, width, and height inputs are ignored."
        },
        {
          "name": "model",
          "type": {
            "type": "enum",
            "values": [
              "dev",
              "schnell"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Model"
          },
          "default": "dev",
          "title": "Model",
          "description": "Which model to run inference with. The dev model performs best with around 28 inference steps but the schnell model only needs 4 steps."
        },
        {
          "name": "width",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Width",
          "description": "Width of generated image. Only works if `aspect_ratio` is set to custom. Will be rounded to nearest multiple of 16. Incompatible with fast generation",
          "min": 256.0,
          "max": 1440.0
        },
        {
          "name": "height",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Height",
          "description": "Height of generated image. Only works if `aspect_ratio` is set to custom. Will be rounded to nearest multiple of 16. Incompatible with fast generation",
          "min": 256.0,
          "max": 1440.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Prompt for generated image. If you include the `trigger_word` used in the training process you are more likely to activate the trained object, style, or concept in the resulting image."
        },
        {
          "name": "go_fast",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Go Fast",
          "description": "Run faster predictions with model optimized for speed (currently fp8 quantized); disable to run in original bf16"
        },
        {
          "name": "extra_lora",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Extra Lora",
          "description": "Load LoRA weights. Supports Replicate models in the format <owner>/<username> or <owner>/<username>/<version>, HuggingFace URLs in the format huggingface.co/<owner>/<model-name>, CivitAI URLs in the format civitai.com/models/<id>[/<model-name>], or arbitrary .safetensors URLs from the Internet. For example, 'fofr/flux-pixar-cars'"
        },
        {
          "name": "lora_scale",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Lora Scale",
          "description": "Determines how strongly the main LoRA should be applied. Sane results between 0 and 1 for base inference. For go_fast we apply a 1.5x multiplier to this value; we've generally seen good performance when scaling the base value by that amount. You may still need to experiment to find the best value for your particular lora.",
          "min": -1.0,
          "max": 3.0
        },
        {
          "name": "megapixels",
          "type": {
            "type": "enum",
            "values": [
              "1",
              "0.25"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Megapixels"
          },
          "default": "1",
          "title": "Megapixels",
          "description": "Approximate number of megapixels for generated image"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of outputs to generate",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "16:9",
              "21:9",
              "3:2",
              "2:3",
              "4:5",
              "5:4",
              "3:4",
              "4:3",
              "9:16",
              "9:21",
              "custom"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "1:1",
          "title": "Aspect Ratio",
          "description": "Aspect ratio for the generated image. If custom is selected, uses height and width below & will run in bf16 mode"
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 3,
          "title": "Guidance Scale",
          "description": "Guidance scale for the diffusion process. Lower values can give more realistic images. Good values to try are 2, 2.5, 3 and 3.5",
          "min": 0.0,
          "max": 10.0
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 80,
          "title": "Output Quality",
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "prompt_strength",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Prompt Strength",
          "description": "Prompt strength when using img2img. 1.0 corresponds to full destruction of information in image",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "extra_lora_scale",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Extra Lora Scale",
          "description": "Determines how strongly the extra LoRA should be applied. Sane results between 0 and 1 for base inference. For go_fast we apply a 1.5x multiplier to this value; we've generally seen good performance when scaling the base value by that amount. You may still need to experiment to find the best value for your particular lora.",
          "min": -1.0,
          "max": 3.0
        },
        {
          "name": "replicate_weights",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Replicate Weights",
          "description": "Load LoRA weights. Supports Replicate models in the format <owner>/<username> or <owner>/<username>/<version>, HuggingFace URLs in the format huggingface.co/<owner>/<model-name>, CivitAI URLs in the format civitai.com/models/<id>[/<model-name>], or arbitrary .safetensors URLs from the Internet. For example, 'fofr/flux-pixar-cars'"
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 28,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps. More steps can give more detailed images, but take longer.",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/3731b4ae-b13e-44e8-a12e-6d02627cbd23/forest.png",
        "created_at": "2024-08-26T15:51:12.459480Z",
        "description": "Generate 360 panorama images.",
        "github_url": "https://github.com/igorriti/pi",
        "license_url": null,
        "name": "flux-360",
        "owner": "igorriti",
        "paper_url": null,
        "run_count": 12849,
        "url": "https://replicate.com/igorriti/flux-360",
        "visibility": "public",
        "weights_url": "https://huggingface.co/igorriti/flux-360"
      },
      "recommended_models": [],
      "basic_fields": [
        "mask",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Flux Black Light",
      "description": "A flux lora fine-tuned on black light images",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Flux_Black_Light",
      "layout": "default",
      "properties": [
        {
          "name": "mask",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Mask",
          "description": "Image mask for image inpainting mode. If provided, aspect_ratio, width, and height inputs are ignored."
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image for image to image or inpainting mode. If provided, aspect_ratio, width, and height inputs are ignored."
        },
        {
          "name": "model",
          "type": {
            "type": "enum",
            "values": [
              "dev",
              "schnell"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Model"
          },
          "default": "dev",
          "title": "Model",
          "description": "Which model to run inference with. The dev model performs best with around 28 inference steps but the schnell model only needs 4 steps."
        },
        {
          "name": "width",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Width",
          "description": "Width of generated image. Only works if `aspect_ratio` is set to custom. Will be rounded to nearest multiple of 16. Incompatible with fast generation",
          "min": 256.0,
          "max": 1440.0
        },
        {
          "name": "height",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Height",
          "description": "Height of generated image. Only works if `aspect_ratio` is set to custom. Will be rounded to nearest multiple of 16. Incompatible with fast generation",
          "min": 256.0,
          "max": 1440.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Prompt for generated image. If you include the `trigger_word` used in the training process you are more likely to activate the trained object, style, or concept in the resulting image."
        },
        {
          "name": "go_fast",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Go Fast",
          "description": "Run faster predictions with model optimized for speed (currently fp8 quantized); disable to run in original bf16"
        },
        {
          "name": "extra_lora",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Extra Lora",
          "description": "Load LoRA weights. Supports Replicate models in the format <owner>/<username> or <owner>/<username>/<version>, HuggingFace URLs in the format huggingface.co/<owner>/<model-name>, CivitAI URLs in the format civitai.com/models/<id>[/<model-name>], or arbitrary .safetensors URLs from the Internet. For example, 'fofr/flux-pixar-cars'"
        },
        {
          "name": "lora_scale",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Lora Scale",
          "description": "Determines how strongly the main LoRA should be applied. Sane results between 0 and 1 for base inference. For go_fast we apply a 1.5x multiplier to this value; we've generally seen good performance when scaling the base value by that amount. You may still need to experiment to find the best value for your particular lora.",
          "min": -1.0,
          "max": 3.0
        },
        {
          "name": "megapixels",
          "type": {
            "type": "enum",
            "values": [
              "1",
              "0.25"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Megapixels"
          },
          "default": "1",
          "title": "Megapixels",
          "description": "Approximate number of megapixels for generated image"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of outputs to generate",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "16:9",
              "21:9",
              "3:2",
              "2:3",
              "4:5",
              "5:4",
              "3:4",
              "4:3",
              "9:16",
              "9:21",
              "custom"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "1:1",
          "title": "Aspect Ratio",
          "description": "Aspect ratio for the generated image. If custom is selected, uses height and width below & will run in bf16 mode"
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 3,
          "title": "Guidance Scale",
          "description": "Guidance scale for the diffusion process. Lower values can give more realistic images. Good values to try are 2, 2.5, 3 and 3.5",
          "min": 0.0,
          "max": 10.0
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 80,
          "title": "Output Quality",
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "prompt_strength",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Prompt Strength",
          "description": "Prompt strength when using img2img. 1.0 corresponds to full destruction of information in image",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "extra_lora_scale",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Extra Lora Scale",
          "description": "Determines how strongly the extra LoRA should be applied. Sane results between 0 and 1 for base inference. For go_fast we apply a 1.5x multiplier to this value; we've generally seen good performance when scaling the base value by that amount. You may still need to experiment to find the best value for your particular lora.",
          "min": -1.0,
          "max": 3.0
        },
        {
          "name": "replicate_weights",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Replicate Weights",
          "description": "Load LoRA weights. Supports Replicate models in the format <owner>/<username> or <owner>/<username>/<version>, HuggingFace URLs in the format huggingface.co/<owner>/<model-name>, CivitAI URLs in the format civitai.com/models/<id>[/<model-name>], or arbitrary .safetensors URLs from the Internet. For example, 'fofr/flux-pixar-cars'"
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 28,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps. More steps can give more detailed images, but take longer.",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://replicate.delivery/yhqm/ZehHgBlLml30R64OxKegcYEHlzGgd0rcIrf5ejXaFK5VuPMNB/out-0.webp",
        "created_at": "2024-08-15T22:48:12.421764Z",
        "description": "A flux lora fine-tuned on black light images",
        "github_url": null,
        "license_url": null,
        "name": "flux-black-light",
        "owner": "fofr",
        "paper_url": null,
        "run_count": 1014762,
        "url": "https://replicate.com/fofr/flux-black-light",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "mask",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Flux Canny Dev",
      "description": "Open-weight edge-guided image generation. Control structure and composition using Canny edge detection.",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Flux_Canny_Dev",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Prompt for generated image"
        },
        {
          "name": "guidance",
          "type": {
            "type": "float"
          },
          "default": 30,
          "title": "Guidance",
          "description": "Guidance for generated image",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "megapixels",
          "type": {
            "type": "enum",
            "values": [
              "1",
              "0.25",
              "match_input"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Megapixels"
          },
          "default": "1",
          "title": "Megapixels",
          "description": "Approximate number of megapixels for generated image. Use match_input to match the size of the input (with an upper limit of 1440x1440 pixels)"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of outputs to generate",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "control_image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Control Image",
          "description": "Image used to control the generation. The canny edge detection will be automatically generated."
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 80,
          "title": "Output Quality",
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 28,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps. Recommended range is 28-50, and lower number of steps produce lower quality outputs, faster.",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/788cf228-ae38-473a-a992-1e650aab0519/flux-canny-dev.jpg",
        "created_at": "2024-11-20T20:49:32.818286Z",
        "description": "Open-weight edge-guided image generation. Control structure and composition using Canny edge detection.",
        "github_url": null,
        "license_url": "https://github.com/black-forest-labs/flux/blob/main/model_licenses/LICENSE-FLUX1-dev",
        "name": "flux-canny-dev",
        "owner": "black-forest-labs",
        "paper_url": null,
        "run_count": 46065,
        "url": "https://replicate.com/black-forest-labs/flux-canny-dev",
        "visibility": "public",
        "weights_url": "https://huggingface.co/black-forest-labs/FLUX.1-Canny-dev"
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "prompt",
        "guidance"
      ],
      "is_dynamic": false
    },
    {
      "title": "Flux Canny Pro",
      "description": "Professional edge-guided image generation. Control structure and composition using Canny edge detection",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Flux_Canny_Pro",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "steps",
          "type": {
            "type": "int"
          },
          "default": 50,
          "title": "Steps",
          "description": "Number of diffusion steps. Higher values yield finer details but increase processing time.",
          "min": 15.0,
          "max": 50.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Text prompt for image generation"
        },
        {
          "name": "guidance",
          "type": {
            "type": "float"
          },
          "default": 30,
          "title": "Guidance",
          "description": "Controls the balance between adherence to the text as well as image prompt and image quality/diversity. Higher values make the output more closely match the prompt but may reduce overall image quality. Lower values allow for more creative freedom but might produce results less relevant to the prompt.",
          "min": 1.0,
          "max": 100.0
        },
        {
          "name": "control_image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Control Image",
          "description": "Image to use as control input. Must be jpeg, png, gif, or webp."
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "jpg",
          "title": "Output Format",
          "description": "Format of the output images."
        },
        {
          "name": "safety_tolerance",
          "type": {
            "type": "int"
          },
          "default": 2,
          "title": "Safety Tolerance",
          "description": "Safety tolerance, 1 is most strict and 6 is most permissive",
          "min": 1.0,
          "max": 6.0
        },
        {
          "name": "prompt_upsampling",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Prompt Upsampling",
          "description": "Automatically modify the prompt for more creative generation"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/4c07cacc-d206-4587-9357-8e4e81cd761a/https___replicate.deli_lsMxQWe.jpg",
        "created_at": "2024-11-21T09:53:08.913764Z",
        "description": "Professional edge-guided image generation. Control structure and composition using Canny edge detection",
        "github_url": null,
        "license_url": "https://replicate.com/black-forest-labs/flux-canny-pro#license",
        "name": "flux-canny-pro",
        "owner": "black-forest-labs",
        "paper_url": null,
        "run_count": 121407,
        "url": "https://replicate.com/black-forest-labs/flux-canny-pro",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "steps",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Flux Cinestill",
      "description": "Flux lora, use \"CNSTLL\" to trigger",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Flux_Cinestill",
      "layout": "default",
      "properties": [
        {
          "name": "mask",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Mask",
          "description": "Image mask for image inpainting mode. If provided, aspect_ratio, width, and height inputs are ignored."
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image for image to image or inpainting mode. If provided, aspect_ratio, width, and height inputs are ignored."
        },
        {
          "name": "model",
          "type": {
            "type": "enum",
            "values": [
              "dev",
              "schnell"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Model"
          },
          "default": "dev",
          "title": "Model",
          "description": "Which model to run inference with. The dev model performs best with around 28 inference steps but the schnell model only needs 4 steps."
        },
        {
          "name": "width",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Width",
          "description": "Width of generated image. Only works if `aspect_ratio` is set to custom. Will be rounded to nearest multiple of 16. Incompatible with fast generation",
          "min": 256.0,
          "max": 1440.0
        },
        {
          "name": "height",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Height",
          "description": "Height of generated image. Only works if `aspect_ratio` is set to custom. Will be rounded to nearest multiple of 16. Incompatible with fast generation",
          "min": 256.0,
          "max": 1440.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Prompt for generated image. If you include the `trigger_word` used in the training process you are more likely to activate the trained object, style, or concept in the resulting image."
        },
        {
          "name": "go_fast",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Go Fast",
          "description": "Run faster predictions with model optimized for speed (currently fp8 quantized); disable to run in original bf16"
        },
        {
          "name": "extra_lora",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Extra Lora",
          "description": "Load LoRA weights. Supports Replicate models in the format <owner>/<username> or <owner>/<username>/<version>, HuggingFace URLs in the format huggingface.co/<owner>/<model-name>, CivitAI URLs in the format civitai.com/models/<id>[/<model-name>], or arbitrary .safetensors URLs from the Internet. For example, 'fofr/flux-pixar-cars'"
        },
        {
          "name": "lora_scale",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Lora Scale",
          "description": "Determines how strongly the main LoRA should be applied. Sane results between 0 and 1 for base inference. For go_fast we apply a 1.5x multiplier to this value; we've generally seen good performance when scaling the base value by that amount. You may still need to experiment to find the best value for your particular lora.",
          "min": -1.0,
          "max": 3.0
        },
        {
          "name": "megapixels",
          "type": {
            "type": "enum",
            "values": [
              "1",
              "0.25"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Megapixels"
          },
          "default": "1",
          "title": "Megapixels",
          "description": "Approximate number of megapixels for generated image"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of outputs to generate",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "16:9",
              "21:9",
              "3:2",
              "2:3",
              "4:5",
              "5:4",
              "3:4",
              "4:3",
              "9:16",
              "9:21",
              "custom"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "1:1",
          "title": "Aspect Ratio",
          "description": "Aspect ratio for the generated image. If custom is selected, uses height and width below & will run in bf16 mode"
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 3,
          "title": "Guidance Scale",
          "description": "Guidance scale for the diffusion process. Lower values can give more realistic images. Good values to try are 2, 2.5, 3 and 3.5",
          "min": 0.0,
          "max": 10.0
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 80,
          "title": "Output Quality",
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "prompt_strength",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Prompt Strength",
          "description": "Prompt strength when using img2img. 1.0 corresponds to full destruction of information in image",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "extra_lora_scale",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Extra Lora Scale",
          "description": "Determines how strongly the extra LoRA should be applied. Sane results between 0 and 1 for base inference. For go_fast we apply a 1.5x multiplier to this value; we've generally seen good performance when scaling the base value by that amount. You may still need to experiment to find the best value for your particular lora.",
          "min": -1.0,
          "max": 3.0
        },
        {
          "name": "replicate_weights",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Replicate Weights",
          "description": "Load LoRA weights. Supports Replicate models in the format <owner>/<username> or <owner>/<username>/<version>, HuggingFace URLs in the format huggingface.co/<owner>/<model-name>, CivitAI URLs in the format civitai.com/models/<id>[/<model-name>], or arbitrary .safetensors URLs from the Internet. For example, 'fofr/flux-pixar-cars'"
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 28,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps. More steps can give more detailed images, but take longer.",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/2838391b-a106-4d81-b0ff-68aa5a0b9367/cinestill.png",
        "created_at": "2024-08-24T10:28:41.876414Z",
        "description": "Flux lora, use \"CNSTLL\" to trigger",
        "github_url": null,
        "license_url": null,
        "name": "flux-cinestill",
        "owner": "adirik",
        "paper_url": null,
        "run_count": 82555,
        "url": "https://replicate.com/adirik/flux-cinestill",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "mask",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Flux Depth Dev",
      "description": "Open-weight depth-aware image generation. Edit images while preserving spatial relationships.",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Flux_Depth_Dev",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Prompt for generated image"
        },
        {
          "name": "guidance",
          "type": {
            "type": "float"
          },
          "default": 10,
          "title": "Guidance",
          "description": "Guidance for generated image",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "megapixels",
          "type": {
            "type": "enum",
            "values": [
              "1",
              "0.25",
              "match_input"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Megapixels"
          },
          "default": "1",
          "title": "Megapixels",
          "description": "Approximate number of megapixels for generated image. Use match_input to match the size of the input (with an upper limit of 1440x1440 pixels)"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of outputs to generate",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "control_image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Control Image",
          "description": "Image used to control the generation. The depth map will be automatically generated."
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 80,
          "title": "Output Quality",
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 28,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps. Recommended range is 28-50, and lower number of steps produce lower quality outputs, faster.",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/4cfef8f5-5fcb-413c-bdaa-d6d4f41e5930/flux-depth-dev.jpg",
        "created_at": "2024-11-20T20:49:48.670385Z",
        "description": "Open-weight depth-aware image generation. Edit images while preserving spatial relationships.",
        "github_url": null,
        "license_url": "https://github.com/black-forest-labs/flux/blob/main/model_licenses/LICENSE-FLUX1-dev",
        "name": "flux-depth-dev",
        "owner": "black-forest-labs",
        "paper_url": null,
        "run_count": 104062,
        "url": "https://replicate.com/black-forest-labs/flux-depth-dev",
        "visibility": "public",
        "weights_url": "https://huggingface.co/black-forest-labs/FLUX.1-Depth-dev"
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "prompt",
        "guidance"
      ],
      "is_dynamic": false
    },
    {
      "title": "Flux Depth Pro",
      "description": "Professional depth-aware image generation. Edit images while preserving spatial relationships.",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Flux_Depth_Pro",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "steps",
          "type": {
            "type": "int"
          },
          "default": 50,
          "title": "Steps",
          "description": "Number of diffusion steps. Higher values yield finer details but increase processing time.",
          "min": 15.0,
          "max": 50.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Text prompt for image generation"
        },
        {
          "name": "guidance",
          "type": {
            "type": "float"
          },
          "default": 15,
          "title": "Guidance",
          "description": "Controls the balance between adherence to the text as well as image prompt and image quality/diversity. Higher values make the output more closely match the prompt but may reduce overall image quality. Lower values allow for more creative freedom but might produce results less relevant to the prompt.",
          "min": 1.0,
          "max": 100.0
        },
        {
          "name": "control_image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Control Image",
          "description": "Image to use as control input. Must be jpeg, png, gif, or webp."
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "jpg",
          "title": "Output Format",
          "description": "Format of the output images."
        },
        {
          "name": "safety_tolerance",
          "type": {
            "type": "int"
          },
          "default": 2,
          "title": "Safety Tolerance",
          "description": "Safety tolerance, 1 is most strict and 6 is most permissive",
          "min": 1.0,
          "max": 6.0
        },
        {
          "name": "prompt_upsampling",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Prompt Upsampling",
          "description": "Automatically modify the prompt for more creative generation"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/e365ecff-4023-49f8-96ba-abd710c4bdd9/https___replicate.deliver_xWYu8lC.jpg",
        "created_at": "2024-11-21T09:53:00.631446Z",
        "description": "Professional depth-aware image generation. Edit images while preserving spatial relationships.",
        "github_url": null,
        "license_url": "https://replicate.com/black-forest-labs/flux-depth-pro#license",
        "name": "flux-depth-pro",
        "owner": "black-forest-labs",
        "paper_url": null,
        "run_count": 76868,
        "url": "https://replicate.com/black-forest-labs/flux-depth-pro",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "steps",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Flux Dev",
      "description": "A 12 billion parameter rectified flow transformer capable of generating images from text descriptions",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Flux_Dev",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "image",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Image",
          "description": "Input image for image to image mode. The aspect ratio of your output will match this image"
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Prompt for generated image"
        },
        {
          "name": "go_fast",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Go Fast",
          "description": "Run faster predictions with model optimized for speed (currently fp8 quantized); disable to run in original bf16"
        },
        {
          "name": "guidance",
          "type": {
            "type": "float"
          },
          "default": 3,
          "title": "Guidance",
          "description": "Guidance for generated image",
          "min": 0.0,
          "max": 10.0
        },
        {
          "name": "megapixels",
          "type": {
            "type": "enum",
            "values": [
              "1",
              "0.25"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Megapixels"
          },
          "default": "1",
          "title": "Megapixels",
          "description": "Approximate number of megapixels for generated image"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of outputs to generate",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "16:9",
              "21:9",
              "3:2",
              "2:3",
              "4:5",
              "5:4",
              "3:4",
              "4:3",
              "9:16",
              "9:21"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "1:1",
          "title": "Aspect Ratio",
          "description": "Aspect ratio for the generated image"
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 80,
          "title": "Output Quality",
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "prompt_strength",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Prompt Strength",
          "description": "Prompt strength when using img2img. 1.0 corresponds to full destruction of information in image",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 28,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps. Recommended range is 28-50, and lower number of steps produce lower quality outputs, faster.",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/cb4203e5-9ece-42e7-b326-98ff3fa35c3a/Replicate_Prediction_15.webp",
        "created_at": "2024-07-29T23:25:06.100855Z",
        "description": "A 12 billion parameter rectified flow transformer capable of generating images from text descriptions",
        "github_url": "https://github.com/replicate/cog-flux",
        "license_url": "https://github.com/black-forest-labs/flux/blob/main/model_licenses/LICENSE-FLUX1-dev",
        "name": "flux-dev",
        "owner": "black-forest-labs",
        "paper_url": null,
        "run_count": 12701895,
        "url": "https://replicate.com/black-forest-labs/flux-dev",
        "visibility": "public",
        "weights_url": "https://huggingface.co/black-forest-labs/FLUX.1-dev"
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "image",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Flux Dev Lora",
      "description": "A version of flux-dev, a text to image model, that supports fast fine-tuned lora inference",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Flux_Dev_Lora",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image for image to image mode. The aspect ratio of your output will match this image"
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Prompt for generated image"
        },
        {
          "name": "go_fast",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Go Fast",
          "description": "Run faster predictions with model optimized for speed (currently fp8 quantized); disable to run in original bf16"
        },
        {
          "name": "guidance",
          "type": {
            "type": "float"
          },
          "default": 3,
          "title": "Guidance",
          "description": "Guidance for generated image",
          "min": 0.0,
          "max": 10.0
        },
        {
          "name": "lora_scale",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Lora Scale",
          "description": "Determines how strongly the main LoRA should be applied. Sane results between 0 and 1 for base inference. For go_fast we apply a 1.5x multiplier to this value; we've generally seen good performance when scaling the base value by that amount. You may still need to experiment to find the best value for your particular lora.",
          "min": -1.0,
          "max": 3.0
        },
        {
          "name": "megapixels",
          "type": {
            "type": "enum",
            "values": [
              "1",
              "0.25"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Megapixels"
          },
          "default": "1",
          "title": "Megapixels",
          "description": "Approximate number of megapixels for generated image"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of outputs to generate",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "16:9",
              "21:9",
              "3:2",
              "2:3",
              "4:5",
              "5:4",
              "3:4",
              "4:3",
              "9:16",
              "9:21"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "1:1",
          "title": "Aspect Ratio",
          "description": "Aspect ratio for the generated image"
        },
        {
          "name": "lora_weights",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Lora Weights",
          "description": "Load LoRA weights. Supports Replicate models in the format <owner>/<username> or <owner>/<username>/<version>, HuggingFace URLs in the format huggingface.co/<owner>/<model-name>, CivitAI URLs in the format civitai.com/models/<id>[/<model-name>], or arbitrary .safetensors URLs from the Internet. For example, 'fofr/flux-pixar-cars'"
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 80,
          "title": "Output Quality",
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "prompt_strength",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Prompt Strength",
          "description": "Prompt strength when using img2img. 1.0 corresponds to full destruction of information in image",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 28,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps. Recommended range is 28-50",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/a79cc4a8-318c-4316-a800-097ef0bdce7a/https___replicate.del_25H5GQ7.webp",
        "created_at": "2024-11-11T23:03:07.000926Z",
        "description": "A version of flux-dev, a text to image model, that supports fast fine-tuned lora inference",
        "github_url": "https://github.com/replicate/cog-flux",
        "license_url": "https://github.com/black-forest-labs/flux/blob/main/model_licenses/LICENSE-FLUX1-dev",
        "name": "flux-dev-lora",
        "owner": "black-forest-labs",
        "paper_url": null,
        "run_count": 381936,
        "url": "https://replicate.com/black-forest-labs/flux-dev-lora",
        "visibility": "public",
        "weights_url": "https://huggingface.co/black-forest-labs/FLUX.1-dev"
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "image",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Flux Fill Dev",
      "description": "Open-weight inpainting model for editing and extending images. Guidance-distilled from FLUX.1 Fill [pro].",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Flux_Fill_Dev",
      "layout": "default",
      "properties": [
        {
          "name": "mask",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Mask",
          "description": "A black-and-white image that describes the part of the image to inpaint. Black areas will be preserved while white areas will be inpainted."
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "image",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Image",
          "description": "The image to inpaint. Can contain alpha mask. If the image width or height are not multiples of 32, they will be scaled to the closest multiple of 32. If the image dimensions don't fit within 1440x1440, it will be scaled down to fit."
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Prompt for generated image"
        },
        {
          "name": "guidance",
          "type": {
            "type": "float"
          },
          "default": 30,
          "title": "Guidance",
          "description": "Guidance for generated image",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "lora_scale",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Lora Scale",
          "description": "Determines how strongly the main LoRA should be applied. Sane results between 0 and 1 for base inference. For go_fast we apply a 1.5x multiplier to this value; we've generally seen good performance when scaling the base value by that amount. You may still need to experiment to find the best value for your particular lora.",
          "min": -1.0,
          "max": 3.0
        },
        {
          "name": "megapixels",
          "type": {
            "type": "enum",
            "values": [
              "1",
              "0.25",
              "match_input"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Megapixels"
          },
          "default": "1",
          "title": "Megapixels",
          "description": "Approximate number of megapixels for generated image. Use match_input to match the size of the input (with an upper limit of 1440x1440 pixels)"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of outputs to generate",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "lora_weights",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Lora Weights",
          "description": "Load LoRA weights. Supports Replicate models in the format <owner>/<username> or <owner>/<username>/<version>, HuggingFace URLs in the format huggingface.co/<owner>/<model-name>, CivitAI URLs in the format civitai.com/models/<id>[/<model-name>], or arbitrary .safetensors URLs from the Internet. For example, 'fofr/flux-pixar-cars'"
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 80,
          "title": "Output Quality",
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 28,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps. Recommended range is 28-50, and lower number of steps produce lower quality outputs, faster.",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/b109cc9e-f3c2-4899-8428-df46a988c3f0/https___replicate.deliver_tmlMO9j.jpg",
        "created_at": "2024-11-20T20:49:17.667435Z",
        "description": "Open-weight inpainting model for editing and extending images. Guidance-distilled from FLUX.1 Fill [pro].",
        "github_url": null,
        "license_url": "https://github.com/black-forest-labs/flux/blob/main/model_licenses/LICENSE-FLUX1-dev",
        "name": "flux-fill-dev",
        "owner": "black-forest-labs",
        "paper_url": null,
        "run_count": 137464,
        "url": "https://replicate.com/black-forest-labs/flux-fill-dev",
        "visibility": "public",
        "weights_url": "https://huggingface.co/black-forest-labs/FLUX.1-Fill-dev"
      },
      "recommended_models": [],
      "basic_fields": [
        "mask",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Flux Fill Pro",
      "description": "Professional inpainting and outpainting model with state-of-the-art performance. Edit or extend images with natural, seamless results.",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Flux_Fill_Pro",
      "layout": "default",
      "properties": [
        {
          "name": "mask",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Mask",
          "description": "A black-and-white image that describes the part of the image to inpaint. Black areas will be preserved while white areas will be inpainted. Must have the same size as image. Optional if you provide an alpha mask in the original image. Must be jpeg, png, gif, or webp."
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "image",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Image",
          "description": "The image to inpaint. Can contain an alpha mask. Must be jpeg, png, gif, or webp."
        },
        {
          "name": "steps",
          "type": {
            "type": "int"
          },
          "default": 50,
          "title": "Steps",
          "description": "Number of diffusion steps. Higher values yield finer details but increase processing time.",
          "min": 15.0,
          "max": 50.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Text prompt for image generation"
        },
        {
          "name": "guidance",
          "type": {
            "type": "float"
          },
          "default": 60,
          "title": "Guidance",
          "description": "Controls the balance between adherence to the text prompt and image quality/diversity. Higher values make the output more closely match the prompt but may reduce overall image quality. Lower values allow for more creative freedom but might produce results less relevant to the prompt.",
          "min": 1.5,
          "max": 100.0
        },
        {
          "name": "outpaint",
          "type": {
            "type": "enum",
            "values": [
              "None",
              "Zoom out 1.5x",
              "Zoom out 2x",
              "Make square",
              "Left outpaint",
              "Right outpaint",
              "Top outpaint",
              "Bottom outpaint"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Outpaint"
          },
          "default": "None",
          "title": "Outpaint",
          "description": "A quick option for outpainting an input image. Mask will be ignored."
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "jpg",
          "title": "Output Format",
          "description": "Format of the output images."
        },
        {
          "name": "safety_tolerance",
          "type": {
            "type": "int"
          },
          "default": 2,
          "title": "Safety Tolerance",
          "description": "Safety tolerance, 1 is most strict and 6 is most permissive",
          "min": 1.0,
          "max": 6.0
        },
        {
          "name": "prompt_upsampling",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Prompt Upsampling",
          "description": "Automatically modify the prompt for more creative generation"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/13571f4b-d677-404f-bff0-ad44da9d5fa0/https___replicate.deli_llwvezd.jpg",
        "created_at": "2024-11-20T20:56:37.431006Z",
        "description": "Professional inpainting and outpainting model with state-of-the-art performance. Edit or extend images with natural, seamless results.",
        "github_url": null,
        "license_url": "https://replicate.com/black-forest-labs/flux-fill-pro#license",
        "name": "flux-fill-pro",
        "owner": "black-forest-labs",
        "paper_url": null,
        "run_count": 346444,
        "url": "https://replicate.com/black-forest-labs/flux-fill-pro",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "mask",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Flux Mona Lisa",
      "description": "Flux lora, use the term \"MNALSA\" to trigger generation",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Flux_Mona_Lisa",
      "layout": "default",
      "properties": [
        {
          "name": "mask",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Mask",
          "description": "Image mask for image inpainting mode. If provided, aspect_ratio, width, and height inputs are ignored."
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image for image to image or inpainting mode. If provided, aspect_ratio, width, and height inputs are ignored."
        },
        {
          "name": "model",
          "type": {
            "type": "enum",
            "values": [
              "dev",
              "schnell"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Model"
          },
          "default": "dev",
          "title": "Model",
          "description": "Which model to run inference with. The dev model performs best with around 28 inference steps but the schnell model only needs 4 steps."
        },
        {
          "name": "width",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Width",
          "description": "Width of generated image. Only works if `aspect_ratio` is set to custom. Will be rounded to nearest multiple of 16. Incompatible with fast generation",
          "min": 256.0,
          "max": 1440.0
        },
        {
          "name": "height",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Height",
          "description": "Height of generated image. Only works if `aspect_ratio` is set to custom. Will be rounded to nearest multiple of 16. Incompatible with fast generation",
          "min": 256.0,
          "max": 1440.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Prompt for generated image. If you include the `trigger_word` used in the training process you are more likely to activate the trained object, style, or concept in the resulting image."
        },
        {
          "name": "go_fast",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Go Fast",
          "description": "Run faster predictions with model optimized for speed (currently fp8 quantized); disable to run in original bf16"
        },
        {
          "name": "extra_lora",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Extra Lora",
          "description": "Load LoRA weights. Supports Replicate models in the format <owner>/<username> or <owner>/<username>/<version>, HuggingFace URLs in the format huggingface.co/<owner>/<model-name>, CivitAI URLs in the format civitai.com/models/<id>[/<model-name>], or arbitrary .safetensors URLs from the Internet. For example, 'fofr/flux-pixar-cars'"
        },
        {
          "name": "lora_scale",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Lora Scale",
          "description": "Determines how strongly the main LoRA should be applied. Sane results between 0 and 1 for base inference. For go_fast we apply a 1.5x multiplier to this value; we've generally seen good performance when scaling the base value by that amount. You may still need to experiment to find the best value for your particular lora.",
          "min": -1.0,
          "max": 3.0
        },
        {
          "name": "megapixels",
          "type": {
            "type": "enum",
            "values": [
              "1",
              "0.25"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Megapixels"
          },
          "default": "1",
          "title": "Megapixels",
          "description": "Approximate number of megapixels for generated image"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of outputs to generate",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "16:9",
              "21:9",
              "3:2",
              "2:3",
              "4:5",
              "5:4",
              "3:4",
              "4:3",
              "9:16",
              "9:21",
              "custom"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "1:1",
          "title": "Aspect Ratio",
          "description": "Aspect ratio for the generated image. If custom is selected, uses height and width below & will run in bf16 mode"
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 3,
          "title": "Guidance Scale",
          "description": "Guidance scale for the diffusion process. Lower values can give more realistic images. Good values to try are 2, 2.5, 3 and 3.5",
          "min": 0.0,
          "max": 10.0
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 80,
          "title": "Output Quality",
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "prompt_strength",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Prompt Strength",
          "description": "Prompt strength when using img2img. 1.0 corresponds to full destruction of information in image",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "extra_lora_scale",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Extra Lora Scale",
          "description": "Determines how strongly the extra LoRA should be applied. Sane results between 0 and 1 for base inference. For go_fast we apply a 1.5x multiplier to this value; we've generally seen good performance when scaling the base value by that amount. You may still need to experiment to find the best value for your particular lora.",
          "min": -1.0,
          "max": 3.0
        },
        {
          "name": "replicate_weights",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Replicate Weights",
          "description": "Load LoRA weights. Supports Replicate models in the format <owner>/<username> or <owner>/<username>/<version>, HuggingFace URLs in the format huggingface.co/<owner>/<model-name>, CivitAI URLs in the format civitai.com/models/<id>[/<model-name>], or arbitrary .safetensors URLs from the Internet. For example, 'fofr/flux-pixar-cars'"
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 28,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps. More steps can give more detailed images, but take longer.",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://replicate.delivery/yhqm/apYK6kZFfZUYRyoJ11NzhHY2YXbrjCHajYIiN9EznGR4qVrJA/out-0.webp",
        "created_at": "2024-08-26T21:32:24.116430Z",
        "description": "Flux lora, use the term \"MNALSA\" to trigger generation",
        "github_url": null,
        "license_url": null,
        "name": "flux-mona-lisa",
        "owner": "fofr",
        "paper_url": null,
        "run_count": 3154,
        "url": "https://replicate.com/fofr/flux-mona-lisa",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "mask",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Flux Pro",
      "description": "State-of-the-art image generation with top of the line prompt following, visual quality, image detail and output diversity.",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Flux_Pro",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "steps",
          "type": {
            "type": "int"
          },
          "default": 25,
          "title": "Steps",
          "description": "Number of diffusion steps",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "width",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Width",
          "description": "Width of the generated image in text-to-image mode. Only used when aspect_ratio=custom. Must be a multiple of 32 (if it's not, it will be rounded to nearest multiple of 32). Note: Ignored in img2img and inpainting modes.",
          "min": 256.0,
          "max": 1440.0
        },
        {
          "name": "height",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Height",
          "description": "Height of the generated image in text-to-image mode. Only used when aspect_ratio=custom. Must be a multiple of 32 (if it's not, it will be rounded to nearest multiple of 32). Note: Ignored in img2img and inpainting modes.",
          "min": 256.0,
          "max": 1440.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Text prompt for image generation"
        },
        {
          "name": "guidance",
          "type": {
            "type": "float"
          },
          "default": 3,
          "title": "Guidance",
          "description": "Controls the balance between adherence to the text prompt and image quality/diversity. Higher values make the output more closely match the prompt but may reduce overall image quality. Lower values allow for more creative freedom but might produce results less relevant to the prompt.",
          "min": 2.0,
          "max": 5.0
        },
        {
          "name": "interval",
          "type": {
            "type": "float"
          },
          "default": 2,
          "title": "Interval",
          "description": "Interval is a setting that increases the variance in possible outputs letting the model be a tad more dynamic in what outputs it may produce in terms of composition, color, detail, and prompt interpretation. Setting this value low will ensure strong prompt following with more consistent outputs, setting it higher will produce more dynamic or varied outputs.",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "custom",
              "1:1",
              "16:9",
              "3:2",
              "2:3",
              "4:5",
              "5:4",
              "9:16",
              "3:4",
              "4:3"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "1:1",
          "title": "Aspect Ratio",
          "description": "Aspect ratio for the generated image"
        },
        {
          "name": "image_prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Image Prompt",
          "description": "Image to use with Flux Redux. This is used together with the text prompt to guide the generation towards the composition of the image_prompt. Must be jpeg, png, gif, or webp."
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images."
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 80,
          "title": "Output Quality",
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "safety_tolerance",
          "type": {
            "type": "int"
          },
          "default": 2,
          "title": "Safety Tolerance",
          "description": "Safety tolerance, 1 is most strict and 6 is most permissive",
          "min": 1.0,
          "max": 6.0
        },
        {
          "name": "prompt_upsampling",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Prompt Upsampling",
          "description": "Automatically modify the prompt for more creative generation"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/a36275e2-34d4-4b3d-83cd-f9aaf73c9386/https___replicate.delive_o40qpZl.webp",
        "created_at": "2024-08-01T09:32:10.863297Z",
        "description": "State-of-the-art image generation with top of the line prompt following, visual quality, image detail and output diversity.",
        "github_url": null,
        "license_url": "https://replicate.com/black-forest-labs/flux-pro#license",
        "name": "flux-pro",
        "owner": "black-forest-labs",
        "paper_url": null,
        "run_count": 9724775,
        "url": "https://replicate.com/black-forest-labs/flux-pro",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "steps",
        "width"
      ],
      "is_dynamic": false
    },
    {
      "title": "Flux Redux Dev",
      "description": "Open-weight image variation model. Create new versions while preserving key elements of your original.",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Flux_Redux_Dev",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "guidance",
          "type": {
            "type": "float"
          },
          "default": 3,
          "title": "Guidance",
          "description": "Guidance for generated image",
          "min": 0.0,
          "max": 10.0
        },
        {
          "name": "megapixels",
          "type": {
            "type": "enum",
            "values": [
              "1",
              "0.25"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Megapixels"
          },
          "default": "1",
          "title": "Megapixels",
          "description": "Approximate number of megapixels for generated image"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of outputs to generate",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "redux_image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Redux Image",
          "description": "Input image to condition your output on. This replaces prompt for FLUX.1 Redux models"
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "16:9",
              "21:9",
              "3:2",
              "2:3",
              "4:5",
              "5:4",
              "3:4",
              "4:3",
              "9:16",
              "9:21"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "1:1",
          "title": "Aspect Ratio",
          "description": "Aspect ratio for the generated image"
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 80,
          "title": "Output Quality",
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 28,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps. Recommended range is 28-50",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/daff59ba-540d-4111-a969-9119ee814f26/redux-cover.jpg",
        "created_at": "2024-11-20T22:29:45.623102Z",
        "description": "Open-weight image variation model. Create new versions while preserving key elements of your original.",
        "github_url": null,
        "license_url": "https://github.com/black-forest-labs/flux/blob/main/model_licenses/LICENSE-FLUX1-dev",
        "name": "flux-redux-dev",
        "owner": "black-forest-labs",
        "paper_url": null,
        "run_count": 116479,
        "url": "https://replicate.com/black-forest-labs/flux-redux-dev",
        "visibility": "public",
        "weights_url": "https://huggingface.co/black-forest-labs/FLUX.1-Redux-dev"
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "guidance",
        "megapixels"
      ],
      "is_dynamic": false
    },
    {
      "title": "Flux Redux Schnell",
      "description": "Fast, efficient image variation model for rapid iteration and experimentation.",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Flux_Redux_Schnell",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "megapixels",
          "type": {
            "type": "enum",
            "values": [
              "1",
              "0.25"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Megapixels"
          },
          "default": "1",
          "title": "Megapixels",
          "description": "Approximate number of megapixels for generated image"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of outputs to generate",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "redux_image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Redux Image",
          "description": "Input image to condition your output on. This replaces prompt for FLUX.1 Redux models"
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "16:9",
              "21:9",
              "3:2",
              "2:3",
              "4:5",
              "5:4",
              "3:4",
              "4:3",
              "9:16",
              "9:21"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "1:1",
          "title": "Aspect Ratio",
          "description": "Aspect ratio for the generated image"
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 80,
          "title": "Output Quality",
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 4,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps. 4 is recommended, and lower number of steps produce lower quality outputs, faster.",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/828d2d38-465e-4a65-a979-1f661000e978/https___replicate.deliver_018es9x.jpg",
        "created_at": "2024-11-20T22:30:41.021241Z",
        "description": "Fast, efficient image variation model for rapid iteration and experimentation.",
        "github_url": null,
        "license_url": "https://github.com/black-forest-labs/flux/blob/main/model_licenses/LICENSE-FLUX1-schnell",
        "name": "flux-redux-schnell",
        "owner": "black-forest-labs",
        "paper_url": null,
        "run_count": 21104,
        "url": "https://replicate.com/black-forest-labs/flux-redux-schnell",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "megapixels",
        "num_outputs"
      ],
      "is_dynamic": false
    },
    {
      "title": "Flux Schnell",
      "description": "The fastest image generation model tailored for local development and personal use",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Flux_Schnell",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Prompt for generated image"
        },
        {
          "name": "go_fast",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Go Fast",
          "description": "Run faster predictions with model optimized for speed (currently fp8 quantized); disable to run in original bf16"
        },
        {
          "name": "megapixels",
          "type": {
            "type": "enum",
            "values": [
              "1",
              "0.25"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Megapixels"
          },
          "default": "1",
          "title": "Megapixels",
          "description": "Approximate number of megapixels for generated image"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of outputs to generate",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "16:9",
              "21:9",
              "3:2",
              "2:3",
              "4:5",
              "5:4",
              "3:4",
              "4:3",
              "9:16",
              "9:21"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "1:1",
          "title": "Aspect Ratio",
          "description": "Aspect ratio for the generated image"
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 80,
          "title": "Output Quality",
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 4,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps. 4 is recommended, and lower number of steps produce lower quality outputs, faster.",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/67c990ba-bb67-4355-822f-2bd8c42b2f0d/flux-schnell.webp",
        "created_at": "2024-07-30T00:32:11.473557Z",
        "description": "The fastest image generation model tailored for local development and personal use",
        "github_url": "https://github.com/replicate/cog-flux",
        "license_url": "https://github.com/black-forest-labs/flux/blob/main/model_licenses/LICENSE-FLUX1-schnell",
        "name": "flux-schnell",
        "owner": "black-forest-labs",
        "paper_url": null,
        "run_count": 238515812,
        "url": "https://replicate.com/black-forest-labs/flux-schnell",
        "visibility": "public",
        "weights_url": "https://huggingface.co/black-forest-labs/FLUX.1-schnell"
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "prompt",
        "go_fast"
      ],
      "is_dynamic": false
    },
    {
      "title": "Flux Schnell Lora",
      "description": "The fastest image generation model tailored for fine-tuned use",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Flux_Schnell_Lora",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Prompt for generated image"
        },
        {
          "name": "go_fast",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Go Fast",
          "description": "Run faster predictions with model optimized for speed (currently fp8 quantized); disable to run in original bf16"
        },
        {
          "name": "lora_scale",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Lora Scale",
          "description": "Determines how strongly the main LoRA should be applied. Sane results between 0 and 1 for base inference. For go_fast we apply a 1.5x multiplier to this value; we've generally seen good performance when scaling the base value by that amount. You may still need to experiment to find the best value for your particular lora.",
          "min": -1.0,
          "max": 3.0
        },
        {
          "name": "megapixels",
          "type": {
            "type": "enum",
            "values": [
              "1",
              "0.25"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Megapixels"
          },
          "default": "1",
          "title": "Megapixels",
          "description": "Approximate number of megapixels for generated image"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of outputs to generate",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "16:9",
              "21:9",
              "3:2",
              "2:3",
              "4:5",
              "5:4",
              "3:4",
              "4:3",
              "9:16",
              "9:21"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "1:1",
          "title": "Aspect Ratio",
          "description": "Aspect ratio for the generated image"
        },
        {
          "name": "lora_weights",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Lora Weights",
          "description": "Load LoRA weights. Supports Replicate models in the format <owner>/<username> or <owner>/<username>/<version>, HuggingFace URLs in the format huggingface.co/<owner>/<model-name>, CivitAI URLs in the format civitai.com/models/<id>[/<model-name>], or arbitrary .safetensors URLs from the Internet. For example, 'fofr/flux-pixar-cars'"
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 80,
          "title": "Output Quality",
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 4,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps. 4 is recommended, and lower number of steps produce lower quality outputs, faster.",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/98c9bf91-5bc0-4a2d-960f-8c3fcd69f1f3/https___replicate.deliver_a20JvIo.png",
        "created_at": "2024-11-11T23:07:50.986160Z",
        "description": "The fastest image generation model tailored for fine-tuned use",
        "github_url": "https://github.com/replicate/cog-flux",
        "license_url": "https://github.com/black-forest-labs/flux/blob/main/model_licenses/LICENSE-FLUX1-schnell",
        "name": "flux-schnell-lora",
        "owner": "black-forest-labs",
        "paper_url": null,
        "run_count": 608906,
        "url": "https://replicate.com/black-forest-labs/flux-schnell-lora",
        "visibility": "public",
        "weights_url": "https://huggingface.co/black-forest-labs/FLUX.1-schnell"
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "prompt",
        "go_fast"
      ],
      "is_dynamic": false
    },
    {
      "title": "Hyper Flux 8 Step",
      "description": "Hyper FLUX 8-step by ByteDance",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Hyper_Flux_8Step",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "width",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Width",
          "description": "Width of the generated image. Optional, only used when aspect_ratio=custom. Must be a multiple of 16 (if it's not, it will be rounded to nearest multiple of 16)",
          "min": 256.0,
          "max": 1440.0
        },
        {
          "name": "height",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Height",
          "description": "Height of the generated image. Optional, only used when aspect_ratio=custom. Must be a multiple of 16 (if it's not, it will be rounded to nearest multiple of 16)",
          "min": 256.0,
          "max": 1440.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Prompt for generated image"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of images to output.",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "16:9",
              "21:9",
              "3:2",
              "2:3",
              "4:5",
              "5:4",
              "3:4",
              "4:3",
              "9:16",
              "9:21",
              "custom"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "1:1",
          "title": "Aspect Ratio",
          "description": "Aspect ratio for the generated image. The size will always be 1 megapixel, i.e. 1024x1024 if aspect ratio is 1:1. To use arbitrary width and height, set aspect ratio to 'custom'."
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 3.5,
          "title": "Guidance Scale",
          "description": "Guidance scale for the diffusion process",
          "min": 0.0,
          "max": 10.0
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 80,
          "title": "Output Quality",
          "description": "Quality when saving the output images, from 0 to 100. 100 is best quality, 0 is lowest quality. Not relevant for .png outputs",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 8,
          "title": "Num Inference Steps",
          "description": "Number of inference steps",
          "min": 1.0,
          "max": 30.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images. This feature is only available through the API. See [https://replicate.com/docs/how-does-replicate-work#safety](https://replicate.com/docs/how-does-replicate-work#safety)"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://replicate.delivery/yhqm/bKCAFhWFtbafL6Q31fEkfzVUKDUxY3GcdU1KGtR1AfRhcHOOB/out-0.webp",
        "created_at": "2024-08-27T19:33:25.004679Z",
        "description": "Hyper FLUX 8-step by ByteDance",
        "github_url": "https://github.com/lucataco/cog-hyper-flux-8step",
        "license_url": "https://huggingface.co/black-forest-labs/FLUX.1-dev/blob/main/LICENSE.md",
        "name": "hyper-flux-8step",
        "owner": "bytedance",
        "paper_url": "https://arxiv.org/abs/2404.13686",
        "run_count": 6774530,
        "url": "https://replicate.com/bytedance/hyper-flux-8step",
        "visibility": "public",
        "weights_url": "https://huggingface.co/ByteDance/Hyper-SD"
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "width",
        "height"
      ],
      "is_dynamic": false
    },
    {
      "title": "Ideogram V 2",
      "description": "An excellent image model with state of the art inpainting, prompt comprehension and text rendering",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Ideogram_V2",
      "layout": "default",
      "properties": [
        {
          "name": "mask",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Mask",
          "description": "A black and white image. Black pixels are inpainted, white pixels are preserved. The mask will be resized to match the image size."
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "An image file to use for inpainting."
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Text prompt for image generation"
        },
        {
          "name": "resolution",
          "type": {
            "type": "enum",
            "values": [
              "None",
              "512x1536",
              "576x1408",
              "576x1472",
              "576x1536",
              "640x1024",
              "640x1344",
              "640x1408",
              "640x1472",
              "640x1536",
              "704x1152",
              "704x1216",
              "704x1280",
              "704x1344",
              "704x1408",
              "704x1472",
              "720x1280",
              "736x1312",
              "768x1024",
              "768x1088",
              "768x1152",
              "768x1216",
              "768x1232",
              "768x1280",
              "768x1344",
              "832x960",
              "832x1024",
              "832x1088",
              "832x1152",
              "832x1216",
              "832x1248",
              "864x1152",
              "896x960",
              "896x1024",
              "896x1088",
              "896x1120",
              "896x1152",
              "960x832",
              "960x896",
              "960x1024",
              "960x1088",
              "1024x640",
              "1024x768",
              "1024x832",
              "1024x896",
              "1024x960",
              "1024x1024",
              "1088x768",
              "1088x832",
              "1088x896",
              "1088x960",
              "1120x896",
              "1152x704",
              "1152x768",
              "1152x832",
              "1152x864",
              "1152x896",
              "1216x704",
              "1216x768",
              "1216x832",
              "1232x768",
              "1248x832",
              "1280x704",
              "1280x720",
              "1280x768",
              "1280x800",
              "1312x736",
              "1344x640",
              "1344x704",
              "1344x768",
              "1408x576",
              "1408x640",
              "1408x704",
              "1472x576",
              "1472x640",
              "1472x704",
              "1536x512",
              "1536x576",
              "1536x640"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Resolution"
          },
          "default": "None",
          "title": "Resolution",
          "description": "Resolution. Overrides aspect ratio. Ignored if an inpainting image is given."
        },
        {
          "name": "style_type",
          "type": {
            "type": "enum",
            "values": [
              "None",
              "Auto",
              "General",
              "Realistic",
              "Design",
              "Render 3D",
              "Anime"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Style_type"
          },
          "default": "None",
          "title": "Style Type",
          "description": "The styles help define the specific aesthetic of the image you want to generate."
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "16:9",
              "9:16",
              "4:3",
              "3:4",
              "3:2",
              "2:3",
              "16:10",
              "10:16",
              "3:1",
              "1:3"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "1:1",
          "title": "Aspect Ratio",
          "description": "Aspect ratio. Ignored if a resolution or inpainting image is given."
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Negative Prompt",
          "description": "Things you do not want to see in the generated image."
        },
        {
          "name": "magic_prompt_option",
          "type": {
            "type": "enum",
            "values": [
              "Auto",
              "On",
              "Off"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Magic_prompt_option"
          },
          "default": "Auto",
          "title": "Magic Prompt Option",
          "description": "Magic Prompt will interpret your prompt and optimize it to maximize variety and quality of the images generated. You can also use it to write prompts in different languages."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/71c982a3-27f0-42a6-ad6a-769f25097c08/replicate-prediction-s_VROPz1s.png",
        "created_at": "2024-10-22T09:26:23.607119Z",
        "description": "An excellent image model with state of the art inpainting, prompt comprehension and text rendering",
        "github_url": null,
        "license_url": "https://about.ideogram.ai/legal/api-tos",
        "name": "ideogram-v2",
        "owner": "ideogram-ai",
        "paper_url": "https://ideogram.ai/",
        "run_count": 570500,
        "url": "https://replicate.com/ideogram-ai/ideogram-v2",
        "visibility": "public",
        "weights_url": "https://ideogram.ai/"
      },
      "recommended_models": [],
      "basic_fields": [
        "mask",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Ideogram V 2 A",
      "description": "Like Ideogram v2, but faster and cheaper",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Ideogram_V2A",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation",
          "max": 2147483647.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Text prompt for image generation"
        },
        {
          "name": "resolution",
          "type": {
            "type": "enum",
            "values": [
              "None",
              "512x1536",
              "576x1408",
              "576x1472",
              "576x1536",
              "640x1024",
              "640x1344",
              "640x1408",
              "640x1472",
              "640x1536",
              "704x1152",
              "704x1216",
              "704x1280",
              "704x1344",
              "704x1408",
              "704x1472",
              "720x1280",
              "736x1312",
              "768x1024",
              "768x1088",
              "768x1152",
              "768x1216",
              "768x1232",
              "768x1280",
              "768x1344",
              "832x960",
              "832x1024",
              "832x1088",
              "832x1152",
              "832x1216",
              "832x1248",
              "864x1152",
              "896x960",
              "896x1024",
              "896x1088",
              "896x1120",
              "896x1152",
              "960x832",
              "960x896",
              "960x1024",
              "960x1088",
              "1024x640",
              "1024x768",
              "1024x832",
              "1024x896",
              "1024x960",
              "1024x1024",
              "1088x768",
              "1088x832",
              "1088x896",
              "1088x960",
              "1120x896",
              "1152x704",
              "1152x768",
              "1152x832",
              "1152x864",
              "1152x896",
              "1216x704",
              "1216x768",
              "1216x832",
              "1232x768",
              "1248x832",
              "1280x704",
              "1280x720",
              "1280x768",
              "1280x800",
              "1312x736",
              "1344x640",
              "1344x704",
              "1344x768",
              "1408x576",
              "1408x640",
              "1408x704",
              "1472x576",
              "1472x640",
              "1472x704",
              "1536x512",
              "1536x576",
              "1536x640"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Resolution"
          },
          "default": "None",
          "title": "Resolution",
          "description": "Resolution. Overrides aspect ratio. Ignored if an inpainting image is given."
        },
        {
          "name": "style_type",
          "type": {
            "type": "enum",
            "values": [
              "None",
              "Auto",
              "General",
              "Realistic",
              "Design",
              "Render 3D",
              "Anime"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Style_type"
          },
          "default": "None",
          "title": "Style Type",
          "description": "The styles help define the specific aesthetic of the image you want to generate."
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "16:9",
              "9:16",
              "4:3",
              "3:4",
              "3:2",
              "2:3",
              "16:10",
              "10:16",
              "3:1",
              "1:3"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "1:1",
          "title": "Aspect Ratio",
          "description": "Aspect ratio. Ignored if a resolution or inpainting image is given."
        },
        {
          "name": "magic_prompt_option",
          "type": {
            "type": "enum",
            "values": [
              "Auto",
              "On",
              "Off"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Magic_prompt_option"
          },
          "default": "Auto",
          "title": "Magic Prompt Option",
          "description": "Magic Prompt will interpret your prompt and optimize it to maximize variety and quality of the images generated. You can also use it to write prompts in different languages."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/6e45e974-f381-435a-b9dd-23f3e6801c19/replicate-prediction-1yv65m0q.webp",
        "created_at": "2025-02-27T11:03:37.256216Z",
        "description": "Like Ideogram v2, but faster and cheaper",
        "github_url": null,
        "license_url": "https://about.ideogram.ai/legal/api-tos",
        "name": "ideogram-v2a",
        "owner": "ideogram-ai",
        "paper_url": "https://ideogram.ai/",
        "run_count": 18721,
        "url": "https://replicate.com/ideogram-ai/ideogram-v2a",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "prompt",
        "resolution"
      ],
      "is_dynamic": false
    },
    {
      "title": "Ideogram V 2 Turbo",
      "description": "A fast image model with state of the art inpainting, prompt comprehension and text rendering.",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Ideogram_V2_Turbo",
      "layout": "default",
      "properties": [
        {
          "name": "mask",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Mask",
          "description": "A black and white image. Black pixels are inpainted, white pixels are preserved. The mask will be resized to match the image size."
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "An image file to use for inpainting."
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Text prompt for image generation"
        },
        {
          "name": "resolution",
          "type": {
            "type": "enum",
            "values": [
              "None",
              "512x1536",
              "576x1408",
              "576x1472",
              "576x1536",
              "640x1024",
              "640x1344",
              "640x1408",
              "640x1472",
              "640x1536",
              "704x1152",
              "704x1216",
              "704x1280",
              "704x1344",
              "704x1408",
              "704x1472",
              "720x1280",
              "736x1312",
              "768x1024",
              "768x1088",
              "768x1152",
              "768x1216",
              "768x1232",
              "768x1280",
              "768x1344",
              "832x960",
              "832x1024",
              "832x1088",
              "832x1152",
              "832x1216",
              "832x1248",
              "864x1152",
              "896x960",
              "896x1024",
              "896x1088",
              "896x1120",
              "896x1152",
              "960x832",
              "960x896",
              "960x1024",
              "960x1088",
              "1024x640",
              "1024x768",
              "1024x832",
              "1024x896",
              "1024x960",
              "1024x1024",
              "1088x768",
              "1088x832",
              "1088x896",
              "1088x960",
              "1120x896",
              "1152x704",
              "1152x768",
              "1152x832",
              "1152x864",
              "1152x896",
              "1216x704",
              "1216x768",
              "1216x832",
              "1232x768",
              "1248x832",
              "1280x704",
              "1280x720",
              "1280x768",
              "1280x800",
              "1312x736",
              "1344x640",
              "1344x704",
              "1344x768",
              "1408x576",
              "1408x640",
              "1408x704",
              "1472x576",
              "1472x640",
              "1472x704",
              "1536x512",
              "1536x576",
              "1536x640"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Resolution"
          },
          "default": "None",
          "title": "Resolution",
          "description": "Resolution. Overrides aspect ratio. Ignored if an inpainting image is given."
        },
        {
          "name": "style_type",
          "type": {
            "type": "enum",
            "values": [
              "None",
              "Auto",
              "General",
              "Realistic",
              "Design",
              "Render 3D",
              "Anime"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Style_type"
          },
          "default": "None",
          "title": "Style Type",
          "description": "The styles help define the specific aesthetic of the image you want to generate."
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "16:9",
              "9:16",
              "4:3",
              "3:4",
              "3:2",
              "2:3",
              "16:10",
              "10:16",
              "3:1",
              "1:3"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "1:1",
          "title": "Aspect Ratio",
          "description": "Aspect ratio. Ignored if a resolution or inpainting image is given."
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Negative Prompt",
          "description": "Things you do not want to see in the generated image."
        },
        {
          "name": "magic_prompt_option",
          "type": {
            "type": "enum",
            "values": [
              "Auto",
              "On",
              "Off"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Magic_prompt_option"
          },
          "default": "Auto",
          "title": "Magic Prompt Option",
          "description": "Magic Prompt will interpret your prompt and optimize it to maximize variety and quality of the images generated. You can also use it to write prompts in different languages."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/8b1df940-d741-4446-beb2-0d72c66abb91/replicate-prediction-f_iX48w8f.png",
        "created_at": "2024-10-22T09:29:41.547244Z",
        "description": "A fast image model with state of the art inpainting, prompt comprehension and text rendering.",
        "github_url": null,
        "license_url": "https://about.ideogram.ai/legal/api-tos",
        "name": "ideogram-v2-turbo",
        "owner": "ideogram-ai",
        "paper_url": "https://ideogram.ai/",
        "run_count": 1047108,
        "url": "https://replicate.com/ideogram-ai/ideogram-v2-turbo",
        "visibility": "public",
        "weights_url": "https://ideogram.ai/"
      },
      "recommended_models": [],
      "basic_fields": [
        "mask",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Illusions",
      "description": "Create illusions with img2img and masking support",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Illusions",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Optional img2img"
        },
        {
          "name": "width",
          "type": {
            "type": "int"
          },
          "default": 768,
          "title": "Width"
        },
        {
          "name": "height",
          "type": {
            "type": "int"
          },
          "default": 768,
          "title": "Height"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "a painting of a 19th century town",
          "title": "Prompt"
        },
        {
          "name": "mask_image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Mask Image",
          "description": "Optional mask for inpainting"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of outputs"
        },
        {
          "name": "control_image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Control Image",
          "description": "Control image"
        },
        {
          "name": "controlnet_end",
          "type": {
            "type": "float"
          },
          "default": 1.0,
          "title": "Controlnet End",
          "description": "When controlnet conditioning ends"
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 7.5,
          "title": "Guidance Scale",
          "description": "Scale for classifier-free guidance"
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "ugly, disfigured, low quality, blurry, nsfw",
          "title": "Negative Prompt",
          "description": "The negative prompt to guide image generation."
        },
        {
          "name": "prompt_strength",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Prompt Strength",
          "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image"
        },
        {
          "name": "sizing_strategy",
          "type": {
            "type": "enum",
            "values": [
              "width/height",
              "input_image",
              "control_image"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Sizing_strategy"
          },
          "default": "width/height",
          "title": "Sizing Strategy",
          "description": "Decide how to resize images \u2013 use width/height, resize based on input image or control image"
        },
        {
          "name": "controlnet_start",
          "type": {
            "type": "float"
          },
          "default": 0.0,
          "title": "Controlnet Start",
          "description": "When controlnet conditioning starts"
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 40,
          "title": "Num Inference Steps",
          "description": "Number of diffusion steps"
        },
        {
          "name": "controlnet_conditioning_scale",
          "type": {
            "type": "float"
          },
          "default": 0.75,
          "title": "Controlnet Conditioning Scale",
          "description": "How strong the controlnet conditioning is"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://replicate.delivery/xezq/iA3MUV1f533LXqi4sHVlAerJhr03uES9OlBHAHrqaeq92ArnA/output-0.png",
        "created_at": "2023-11-03T17:24:31.993569Z",
        "description": "Create illusions with img2img and masking support",
        "github_url": "https://github.com/fofr/cog-illusion",
        "license_url": null,
        "name": "illusions",
        "owner": "fofr",
        "paper_url": null,
        "run_count": 45978,
        "url": "https://replicate.com/fofr/illusions",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "image",
        "width"
      ],
      "is_dynamic": false
    },
    {
      "title": "Imagen 3",
      "description": "Google's highest quality text-to-image model, capable of generating images with detail, rich lighting and beauty",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Imagen_3",
      "layout": "default",
      "properties": [
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Text prompt for image generation"
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "9:16",
              "16:9",
              "3:4",
              "4:3"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "1:1",
          "title": "Aspect Ratio",
          "description": "Aspect ratio of the generated image"
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Negative Prompt",
          "description": "Text prompt for what to discourage in the generated images"
        },
        {
          "name": "safety_filter_level",
          "type": {
            "type": "enum",
            "values": [
              "block_low_and_above",
              "block_medium_and_above",
              "block_only_high"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Safety_filter_level"
          },
          "default": "block_medium_and_above",
          "title": "Safety Filter Level",
          "description": "block_low_and_above is strictest, block_medium_and_above blocks some prompts, block_only_high is most permissive but some prompts will still be blocked"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/6e164365-9cab-422b-bf05-76d127abe3a2/replicate-prediction-_OX51bG7.webp",
        "created_at": "2025-02-05T12:56:07.610594Z",
        "description": "Google's highest quality text-to-image model, capable of generating images with detail, rich lighting and beauty",
        "github_url": null,
        "license_url": null,
        "name": "imagen-3",
        "owner": "google",
        "paper_url": "https://deepmind.google/technologies/imagen-3/",
        "run_count": 138154,
        "url": "https://replicate.com/google/imagen-3",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "prompt",
        "aspect_ratio",
        "negative_prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Kandinsky",
      "description": "multilingual text2image latent diffusion model",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Kandinsky",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Leave blank to randomize the seed"
        },
        {
          "name": "width",
          "type": {
            "type": "enum",
            "values": [
              384,
              512,
              576,
              640,
              704,
              768,
              960,
              1024,
              1152,
              1280,
              1536,
              1792,
              2048
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Width"
          },
          "default": 512,
          "title": "Width",
          "description": "Width of output image. Lower the setting if hits memory limits."
        },
        {
          "name": "height",
          "type": {
            "type": "enum",
            "values": [
              384,
              512,
              576,
              640,
              704,
              768,
              960,
              1024,
              1152,
              1280,
              1536,
              1792,
              2048
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Height"
          },
          "default": 512,
          "title": "Height",
          "description": "Height of output image. Lower the setting if hits memory limits."
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "A moss covered astronaut with a black background",
          "title": "Prompt",
          "description": "Input prompt"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of images to output.",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpeg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Output image format"
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Negative Prompt",
          "description": "Specify things to not see in the output"
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 75,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps",
          "min": 1.0,
          "max": 500.0
        },
        {
          "name": "num_inference_steps_prior",
          "type": {
            "type": "int"
          },
          "default": 25,
          "title": "Num Inference Steps Prior",
          "description": "Number of denoising steps for priors",
          "min": 1.0,
          "max": 500.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/618e68d3-fba3-4fd0-a060-cdd46b2ab7cf/out-0_2.jpg",
        "created_at": "2023-07-12T21:53:29.439515Z",
        "description": "multilingual text2image latent diffusion model",
        "github_url": "https://github.com/chenxwh/Kandinsky-2/tree/v2.2",
        "license_url": "https://github.com/ai-forever/Kandinsky-2/blob/main/license",
        "name": "kandinsky-2.2",
        "owner": "ai-forever",
        "paper_url": null,
        "run_count": 10016866,
        "url": "https://replicate.com/ai-forever/kandinsky-2.2",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "width",
        "height"
      ],
      "is_dynamic": false
    },
    {
      "title": "Kandinsky 2 2",
      "description": "multilingual text2image latent diffusion model",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Kandinsky_2_2",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Leave blank to randomize the seed"
        },
        {
          "name": "width",
          "type": {
            "type": "enum",
            "values": [
              384,
              512,
              576,
              640,
              704,
              768,
              960,
              1024,
              1152,
              1280,
              1536,
              1792,
              2048
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Width"
          },
          "default": 512,
          "title": "Width",
          "description": "Width of output image. Lower the setting if hits memory limits."
        },
        {
          "name": "height",
          "type": {
            "type": "enum",
            "values": [
              384,
              512,
              576,
              640,
              704,
              768,
              960,
              1024,
              1152,
              1280,
              1536,
              1792,
              2048
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Height"
          },
          "default": 512,
          "title": "Height",
          "description": "Height of output image. Lower the setting if hits memory limits."
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "A moss covered astronaut with a black background",
          "title": "Prompt",
          "description": "Input prompt"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of images to output.",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpeg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Output image format"
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Negative Prompt",
          "description": "Specify things to not see in the output"
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 75,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps",
          "min": 1.0,
          "max": 500.0
        },
        {
          "name": "num_inference_steps_prior",
          "type": {
            "type": "int"
          },
          "default": 25,
          "title": "Num Inference Steps Prior",
          "description": "Number of denoising steps for priors",
          "min": 1.0,
          "max": 500.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/618e68d3-fba3-4fd0-a060-cdd46b2ab7cf/out-0_2.jpg",
        "created_at": "2023-07-12T21:53:29.439515Z",
        "description": "multilingual text2image latent diffusion model",
        "github_url": "https://github.com/chenxwh/Kandinsky-2/tree/v2.2",
        "license_url": "https://github.com/ai-forever/Kandinsky-2/blob/main/license",
        "name": "kandinsky-2.2",
        "owner": "ai-forever",
        "paper_url": null,
        "run_count": 10016866,
        "url": "https://replicate.com/ai-forever/kandinsky-2.2",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "width",
        "height"
      ],
      "is_dynamic": false
    },
    {
      "title": "Photon Flash",
      "description": "Accelerated variant of Photon prioritizing speed while maintaining quality",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Photon_Flash",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Set for reproducible generation"
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Text prompt for image generation"
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "3:4",
              "4:3",
              "9:16",
              "16:9",
              "9:21",
              "21:9"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "16:9",
          "title": "Aspect Ratio",
          "description": "Aspect ratio of the generated image"
        },
        {
          "name": "image_reference_url",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image Reference Url",
          "description": "URL of a reference image to guide generation"
        },
        {
          "name": "style_reference_url",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Style Reference Url",
          "description": "URL of a style reference image"
        },
        {
          "name": "image_reference_weight",
          "type": {
            "type": "float"
          },
          "default": 0.85,
          "title": "Image Reference Weight",
          "description": "Weight of the reference image. Larger values will make the reference image have a stronger influence on the generated image.",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "style_reference_weight",
          "type": {
            "type": "float"
          },
          "default": 0.85,
          "title": "Style Reference Weight",
          "description": "Weight of the style reference image",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "character_reference_url",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Character Reference Url",
          "description": "URL of a character reference image"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/8459f7e9-7445-4046-82aa-917a0f561b80/tmpyf9dx02r.webp",
        "created_at": "2024-12-05T15:18:04.364421Z",
        "description": "Accelerated variant of Photon prioritizing speed while maintaining quality",
        "github_url": null,
        "license_url": "https://lumalabs.ai/dream-machine/api/terms",
        "name": "photon-flash",
        "owner": "luma",
        "paper_url": null,
        "run_count": 43643,
        "url": "https://replicate.com/luma/photon-flash",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "prompt",
        "aspect_ratio"
      ],
      "is_dynamic": false
    },
    {
      "title": "Playground V 2",
      "description": "Playground v2.5 is the state-of-the-art open-source model in aesthetic quality",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.PlaygroundV2",
      "layout": "default",
      "properties": [
        {
          "name": "mask",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Mask",
          "description": "Input mask for inpaint mode. Black areas will be preserved, white areas will be inpainted."
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Leave blank to randomize the seed"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image for img2img or inpaint mode"
        },
        {
          "name": "width",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Width",
          "description": "Width of output image",
          "min": 256.0,
          "max": 1536.0
        },
        {
          "name": "height",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Height",
          "description": "Height of output image",
          "min": 256.0,
          "max": 1536.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "Astronaut in a jungle, cold color palette, muted colors, detailed, 8k",
          "title": "Prompt",
          "description": "Input prompt"
        },
        {
          "name": "scheduler",
          "type": {
            "type": "enum",
            "values": [
              "DDIM",
              "DPMSolverMultistep",
              "HeunDiscrete",
              "K_EULER_ANCESTRAL",
              "K_EULER",
              "PNDM",
              "DPM++2MKarras",
              "DPMSolver++"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Scheduler"
          },
          "default": "DPMSolver++",
          "title": "Scheduler",
          "description": "Scheduler. DPMSolver++ or DPM++2MKarras is recommended for most cases"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of images to output.",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 3,
          "title": "Guidance Scale",
          "description": "Scale for classifier-free guidance",
          "min": 0.1,
          "max": 20.0
        },
        {
          "name": "apply_watermark",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Apply Watermark",
          "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "ugly, deformed, noisy, blurry, distorted",
          "title": "Negative Prompt",
          "description": "Negative Input prompt"
        },
        {
          "name": "prompt_strength",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Prompt Strength",
          "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 25,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps",
          "min": 1.0,
          "max": 60.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images. This feature is only available through the API. See https://replicate.com/docs/how-does-replicate-work#safety"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/b849582a-8699-4965-8016-3a51dc1da3d4/playground.jpeg",
        "created_at": "2024-02-27T22:20:16.107222Z",
        "description": "Playground v2.5 is the state-of-the-art open-source model in aesthetic quality",
        "github_url": "https://github.com/lucataco/cog-playground-v2.5-1024px-aesthetic",
        "license_url": "https://huggingface.co/playgroundai/playground-v2.5-1024px-aesthetic/blob/main/LICENSE.md",
        "name": "playground-v2.5-1024px-aesthetic",
        "owner": "playgroundai",
        "paper_url": "https://arxiv.org/abs/2206.00364",
        "run_count": 2201201,
        "url": "https://replicate.com/playgroundai/playground-v2.5-1024px-aesthetic",
        "visibility": "public",
        "weights_url": "https://huggingface.co/playgroundai/playground-v2.5-1024px-aesthetic"
      },
      "recommended_models": [],
      "basic_fields": [
        "mask",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Proteus V 02",
      "description": "Proteus v0.2 shows subtle yet significant improvements over Version 0.1. It demonstrates enhanced prompt understanding that surpasses MJ6, while also approaching its stylistic capabilities.",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Proteus_V_02",
      "layout": "default",
      "properties": [
        {
          "name": "mask",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Mask",
          "description": "Input mask for inpaint mode. Black areas will be preserved, white areas will be inpainted."
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Leave blank to randomize the seed"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image for img2img or inpaint mode"
        },
        {
          "name": "width",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Width",
          "description": "Width of output image"
        },
        {
          "name": "height",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Height",
          "description": "Height of output image"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "black fluffy gorgeous dangerous cat animal creature, large orange eyes, big fluffy ears, piercing gaze, full moon, dark ambiance, best quality, extremely detailed",
          "title": "Prompt",
          "description": "Input prompt"
        },
        {
          "name": "scheduler",
          "type": {
            "type": "enum",
            "values": [
              "DDIM",
              "DPMSolverMultistep",
              "HeunDiscrete",
              "KarrasDPM",
              "K_EULER_ANCESTRAL",
              "K_EULER",
              "PNDM"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Scheduler"
          },
          "default": "KarrasDPM",
          "title": "Scheduler",
          "description": "scheduler"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of images to output.",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 7.5,
          "title": "Guidance Scale",
          "description": "Scale for classifier-free guidance. Recommended 7-8",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "apply_watermark",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Apply Watermark",
          "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "worst quality, low quality",
          "title": "Negative Prompt",
          "description": "Negative Input prompt"
        },
        {
          "name": "prompt_strength",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Prompt Strength",
          "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 20,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps. 20 to 35 steps for more detail, 20 steps for faster results.",
          "min": 1.0,
          "max": 100.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images. This feature is only available through the API. See https://replicate.com/docs/how-does-replicate-work#safety"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://replicate.delivery/pbxt/1nrcrEszpsb0Kpv0qNBJrtQjoefjHJ3xSh3whVOJcklSFxPSA/out-0.png",
        "created_at": "2024-01-24T17:45:49.361192Z",
        "description": "Proteus v0.2 shows subtle yet significant improvements over Version 0.1. It demonstrates enhanced prompt understanding that surpasses MJ6, while also approaching its stylistic capabilities.",
        "github_url": "https://github.com/lucataco/cog-proteus-v0.2",
        "license_url": "https://huggingface.co/datasets/choosealicense/licenses/blob/main/markdown/gpl-3.0.md",
        "name": "proteus-v0.2",
        "owner": "datacte",
        "paper_url": null,
        "run_count": 9148840,
        "url": "https://replicate.com/datacte/proteus-v0.2",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "mask",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Proteus V 03",
      "description": "ProteusV0.3: The Anime Update",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Proteus_V_03",
      "layout": "default",
      "properties": [
        {
          "name": "mask",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Mask",
          "description": "Input mask for inpaint mode. Black areas will be preserved, white areas will be inpainted."
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Leave blank to randomize the seed"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image for img2img or inpaint mode"
        },
        {
          "name": "width",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Width",
          "description": "Width of output image. Recommended 1024 or 1280"
        },
        {
          "name": "height",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Height",
          "description": "Height of output image. Recommended 1024 or 1280"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "Anime full body portrait of a swordsman holding his weapon in front of him. He is facing the camera with a fierce look on his face. Anime key visual (best quality, HD, ~+~aesthetic~+~:1.2)",
          "title": "Prompt",
          "description": "Input prompt"
        },
        {
          "name": "scheduler",
          "type": {
            "type": "enum",
            "values": [
              "DDIM",
              "DPMSolverMultistep",
              "HeunDiscrete",
              "KarrasDPM",
              "K_EULER_ANCESTRAL",
              "K_EULER",
              "PNDM",
              "DPM++2MSDE"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Scheduler"
          },
          "default": "DPM++2MSDE",
          "title": "Scheduler",
          "description": "scheduler"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of images to output.",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 7.5,
          "title": "Guidance Scale",
          "description": "Scale for classifier-free guidance. Recommended 7-8",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "apply_watermark",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Apply Watermark",
          "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "worst quality, low quality",
          "title": "Negative Prompt",
          "description": "Negative Input prompt"
        },
        {
          "name": "prompt_strength",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Prompt Strength",
          "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 20,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps. 20 to 60 steps for more detail, 20 steps for faster results.",
          "min": 1.0,
          "max": 100.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images. This feature is only available through the API. See https://replicate.com/docs/how-does-replicate-work#safety"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://replicate.delivery/pbxt/C3LYYa30997dKRdeNDSXNjIK01CH5q8CSto12eWundnPPtWSA/out-0.png",
        "created_at": "2024-02-14T20:02:04.901849Z",
        "description": "ProteusV0.3: The Anime Update",
        "github_url": "https://github.com/lucataco/cog-proteus-v0.3",
        "license_url": "https://huggingface.co/models?license=license:gpl-3.0",
        "name": "proteus-v0.3",
        "owner": "datacte",
        "paper_url": null,
        "run_count": 3084436,
        "url": "https://replicate.com/datacte/proteus-v0.3",
        "visibility": "public",
        "weights_url": "https://huggingface.co/dataautogpt3/ProteusV0.3"
      },
      "recommended_models": [],
      "basic_fields": [
        "mask",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Pulid Base",
      "description": "Use a face to make images. Uses SDXL fine-tuned checkpoints.",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.PulidBase",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Set a seed for reproducibility. Random by default."
        },
        {
          "name": "width",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Width",
          "description": "Width of the output image (ignored if structure image given)"
        },
        {
          "name": "height",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Height",
          "description": "Height of the output image (ignored if structure image given)"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "A photo of a person",
          "title": "Prompt",
          "description": "You might need to include a gender in the prompt to get the desired result"
        },
        {
          "name": "face_image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Face Image",
          "description": "The face image to use for the generation"
        },
        {
          "name": "face_style",
          "type": {
            "type": "enum",
            "values": [
              "high-fidelity",
              "stylized"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Face_style"
          },
          "default": "high-fidelity",
          "title": "Face Style",
          "description": "Style of the face"
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 80,
          "title": "Output Quality",
          "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality.",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Negative Prompt",
          "description": "Things you do not want to see in your image"
        },
        {
          "name": "checkpoint_model",
          "type": {
            "type": "enum",
            "values": [
              "general - albedobaseXL_v21",
              "general - dreamshaperXL_alpha2Xl10",
              "animated - starlightXLAnimated_v3",
              "animated - pixlAnimeCartoonComic_v10",
              "realistic - rundiffusionXL_beta",
              "realistic - RealVisXL_V4.0",
              "realistic - sdxlUnstableDiffusers_nihilmania",
              "cinematic - CinematicRedmond"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Checkpoint_model"
          },
          "default": "general - dreamshaperXL_alpha2Xl10",
          "title": "Checkpoint Model",
          "description": "Model to use for the generation"
        },
        {
          "name": "number_of_images",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Number Of Images",
          "description": "Number of images to generate",
          "min": 1.0,
          "max": 10.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/fb4110a1-ae64-491f-8a3e-0fdd4ef991bb/pulid-base-cover.webp",
        "created_at": "2024-05-09T13:48:08.359715Z",
        "description": "Use a face to make images. Uses SDXL fine-tuned checkpoints.",
        "github_url": "https://github.com/fofr/cog-comfyui-pulid/tree/pulid-base",
        "license_url": null,
        "name": "pulid-base",
        "owner": "fofr",
        "paper_url": "https://arxiv.org/abs/2404.16022",
        "run_count": 157090,
        "url": "https://replicate.com/fofr/pulid-base",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "width",
        "height"
      ],
      "is_dynamic": false
    },
    {
      "title": "Recraft 20 B",
      "description": "Affordable and fast images",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Recraft_20B",
      "layout": "default",
      "properties": [
        {
          "name": "size",
          "type": {
            "type": "enum",
            "values": [
              "1024x1024",
              "1365x1024",
              "1024x1365",
              "1536x1024",
              "1024x1536",
              "1820x1024",
              "1024x1820",
              "1024x2048",
              "2048x1024",
              "1434x1024",
              "1024x1434",
              "1024x1280",
              "1280x1024",
              "1024x1707",
              "1707x1024"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Size"
          },
          "default": "1024x1024",
          "title": "Size",
          "description": "Width and height of the generated image"
        },
        {
          "name": "style",
          "type": {
            "type": "enum",
            "values": [
              "realistic_image",
              "realistic_image/b_and_w",
              "realistic_image/enterprise",
              "realistic_image/hard_flash",
              "realistic_image/hdr",
              "realistic_image/motion_blur",
              "realistic_image/natural_light",
              "realistic_image/studio_portrait",
              "digital_illustration",
              "digital_illustration/2d_art_poster",
              "digital_illustration/2d_art_poster_2",
              "digital_illustration/3d",
              "digital_illustration/80s",
              "digital_illustration/engraving_color",
              "digital_illustration/glow",
              "digital_illustration/grain",
              "digital_illustration/hand_drawn",
              "digital_illustration/hand_drawn_outline",
              "digital_illustration/handmade_3d",
              "digital_illustration/infantile_sketch",
              "digital_illustration/kawaii",
              "digital_illustration/pixel_art",
              "digital_illustration/psychedelic",
              "digital_illustration/seamless",
              "digital_illustration/voxel",
              "digital_illustration/watercolor"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Style"
          },
          "default": "realistic_image",
          "title": "Style",
          "description": "Style of the generated image."
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Text prompt for image generation"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/2a808913-4306-43d4-b9da-db154e2faeab/recraft-cover-1.webp",
        "created_at": "2024-12-12T13:39:48.189902Z",
        "description": "Affordable and fast images",
        "github_url": null,
        "license_url": "https://www.recraft.ai/terms",
        "name": "recraft-20b",
        "owner": "recraft-ai",
        "paper_url": "https://recraft.ai",
        "run_count": 71665,
        "url": "https://replicate.com/recraft-ai/recraft-20b",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "size",
        "style",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Recraft 20 B SVG",
      "description": "Affordable and fast vector images",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Recraft_20B_SVG",
      "layout": "default",
      "properties": [
        {
          "name": "size",
          "type": {
            "type": "enum",
            "values": [
              "1024x1024",
              "1365x1024",
              "1024x1365",
              "1536x1024",
              "1024x1536",
              "1820x1024",
              "1024x1820",
              "1024x2048",
              "2048x1024",
              "1434x1024",
              "1024x1434",
              "1024x1280",
              "1280x1024",
              "1024x1707",
              "1707x1024"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Size"
          },
          "default": "1024x1024",
          "title": "Size",
          "description": "Width and height of the generated image"
        },
        {
          "name": "style",
          "type": {
            "type": "enum",
            "values": [
              "vector_illustration",
              "vector_illustration/cartoon",
              "vector_illustration/doodle_line_art",
              "vector_illustration/engraving",
              "vector_illustration/flat_2",
              "vector_illustration/kawaii",
              "vector_illustration/line_art",
              "vector_illustration/line_circuit",
              "vector_illustration/linocut",
              "vector_illustration/seamless",
              "icon",
              "icon/broken_line",
              "icon/colored_outline",
              "icon/colored_shapes",
              "icon/colored_shapes_gradient",
              "icon/doodle_fill",
              "icon/doodle_offset_fill",
              "icon/offset_fill",
              "icon/outline",
              "icon/outline_gradient",
              "icon/uneven_fill"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Style"
          },
          "default": "vector_illustration",
          "title": "Style",
          "description": "Style of the generated image."
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Text prompt for image generation"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "svg"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/4993bd89-af70-43da-be68-18cc43437746/recraft-svg-20b-cover.webp",
        "created_at": "2024-12-12T13:39:54.180287Z",
        "description": "Affordable and fast vector images",
        "github_url": null,
        "license_url": "https://www.recraft.ai/terms",
        "name": "recraft-20b-svg",
        "owner": "recraft-ai",
        "paper_url": "https://recraft.ai/",
        "run_count": 12094,
        "url": "https://replicate.com/recraft-ai/recraft-20b-svg",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "size",
        "style",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Recraft V 3",
      "description": "Recraft V3 (code-named red_panda) is a text-to-image model with the ability to generate long texts, and images in a wide list of styles. As of today, it is SOTA in image generation, proven by the Text-to-Image Benchmark by Artificial Analysis",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Recraft_V3",
      "layout": "default",
      "properties": [
        {
          "name": "size",
          "type": {
            "type": "enum",
            "values": [
              "1024x1024",
              "1365x1024",
              "1024x1365",
              "1536x1024",
              "1024x1536",
              "1820x1024",
              "1024x1820",
              "1024x2048",
              "2048x1024",
              "1434x1024",
              "1024x1434",
              "1024x1280",
              "1280x1024",
              "1024x1707",
              "1707x1024"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Size"
          },
          "default": "1024x1024",
          "title": "Size",
          "description": "Width and height of the generated image"
        },
        {
          "name": "style",
          "type": {
            "type": "enum",
            "values": [
              "any",
              "realistic_image",
              "digital_illustration",
              "digital_illustration/pixel_art",
              "digital_illustration/hand_drawn",
              "digital_illustration/grain",
              "digital_illustration/infantile_sketch",
              "digital_illustration/2d_art_poster",
              "digital_illustration/handmade_3d",
              "digital_illustration/hand_drawn_outline",
              "digital_illustration/engraving_color",
              "digital_illustration/2d_art_poster_2",
              "realistic_image/b_and_w",
              "realistic_image/hard_flash",
              "realistic_image/hdr",
              "realistic_image/natural_light",
              "realistic_image/studio_portrait",
              "realistic_image/enterprise",
              "realistic_image/motion_blur"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Style"
          },
          "default": "any",
          "title": "Style",
          "description": "Style of the generated image."
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Text prompt for image generation"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/a2b66c42-4633-443d-997f-cc987bca07c7/V3.webp",
        "created_at": "2024-10-30T12:41:06.099624Z",
        "description": "Recraft V3 (code-named red_panda) is a text-to-image model with the ability to generate long texts, and images in a wide list of styles. As of today, it is SOTA in image generation, proven by the Text-to-Image Benchmark by Artificial Analysis",
        "github_url": null,
        "license_url": "https://www.recraft.ai/terms",
        "name": "recraft-v3",
        "owner": "recraft-ai",
        "paper_url": "https://recraft.ai",
        "run_count": 1661112,
        "url": "https://replicate.com/recraft-ai/recraft-v3",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "size",
        "style",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Recraft V 3 SVG",
      "description": "Recraft V3 SVG (code-named red_panda) is a text-to-image model with the ability to generate high quality SVG images including logotypes, and icons. The model supports a wide list of styles.",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.Recraft_V3_SVG",
      "layout": "default",
      "properties": [
        {
          "name": "size",
          "type": {
            "type": "enum",
            "values": [
              "1024x1024",
              "1365x1024",
              "1024x1365",
              "1536x1024",
              "1024x1536",
              "1820x1024",
              "1024x1820",
              "1024x2048",
              "2048x1024",
              "1434x1024",
              "1024x1434",
              "1024x1280",
              "1280x1024",
              "1024x1707",
              "1707x1024"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Size"
          },
          "default": "1024x1024",
          "title": "Size",
          "description": "Width and height of the generated image"
        },
        {
          "name": "style",
          "type": {
            "type": "enum",
            "values": [
              "any",
              "engraving",
              "line_art",
              "line_circuit",
              "linocut"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Style"
          },
          "default": "any",
          "title": "Style",
          "description": "Style of the generated image."
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Text prompt for image generation"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "svg"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/223c73a9-0347-4daa-9710-3878f95479e3/svg-cover.webp",
        "created_at": "2024-10-30T13:59:33.006694Z",
        "description": "Recraft V3 SVG (code-named red_panda) is a text-to-image model with the ability to generate high quality SVG images including logotypes, and icons. The model supports a wide list of styles.",
        "github_url": null,
        "license_url": "https://recraft.ai/terms",
        "name": "recraft-v3-svg",
        "owner": "recraft-ai",
        "paper_url": "https://recraft.ai",
        "run_count": 69660,
        "url": "https://replicate.com/recraft-ai/recraft-v3-svg",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "size",
        "style",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "SDXL Ad Inpaint",
      "description": "Product advertising image generator using SDXL",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.SDXL_Ad_Inpaint",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Empty or 0 for a random image"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Remove background from this image"
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Describe the new setting for your product"
        },
        {
          "name": "img_size",
          "type": {
            "type": "enum",
            "values": [
              "512, 2048",
              "512, 1984",
              "512, 1920",
              "512, 1856",
              "576, 1792",
              "576, 1728",
              "576, 1664",
              "640, 1600",
              "640, 1536",
              "704, 1472",
              "704, 1408",
              "704, 1344",
              "768, 1344",
              "768, 1280",
              "832, 1216",
              "832, 1152",
              "896, 1152",
              "896, 1088",
              "960, 1088",
              "960, 1024",
              "1024, 1024",
              "1024, 960",
              "1088, 960",
              "1088, 896",
              "1152, 896",
              "1152, 832",
              "1216, 832",
              "1280, 768",
              "1344, 768",
              "1408, 704",
              "1472, 704",
              "1536, 640",
              "1600, 640",
              "1664, 576",
              "1728, 576",
              "1792, 576",
              "1856, 512",
              "1920, 512",
              "1984, 512",
              "2048, 512"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Img_size"
          },
          "default": "1024, 1024",
          "title": "Img Size",
          "description": "Possible SDXL image sizes"
        },
        {
          "name": "apply_img",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Apply Img",
          "description": "Applies the original product image to the final result"
        },
        {
          "name": "scheduler",
          "type": {
            "type": "enum",
            "values": [
              "DDIM",
              "DPMSolverMultistep",
              "HeunDiscrete",
              "KarrasDPM",
              "K_EULER_ANCESTRAL",
              "K_EULER",
              "PNDM"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Scheduler"
          },
          "default": "K_EULER",
          "title": "Scheduler",
          "description": "scheduler"
        },
        {
          "name": "product_fill",
          "type": {
            "type": "enum",
            "values": [
              "Original",
              "80",
              "70",
              "60",
              "50",
              "40",
              "30",
              "20"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Product_fill"
          },
          "default": "Original",
          "title": "Product Fill",
          "description": "What percentage of the image width to fill with product"
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 7.5,
          "title": "Guidance Scale",
          "description": "Guidance Scale"
        },
        {
          "name": "condition_scale",
          "type": {
            "type": "float"
          },
          "default": 0.9,
          "title": "Condition Scale",
          "description": "controlnet conditioning scale for generalization",
          "min": 0.3,
          "max": 0.9
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "low quality, out of frame, illustration, 3d, sepia, painting, cartoons, sketch, watermark, text, Logo, advertisement",
          "title": "Negative Prompt",
          "description": "Describe what you do not want in your setting"
        },
        {
          "name": "num_refine_steps",
          "type": {
            "type": "int"
          },
          "default": 10,
          "title": "Num Refine Steps",
          "description": "Number of steps to refine",
          "min": 0.0,
          "max": 40.0
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 40,
          "title": "Num Inference Steps",
          "description": "Inference Steps"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://pbxt.replicate.delivery/ORbuWtoy0y6NI9f4DrJ2fxs92LgviBaOlzOVdYTr3pT8eKJjA/7-out.png",
        "created_at": "2023-09-15T15:37:19.970710Z",
        "description": "Product advertising image generator using SDXL",
        "github_url": "https://github.com/CatacoLabs/cog-sdxl-ad-inpaint",
        "license_url": "https://github.com/huggingface/hfapi/blob/master/LICENSE",
        "name": "sdxl-ad-inpaint",
        "owner": "catacolabs",
        "paper_url": null,
        "run_count": 370470,
        "url": "https://replicate.com/catacolabs/sdxl-ad-inpaint",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "image",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "SDXL Controlnet",
      "description": "SDXL ControlNet - Canny",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.SDXL_Controlnet",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "int"
          },
          "default": 0,
          "title": "Seed",
          "description": "Random seed. Set to 0 to randomize the seed"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image for img2img or inpaint mode"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "aerial view, a futuristic research complex in a bright foggy jungle, hard lighting",
          "title": "Prompt",
          "description": "Input prompt"
        },
        {
          "name": "condition_scale",
          "type": {
            "type": "float"
          },
          "default": 0.5,
          "title": "Condition Scale",
          "description": "controlnet conditioning scale for generalization",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "low quality, bad quality, sketches",
          "title": "Negative Prompt",
          "description": "Input Negative Prompt"
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 50,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps",
          "min": 1.0,
          "max": 500.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/7edf6f87-bd0d-4a4f-9e11-d944bb07a3ea/output.png",
        "created_at": "2023-08-14T07:15:37.417194Z",
        "description": "SDXL ControlNet - Canny",
        "github_url": "https://github.com/lucataco/cog-sdxl-controlnet",
        "license_url": "https://huggingface.co/stabilityai/stable-diffusion-xl-base-1.0/blob/main/LICENSE.md",
        "name": "sdxl-controlnet",
        "owner": "lucataco",
        "paper_url": null,
        "run_count": 2253439,
        "url": "https://replicate.com/lucataco/sdxl-controlnet",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "image",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "SDXL Emoji",
      "description": "An SDXL fine-tune based on Apple Emojis",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.SDXL_Emoji",
      "layout": "default",
      "properties": [
        {
          "name": "mask",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Mask",
          "description": "Input mask for inpaint mode. Black areas will be preserved, white areas will be inpainted."
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Leave blank to randomize the seed"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image for img2img or inpaint mode"
        },
        {
          "name": "width",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Width",
          "description": "Width of output image"
        },
        {
          "name": "height",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Height",
          "description": "Height of output image"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "An astronaut riding a rainbow unicorn",
          "title": "Prompt",
          "description": "Input prompt"
        },
        {
          "name": "refine",
          "type": {
            "type": "enum",
            "values": [
              "no_refiner",
              "expert_ensemble_refiner",
              "base_image_refiner"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Refine"
          },
          "default": "no_refiner",
          "title": "Refine",
          "description": "Which refine style to use"
        },
        {
          "name": "scheduler",
          "type": {
            "type": "enum",
            "values": [
              "DDIM",
              "DPMSolverMultistep",
              "HeunDiscrete",
              "KarrasDPM",
              "K_EULER_ANCESTRAL",
              "K_EULER",
              "PNDM"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Scheduler"
          },
          "default": "K_EULER",
          "title": "Scheduler",
          "description": "scheduler"
        },
        {
          "name": "lora_scale",
          "type": {
            "type": "float"
          },
          "default": 0.6,
          "title": "Lora Scale",
          "description": "LoRA additive scale. Only applicable on trained models.",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of images to output.",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "refine_steps",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Refine Steps",
          "description": "For base_image_refiner, the number of steps to refine, defaults to num_inference_steps"
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 7.5,
          "title": "Guidance Scale",
          "description": "Scale for classifier-free guidance",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "apply_watermark",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Apply Watermark",
          "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
        },
        {
          "name": "high_noise_frac",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "High Noise Frac",
          "description": "For expert_ensemble_refiner, the fraction of noise to use",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Negative Prompt",
          "description": "Input Negative Prompt"
        },
        {
          "name": "prompt_strength",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Prompt Strength",
          "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "replicate_weights",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Replicate Weights",
          "description": "Replicate LoRA weights to use. Leave blank to use the default weights."
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 50,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps",
          "min": 1.0,
          "max": 500.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images. This feature is only available through the API. See https://replicate.com/docs/how-does-replicate-work#safety"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/8629c6ba-b94c-4cbd-93aa-bda2b8ebecd9/F5Mg2KeXgAAkfre.jpg",
        "created_at": "2023-09-04T09:18:11.028708Z",
        "description": "An SDXL fine-tune based on Apple Emojis",
        "github_url": null,
        "license_url": null,
        "name": "sdxl-emoji",
        "owner": "fofr",
        "paper_url": null,
        "run_count": 8867193,
        "url": "https://replicate.com/fofr/sdxl-emoji",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "mask",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "SDXL Pixar",
      "description": "Create Pixar poster easily with SDXL Pixar.",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.SDXL_Pixar",
      "layout": "default",
      "properties": [
        {
          "name": "mask",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Mask",
          "description": "Input mask for inpaint mode. Black areas will be preserved, white areas will be inpainted."
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Leave blank to randomize the seed"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image for img2img or inpaint mode"
        },
        {
          "name": "width",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Width",
          "description": "Width of output image"
        },
        {
          "name": "height",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Height",
          "description": "Height of output image"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "An astronaut riding a rainbow unicorn",
          "title": "Prompt",
          "description": "Input prompt"
        },
        {
          "name": "refine",
          "type": {
            "type": "enum",
            "values": [
              "no_refiner",
              "expert_ensemble_refiner",
              "base_image_refiner"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Refine"
          },
          "default": "no_refiner",
          "title": "Refine",
          "description": "Which refine style to use"
        },
        {
          "name": "scheduler",
          "type": {
            "type": "enum",
            "values": [
              "DDIM",
              "DPMSolverMultistep",
              "HeunDiscrete",
              "KarrasDPM",
              "K_EULER_ANCESTRAL",
              "K_EULER",
              "PNDM"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Scheduler"
          },
          "default": "K_EULER",
          "title": "Scheduler",
          "description": "scheduler"
        },
        {
          "name": "lora_scale",
          "type": {
            "type": "float"
          },
          "default": 0.6,
          "title": "Lora Scale",
          "description": "LoRA additive scale. Only applicable on trained models.",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of images to output.",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "refine_steps",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Refine Steps",
          "description": "For base_image_refiner, the number of steps to refine, defaults to num_inference_steps"
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 7.5,
          "title": "Guidance Scale",
          "description": "Scale for classifier-free guidance",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "apply_watermark",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Apply Watermark",
          "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
        },
        {
          "name": "high_noise_frac",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "High Noise Frac",
          "description": "For expert_ensemble_refiner, the fraction of noise to use",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Negative Prompt",
          "description": "Input Negative Prompt"
        },
        {
          "name": "prompt_strength",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Prompt Strength",
          "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "replicate_weights",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Replicate Weights",
          "description": "Replicate LoRA weights to use. Leave blank to use the default weights."
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 50,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps",
          "min": 1.0,
          "max": 500.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images. This feature is only available through the API. See https://replicate.com/docs/how-does-replicate-work#safety"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/68125b17-60d7-4949-8984-0d50d736a623/out-0_5.png",
        "created_at": "2023-10-21T10:32:49.911227Z",
        "description": "Create Pixar poster easily with SDXL Pixar.",
        "github_url": null,
        "license_url": null,
        "name": "sdxl-pixar",
        "owner": "swartype",
        "paper_url": null,
        "run_count": 640199,
        "url": "https://replicate.com/swartype/sdxl-pixar",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "mask",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Stable Diffusion",
      "description": "A latent text-to-image diffusion model capable of generating photo-realistic images given any text input",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.StableDiffusion",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Leave blank to randomize the seed"
        },
        {
          "name": "width",
          "type": {
            "type": "enum",
            "values": [
              64,
              128,
              192,
              256,
              320,
              384,
              448,
              512,
              576,
              640,
              704,
              768,
              832,
              896,
              960,
              1024
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Width"
          },
          "default": 768,
          "title": "Width",
          "description": "Width of generated image in pixels. Needs to be a multiple of 64"
        },
        {
          "name": "height",
          "type": {
            "type": "enum",
            "values": [
              64,
              128,
              192,
              256,
              320,
              384,
              448,
              512,
              576,
              640,
              704,
              768,
              832,
              896,
              960,
              1024
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Height"
          },
          "default": 768,
          "title": "Height",
          "description": "Height of generated image in pixels. Needs to be a multiple of 64"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "a vision of paradise. unreal engine",
          "title": "Prompt",
          "description": "Input prompt"
        },
        {
          "name": "scheduler",
          "type": {
            "type": "enum",
            "values": [
              "DDIM",
              "K_EULER",
              "DPMSolverMultistep",
              "K_EULER_ANCESTRAL",
              "PNDM",
              "KLMS"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Scheduler"
          },
          "default": "DPMSolverMultistep",
          "title": "Scheduler",
          "description": "Choose a scheduler."
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of images to generate.",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 7.5,
          "title": "Guidance Scale",
          "description": "Scale for classifier-free guidance",
          "min": 1.0,
          "max": 20.0
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Negative Prompt",
          "description": "Specify things to not see in the output"
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 50,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps",
          "min": 1.0,
          "max": 500.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/710f5e9f-9561-4e4f-9d1e-614205f62597/stable-diffusion.webp",
        "created_at": "2022-08-22T21:37:08.396208Z",
        "description": "A latent text-to-image diffusion model capable of generating photo-realistic images given any text input",
        "github_url": "https://github.com/replicate/cog-stable-diffusion",
        "license_url": "https://huggingface.co/spaces/CompVis/stable-diffusion-license",
        "name": "stable-diffusion",
        "owner": "stability-ai",
        "paper_url": "https://arxiv.org/abs/2112.10752",
        "run_count": 110213449,
        "url": "https://replicate.com/stability-ai/stable-diffusion",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "width",
        "height"
      ],
      "is_dynamic": false
    },
    {
      "title": "Stable Diffusion 3 5 Large",
      "description": "A text-to-image model that generates high-resolution images with fine details. It supports various artistic styles and produces diverse outputs from the same prompt, thanks to Query-Key Normalization.",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.StableDiffusion3_5_Large",
      "layout": "default",
      "properties": [
        {
          "name": "cfg",
          "type": {
            "type": "float"
          },
          "default": 3.5,
          "title": "Cfg",
          "description": "The guidance scale tells the model how similar the output should be to the prompt.",
          "min": 0.0,
          "max": 20.0
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Set a seed for reproducibility. Random by default."
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image for image to image mode. The aspect ratio of your output will match this image."
        },
        {
          "name": "steps",
          "type": {
            "type": "int"
          },
          "default": 35,
          "title": "Steps",
          "description": "Number of steps to run the sampler for.",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Prompt",
          "description": "Text prompt for image generation"
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "16:9",
              "21:9",
              "3:2",
              "2:3",
              "4:5",
              "5:4",
              "3:4",
              "4:3",
              "9:16",
              "9:21"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "1:1",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of your output image. This value is ignored if you are using an input image."
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 90,
          "title": "Output Quality",
          "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality.",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "prompt_strength",
          "type": {
            "type": "float"
          },
          "default": 0.85,
          "title": "Prompt Strength",
          "description": "Prompt strength (or denoising strength) when using image to image. 1.0 corresponds to full destruction of information in image."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/4b03d178-eaf3-4458-a752-dbc76098396b/replicate-prediction-_ycGb1jN.webp",
        "created_at": "2024-10-21T20:53:39.435334Z",
        "description": "A text-to-image model that generates high-resolution images with fine details. It supports various artistic styles and produces diverse outputs from the same prompt, thanks to Query-Key Normalization.",
        "github_url": null,
        "license_url": "https://huggingface.co/stabilityai/stable-diffusion-3.5-large/blob/main/LICENSE.md",
        "name": "stable-diffusion-3.5-large",
        "owner": "stability-ai",
        "paper_url": "https://arxiv.org/abs/2403.03206",
        "run_count": 606855,
        "url": "https://replicate.com/stability-ai/stable-diffusion-3.5-large",
        "visibility": "public",
        "weights_url": "https://huggingface.co/stabilityai/stable-diffusion-3.5-large"
      },
      "recommended_models": [],
      "basic_fields": [
        "cfg",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Stable Diffusion 3 5 Large Turbo",
      "description": "A text-to-image model that generates high-resolution images with fine details. It supports various artistic styles and produces diverse outputs from the same prompt, with a focus on fewer inference steps",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.StableDiffusion3_5_Large_Turbo",
      "layout": "default",
      "properties": [
        {
          "name": "cfg",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Cfg",
          "description": "The guidance scale tells the model how similar the output should be to the prompt.",
          "min": 0.0,
          "max": 20.0
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Set a seed for reproducibility. Random by default."
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image for image to image mode. The aspect ratio of your output will match this image."
        },
        {
          "name": "steps",
          "type": {
            "type": "int"
          },
          "default": 4,
          "title": "Steps",
          "description": "Number of steps to run the sampler for.",
          "min": 1.0,
          "max": 10.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Prompt",
          "description": "Text prompt for image generation"
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "16:9",
              "21:9",
              "3:2",
              "2:3",
              "4:5",
              "5:4",
              "3:4",
              "4:3",
              "9:16",
              "9:21"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "1:1",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of your output image. This value is ignored if you are using an input image."
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 90,
          "title": "Output Quality",
          "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality.",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "prompt_strength",
          "type": {
            "type": "float"
          },
          "default": 0.85,
          "title": "Prompt Strength",
          "description": "Prompt strength (or denoising strength) when using image to image. 1.0 corresponds to full destruction of information in image."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/9e1b4258-22bd-4a59-ba4a-ecac220a8a9b/replicate-prediction-_WU4XtaV.webp",
        "created_at": "2024-10-22T12:09:38.705615Z",
        "description": "A text-to-image model that generates high-resolution images with fine details. It supports various artistic styles and produces diverse outputs from the same prompt, with a focus on fewer inference steps",
        "github_url": null,
        "license_url": "https://huggingface.co/stabilityai/stable-diffusion-3.5-large-turbo/blob/main/LICENSE.md",
        "name": "stable-diffusion-3.5-large-turbo",
        "owner": "stability-ai",
        "paper_url": "https://arxiv.org/abs/2403.03206",
        "run_count": 117671,
        "url": "https://replicate.com/stability-ai/stable-diffusion-3.5-large-turbo",
        "visibility": "public",
        "weights_url": "https://huggingface.co/stabilityai/stable-diffusion-3.5-large-turbo"
      },
      "recommended_models": [],
      "basic_fields": [
        "cfg",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Stable Diffusion 3 5 Medium",
      "description": "2.5 billion parameter image model with improved MMDiT-X architecture",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.StableDiffusion3_5_Medium",
      "layout": "default",
      "properties": [
        {
          "name": "cfg",
          "type": {
            "type": "float"
          },
          "default": 5,
          "title": "Cfg",
          "description": "The guidance scale tells the model how similar the output should be to the prompt.",
          "min": 0.0,
          "max": 20.0
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Set a seed for reproducibility. Random by default."
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image for image to image mode. The aspect ratio of your output will match this image."
        },
        {
          "name": "steps",
          "type": {
            "type": "int"
          },
          "default": 40,
          "title": "Steps",
          "description": "Number of steps to run the sampler for.",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Prompt",
          "description": "Text prompt for image generation"
        },
        {
          "name": "aspect_ratio",
          "type": {
            "type": "enum",
            "values": [
              "1:1",
              "16:9",
              "21:9",
              "3:2",
              "2:3",
              "4:5",
              "5:4",
              "3:4",
              "4:3",
              "9:16",
              "9:21"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Aspect_ratio"
          },
          "default": "1:1",
          "title": "Aspect Ratio",
          "description": "The aspect ratio of your output image. This value is ignored if you are using an input image."
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 90,
          "title": "Output Quality",
          "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality.",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "prompt_strength",
          "type": {
            "type": "float"
          },
          "default": 0.85,
          "title": "Prompt Strength",
          "description": "Prompt strength (or denoising strength) when using image to image. 1.0 corresponds to full destruction of information in image."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/d65fc397-135b-4976-a84d-12980ab2c0bc/replicate-prediction-_4kWPYZu.webp",
        "created_at": "2024-10-29T12:55:45.899504Z",
        "description": "2.5 billion parameter image model with improved MMDiT-X architecture",
        "github_url": null,
        "license_url": "https://huggingface.co/stabilityai/stable-diffusion-3.5-medium/blob/main/LICENSE.md",
        "name": "stable-diffusion-3.5-medium",
        "owner": "stability-ai",
        "paper_url": "https://arxiv.org/abs/2403.03206",
        "run_count": 23082,
        "url": "https://replicate.com/stability-ai/stable-diffusion-3.5-medium",
        "visibility": "public",
        "weights_url": "https://huggingface.co/stabilityai/stable-diffusion-3.5-medium"
      },
      "recommended_models": [],
      "basic_fields": [
        "cfg",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Stable Diffusion Inpainting",
      "description": "Fill in masked parts of images with Stable Diffusion",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.StableDiffusionInpainting",
      "layout": "default",
      "properties": [
        {
          "name": "mask",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Mask",
          "description": "Black and white image to use as mask for inpainting over the image provided. White pixels are inpainted and black pixels are preserved."
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Leave blank to randomize the seed"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Initial image to generate variations of. Will be resized to height x width"
        },
        {
          "name": "width",
          "type": {
            "type": "enum",
            "values": [
              64,
              128,
              192,
              256,
              320,
              384,
              448,
              512,
              576,
              640,
              704,
              768,
              832,
              896,
              960,
              1024
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Width"
          },
          "default": 512,
          "title": "Width",
          "description": "Width of generated image in pixels. Needs to be a multiple of 64"
        },
        {
          "name": "height",
          "type": {
            "type": "enum",
            "values": [
              64,
              128,
              192,
              256,
              320,
              384,
              448,
              512,
              576,
              640,
              704,
              768,
              832,
              896,
              960,
              1024
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Height"
          },
          "default": 512,
          "title": "Height",
          "description": "Height of generated image in pixels. Needs to be a multiple of 64"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "a vision of paradise. unreal engine",
          "title": "Prompt",
          "description": "Input prompt"
        },
        {
          "name": "scheduler",
          "type": {
            "type": "enum",
            "values": [
              "DDIM",
              "K_EULER",
              "DPMSolverMultistep",
              "K_EULER_ANCESTRAL",
              "PNDM",
              "KLMS"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Scheduler"
          },
          "default": "DPMSolverMultistep",
          "title": "Scheduler",
          "description": "Choose a scheduler."
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of images to generate.",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 7.5,
          "title": "Guidance Scale",
          "description": "Scale for classifier-free guidance",
          "min": 1.0,
          "max": 20.0
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Negative Prompt",
          "description": "Specify things to not see in the output"
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 50,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps",
          "min": 1.0,
          "max": 500.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images. This feature is only available through the API. See [https://replicate.com/docs/how-does-replicate-work#safety](https://replicate.com/docs/how-does-replicate-work#safety)"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://replicate.delivery/pbxt/xs0pPOUM6HKmPlJJBXqKfE1YsiMzgNsCuGedlX0VqvPYifLgA/out-0.png",
        "created_at": "2022-12-02T17:40:01.152489Z",
        "description": "Fill in masked parts of images with Stable Diffusion",
        "github_url": "https://github.com/replicate/cog-stable-diffusion-inpainting",
        "license_url": "https://huggingface.co/stabilityai/stable-diffusion-2/blob/main/LICENSE-MODEL",
        "name": "stable-diffusion-inpainting",
        "owner": "stability-ai",
        "paper_url": null,
        "run_count": 19327062,
        "url": "https://replicate.com/stability-ai/stable-diffusion-inpainting",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "mask",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Stable Diffusion XL",
      "description": "A text-to-image generative AI model that creates beautiful images",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.StableDiffusionXL",
      "layout": "default",
      "properties": [
        {
          "name": "mask",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Mask",
          "description": "Input mask for inpaint mode. Black areas will be preserved, white areas will be inpainted."
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Leave blank to randomize the seed"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image for img2img or inpaint mode"
        },
        {
          "name": "width",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Width",
          "description": "Width of output image"
        },
        {
          "name": "height",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Height",
          "description": "Height of output image"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "An astronaut riding a rainbow unicorn",
          "title": "Prompt",
          "description": "Input prompt"
        },
        {
          "name": "refine",
          "type": {
            "type": "enum",
            "values": [
              "no_refiner",
              "expert_ensemble_refiner",
              "base_image_refiner"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Refine"
          },
          "default": "no_refiner",
          "title": "Refine",
          "description": "Which refine style to use"
        },
        {
          "name": "scheduler",
          "type": {
            "type": "enum",
            "values": [
              "DDIM",
              "DPMSolverMultistep",
              "HeunDiscrete",
              "KarrasDPM",
              "K_EULER_ANCESTRAL",
              "K_EULER",
              "PNDM"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Scheduler"
          },
          "default": "K_EULER",
          "title": "Scheduler",
          "description": "scheduler"
        },
        {
          "name": "lora_scale",
          "type": {
            "type": "float"
          },
          "default": 0.6,
          "title": "Lora Scale",
          "description": "LoRA additive scale. Only applicable on trained models.",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of images to output.",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "refine_steps",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Refine Steps",
          "description": "For base_image_refiner, the number of steps to refine, defaults to num_inference_steps"
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 7.5,
          "title": "Guidance Scale",
          "description": "Scale for classifier-free guidance",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "apply_watermark",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Apply Watermark",
          "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
        },
        {
          "name": "high_noise_frac",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "High Noise Frac",
          "description": "For expert_ensemble_refiner, the fraction of noise to use",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Negative Prompt",
          "description": "Input Negative Prompt"
        },
        {
          "name": "prompt_strength",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Prompt Strength",
          "description": "Prompt strength when using img2img / inpaint. 1.0 corresponds to full destruction of information in image",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "replicate_weights",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Replicate Weights",
          "description": "Replicate LoRA weights to use. Leave blank to use the default weights."
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 50,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps",
          "min": 1.0,
          "max": 500.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images. This feature is only available through the API. See [https://replicate.com/docs/how-does-replicate-work#safety](https://replicate.com/docs/how-does-replicate-work#safety)"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/9065f9e3-40da-4742-8cb8-adfa8e794c0d/sdxl_cover.jpg",
        "created_at": "2023-07-26T17:53:09.882651Z",
        "description": "A text-to-image generative AI model that creates beautiful images",
        "github_url": "https://github.com/replicate/cog-sdxl",
        "license_url": "https://github.com/Stability-AI/generative-models/blob/main/model_licenses/LICENSE-SDXL1.0",
        "name": "sdxl",
        "owner": "stability-ai",
        "paper_url": "https://arxiv.org/abs/2307.01952",
        "run_count": 76563404,
        "url": "https://replicate.com/stability-ai/sdxl",
        "visibility": "public",
        "weights_url": "https://huggingface.co/stabilityai/stable-diffusion-xl-base-1.0"
      },
      "recommended_models": [],
      "basic_fields": [
        "mask",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Stable Diffusion XLLightning",
      "description": "SDXL-Lightning by ByteDance: a fast text-to-image model that makes high-quality images in 4 steps",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.StableDiffusionXLLightning",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Leave blank to randomize the seed"
        },
        {
          "name": "width",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Width",
          "description": "Width of output image. Recommended 1024 or 1280",
          "min": 256.0,
          "max": 1280.0
        },
        {
          "name": "height",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Height",
          "description": "Height of output image. Recommended 1024 or 1280",
          "min": 256.0,
          "max": 1280.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "self-portrait of a woman, lightning in the background",
          "title": "Prompt",
          "description": "Input prompt"
        },
        {
          "name": "scheduler",
          "type": {
            "type": "enum",
            "values": [
              "DDIM",
              "DPMSolverMultistep",
              "HeunDiscrete",
              "KarrasDPM",
              "K_EULER_ANCESTRAL",
              "K_EULER",
              "PNDM",
              "DPM++2MSDE"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Scheduler"
          },
          "default": "K_EULER",
          "title": "Scheduler",
          "description": "scheduler"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of images to output.",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 0,
          "title": "Guidance Scale",
          "description": "Scale for classifier-free guidance",
          "min": 0.0,
          "max": 50.0
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "worst quality, low quality",
          "title": "Negative Prompt",
          "description": "Negative Input prompt"
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 4,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps. 4 for best results",
          "min": 1.0,
          "max": 10.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/779f3f58-c3db-4403-a01b-3ffed97a1449/out-0-1.jpg",
        "created_at": "2024-02-21T07:36:15.534380Z",
        "description": "SDXL-Lightning by ByteDance: a fast text-to-image model that makes high-quality images in 4 steps",
        "github_url": "https://github.com/lucataco/cog-sdxl-lightning-4step",
        "license_url": "https://huggingface.co/ByteDance/SDXL-Lightning/blob/main/LICENSE.md",
        "name": "sdxl-lightning-4step",
        "owner": "bytedance",
        "paper_url": "https://huggingface.co/ByteDance/SDXL-Lightning/resolve/main/sdxl_lightning_report.pdf",
        "run_count": 808571480,
        "url": "https://replicate.com/bytedance/sdxl-lightning-4step",
        "visibility": "public",
        "weights_url": "https://huggingface.co/ByteDance/SDXL-Lightning"
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "width",
        "height"
      ],
      "is_dynamic": false
    },
    {
      "title": "Sticker Maker",
      "description": "Make stickers with AI. Generates graphics with transparent backgrounds.",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.StickerMaker",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Fix the random seed for reproducibility"
        },
        {
          "name": "steps",
          "type": {
            "type": "int"
          },
          "default": 17,
          "title": "Steps"
        },
        {
          "name": "width",
          "type": {
            "type": "int"
          },
          "default": 1152,
          "title": "Width"
        },
        {
          "name": "height",
          "type": {
            "type": "int"
          },
          "default": 1152,
          "title": "Height"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "a cute cat",
          "title": "Prompt"
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 90,
          "title": "Output Quality",
          "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality.",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Negative Prompt",
          "description": "Things you do not want in the image"
        },
        {
          "name": "number_of_images",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Number Of Images",
          "description": "Number of images to generate",
          "min": 1.0,
          "max": 10.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/fb7cf2ea-aacd-458d-9d19-76dda21f9748/sticker-maker.webp",
        "created_at": "2024-02-23T11:59:22.452180Z",
        "description": "Make stickers with AI. Generates graphics with transparent backgrounds.",
        "github_url": "https://github.com/fofr/cog-stickers",
        "license_url": "https://github.com/fofr/cog-stickers/blob/main/LICENSE",
        "name": "sticker-maker",
        "owner": "fofr",
        "paper_url": null,
        "run_count": 819365,
        "url": "https://replicate.com/fofr/sticker-maker",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "steps",
        "width"
      ],
      "is_dynamic": false
    },
    {
      "title": "Style Transfer",
      "description": "Transfer the style of one image to another",
      "namespace": "replicate.image.generate",
      "node_type": "replicate.image.generate.StyleTransfer",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Set a seed for reproducibility. Random by default."
        },
        {
          "name": "model",
          "type": {
            "type": "enum",
            "values": [
              "fast",
              "high-quality",
              "realistic",
              "cinematic",
              "animated"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Model"
          },
          "default": "fast",
          "title": "Model",
          "description": "Model to use for the generation"
        },
        {
          "name": "width",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Width",
          "description": "Width of the output image (ignored if structure image given)"
        },
        {
          "name": "height",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Height",
          "description": "Height of the output image (ignored if structure image given)"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "An astronaut riding a unicorn",
          "title": "Prompt",
          "description": "Prompt for the image"
        },
        {
          "name": "style_image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Style Image",
          "description": "Copy the style from this image"
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.generate.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 80,
          "title": "Output Quality",
          "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality.",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Negative Prompt",
          "description": "Things you do not want to see in your image"
        },
        {
          "name": "structure_image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Structure Image",
          "description": "An optional image to copy structure from. Output images will use the same aspect ratio."
        },
        {
          "name": "number_of_images",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Number Of Images",
          "description": "Number of images to generate",
          "min": 1.0,
          "max": 10.0
        },
        {
          "name": "structure_depth_strength",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Structure Depth Strength",
          "description": "Strength of the depth controlnet",
          "min": 0.0,
          "max": 2.0
        },
        {
          "name": "structure_denoising_strength",
          "type": {
            "type": "float"
          },
          "default": 0.65,
          "title": "Structure Denoising Strength",
          "description": "How much of the original image (and colors) to preserve (0 is all, 1 is none, 0.65 is a good balance)",
          "min": 0.0,
          "max": 1.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/fd0ac369-c6ac-4927-b882-ece29cffc45d/cover.webp",
        "created_at": "2024-04-17T20:34:49.861066Z",
        "description": "Transfer the style of one image to another",
        "github_url": "https://github.com/fofr/cog-style-transfer",
        "license_url": "https://github.com/fofr/cog-style-transfer/blob/main/LICENSE",
        "name": "style-transfer",
        "owner": "fofr",
        "paper_url": null,
        "run_count": 662337,
        "url": "https://replicate.com/fofr/style-transfer",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "model",
        "width"
      ],
      "is_dynamic": false
    },
    {
      "title": "Code Former",
      "description": "Robust face restoration algorithm for old photos/AI-generated faces",
      "namespace": "replicate.image.enhance",
      "node_type": "replicate.image.enhance.CodeFormer",
      "layout": "default",
      "properties": [
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image"
        },
        {
          "name": "upscale",
          "type": {
            "type": "int"
          },
          "default": 2,
          "title": "Upscale",
          "description": "The final upsampling scale of the image"
        },
        {
          "name": "face_upsample",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Face Upsample",
          "description": "Upsample restored faces for high-resolution AI-created images"
        },
        {
          "name": "background_enhance",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Background Enhance",
          "description": "Enhance background image with Real-ESRGAN"
        },
        {
          "name": "codeformer_fidelity",
          "type": {
            "type": "float"
          },
          "default": 0.5,
          "title": "Codeformer Fidelity",
          "description": "Balance the quality (lower number) and fidelity (higher number).",
          "min": 0.0,
          "max": 1.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/cf736d61-411f-4301-89b3-16aff1a02ed1/codeformer_logo.png",
        "created_at": "2023-09-06T04:10:50.158696Z",
        "description": "Robust face restoration algorithm for old photos/AI-generated faces",
        "github_url": "https://github.com/sczhou/CodeFormer",
        "license_url": "https://github.com/sczhou/CodeFormer/blob/master/LICENSE",
        "name": "codeformer",
        "owner": "lucataco",
        "paper_url": "https://arxiv.org/abs/2206.11253",
        "run_count": 1099654,
        "url": "https://replicate.com/lucataco/codeformer",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "image",
        "upscale",
        "face_upsample"
      ],
      "is_dynamic": false
    },
    {
      "title": "Maxim",
      "description": "Multi-Axis MLP for Image Processing",
      "namespace": "replicate.image.enhance",
      "node_type": "replicate.image.enhance.Maxim",
      "layout": "default",
      "properties": [
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image."
        },
        {
          "name": "model",
          "type": {
            "type": "enum",
            "optional": true,
            "values": [
              "Image Denoising",
              "Image Deblurring (GoPro)",
              "Image Deblurring (REDS)",
              "Image Deblurring (RealBlur_R)",
              "Image Deblurring (RealBlur_J)",
              "Image Deraining (Rain streak)",
              "Image Deraining (Rain drop)",
              "Image Dehazing (Indoor)",
              "Image Dehazing (Outdoor)",
              "Image Enhancement (Low-light)",
              "Image Enhancement (Retouching)"
            ],
            "type_name": "nodetool.nodes.replicate.image.enhance.Model"
          },
          "title": "Model",
          "description": "Choose a model."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/df5769aa-0908-4a2e-9378-c582838461db/1fromGOPR0950.png",
        "created_at": "2022-04-20T16:32:30.049391Z",
        "description": "Multi-Axis MLP for Image Processing",
        "github_url": "https://github.com/google-research/maxim",
        "license_url": "https://github.com/google-research/maxim/blob/main/LICENSE",
        "name": "maxim",
        "owner": "google-research",
        "paper_url": "https://arxiv.org/abs/2201.02973",
        "run_count": 490672,
        "url": "https://replicate.com/google-research/maxim",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "image",
        "model"
      ],
      "is_dynamic": false
    },
    {
      "title": "Night Enhancement",
      "description": "Unsupervised Night Image Enhancement",
      "namespace": "replicate.image.enhance",
      "node_type": "replicate.image.enhance.Night_Enhancement",
      "layout": "default",
      "properties": [
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://replicate.delivery/mgxm/60c4c0d8-c82f-42e0-96ee-71392d32b6fe/output.png",
        "created_at": "2022-08-13T15:54:02.662983Z",
        "description": "Unsupervised Night Image Enhancement",
        "github_url": "https://github.com/jinyeying/night-enhancement",
        "license_url": "https://github.com/jinyeying/night-enhancement/blob/main/LICENSE",
        "name": "night-enhancement",
        "owner": "cjwbw",
        "paper_url": "https://arxiv.org/pdf/2207.10564.pdf",
        "run_count": 41864,
        "url": "https://replicate.com/cjwbw/night-enhancement",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Old Photos Restoration",
      "description": "Bringing Old Photos Back to Life",
      "namespace": "replicate.image.enhance",
      "node_type": "replicate.image.enhance.OldPhotosRestoration",
      "layout": "default",
      "properties": [
        {
          "name": "HR",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Hr",
          "description": "whether the input image is high-resolution"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "input image."
        },
        {
          "name": "with_scratch",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "With Scratch",
          "description": "whether the input image is scratched"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/9f2124ae-ad0f-4a41-bf7e-c3173d0f7c9b/out.png",
        "created_at": "2021-09-11T14:44:30.681818Z",
        "description": "Bringing Old Photos Back to Life",
        "github_url": "https://github.com/microsoft/Bringing-Old-Photos-Back-to-Life",
        "license_url": "https://github.com/microsoft/Bringing-Old-Photos-Back-to-Life/blob/master/LICENSE",
        "name": "bringing-old-photos-back-to-life",
        "owner": "microsoft",
        "paper_url": "https://arxiv.org/abs/2004.09484",
        "run_count": 965655,
        "url": "https://replicate.com/microsoft/bringing-old-photos-back-to-life",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "HR",
        "image",
        "with_scratch"
      ],
      "is_dynamic": false
    },
    {
      "title": "Supir V 0 F",
      "description": "Practicing Model Scaling for Photo-Realistic Image Restoration In the Wild. This is the SUPIR-v0F model and does NOT use LLaVA-13b.",
      "namespace": "replicate.image.enhance",
      "node_type": "replicate.image.enhance.Supir_V0F",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Leave blank to randomize the seed"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Low quality input image."
        },
        {
          "name": "s_cfg",
          "type": {
            "type": "float"
          },
          "default": 7.5,
          "title": "S Cfg",
          "description": " Classifier-free guidance scale for prompts.",
          "min": 1.0,
          "max": 20.0
        },
        {
          "name": "s_churn",
          "type": {
            "type": "float"
          },
          "default": 5,
          "title": "S Churn",
          "description": "Original churn hy-param of EDM."
        },
        {
          "name": "s_noise",
          "type": {
            "type": "float"
          },
          "default": 1.003,
          "title": "S Noise",
          "description": "Original noise hy-param of EDM."
        },
        {
          "name": "upscale",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Upscale",
          "description": "Upsampling ratio of given inputs."
        },
        {
          "name": "a_prompt",
          "type": {
            "type": "str"
          },
          "default": "Cinematic, High Contrast, highly detailed, taken using a Canon EOS R camera, hyper detailed photo - realistic maximum detail, 32k, Color Grading, ultra HD, extreme meticulous detailing, skin pore detailing, hyper sharpness, perfect without deformations.",
          "title": "A Prompt",
          "description": "Additive positive prompt for the inputs."
        },
        {
          "name": "min_size",
          "type": {
            "type": "float"
          },
          "default": 1024,
          "title": "Min Size",
          "description": "Minimum resolution of output images."
        },
        {
          "name": "n_prompt",
          "type": {
            "type": "str"
          },
          "default": "painting, oil painting, illustration, drawing, art, sketch, oil painting, cartoon, CG Style, 3D render, unreal engine, blurring, dirty, messy, worst quality, low quality, frames, watermark, signature, jpeg artifacts, deformed, lowres, over-smooth",
          "title": "N Prompt",
          "description": "Negative prompt for the inputs."
        },
        {
          "name": "s_stage1",
          "type": {
            "type": "int"
          },
          "default": -1,
          "title": "S Stage1",
          "description": "Control Strength of Stage1 (negative means invalid)."
        },
        {
          "name": "s_stage2",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "S Stage2",
          "description": "Control Strength of Stage2."
        },
        {
          "name": "edm_steps",
          "type": {
            "type": "int"
          },
          "default": 50,
          "title": "Edm Steps",
          "description": "Number of steps for EDM Sampling Schedule.",
          "min": 1.0,
          "max": 500.0
        },
        {
          "name": "linear_CFG",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Linear Cfg",
          "description": "Linearly (with sigma) increase CFG from 'spt_linear_CFG' to s_cfg."
        },
        {
          "name": "color_fix_type",
          "type": {
            "type": "enum",
            "values": [
              "None",
              "AdaIn",
              "Wavelet"
            ],
            "type_name": "nodetool.nodes.replicate.image.enhance.Color_fix_type"
          },
          "default": "Wavelet",
          "title": "Color Fix Type",
          "description": "Color Fixing Type.."
        },
        {
          "name": "spt_linear_CFG",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Spt Linear Cfg",
          "description": "Start point of linearly increasing CFG."
        },
        {
          "name": "linear_s_stage2",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Linear S Stage2",
          "description": "Linearly (with sigma) increase s_stage2 from 'spt_linear_s_stage2' to s_stage2."
        },
        {
          "name": "spt_linear_s_stage2",
          "type": {
            "type": "float"
          },
          "default": 0,
          "title": "Spt Linear S Stage2",
          "description": "Start point of linearly increasing s_stage2."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://replicate.delivery/pbxt/if3rev1GNfAB6IMsqqW8CqQtVP75pXvU3dLQeV6CFkVutgmJB/out.png",
        "created_at": "2024-02-23T16:38:51.414944Z",
        "description": "Practicing Model Scaling for Photo-Realistic Image Restoration In the Wild. This is the SUPIR-v0F model and does NOT use LLaVA-13b.",
        "github_url": "https://github.com/chenxwh/SUPIR",
        "license_url": "https://github.com/Fanghua-Yu/SUPIR/blob/master/LICENSE",
        "name": "supir-v0f",
        "owner": "cjwbw",
        "paper_url": "https://arxiv.org/abs/2401.13627",
        "run_count": 11975,
        "url": "https://replicate.com/cjwbw/supir-v0f",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "image",
        "s_cfg"
      ],
      "is_dynamic": false
    },
    {
      "title": "Supir V 0 Q",
      "description": "Practicing Model Scaling for Photo-Realistic Image Restoration In the Wild. This is the SUPIR-v0Q model and does NOT use LLaVA-13b.",
      "namespace": "replicate.image.enhance",
      "node_type": "replicate.image.enhance.Supir_V0Q",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Leave blank to randomize the seed"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Low quality input image."
        },
        {
          "name": "s_cfg",
          "type": {
            "type": "float"
          },
          "default": 7.5,
          "title": "S Cfg",
          "description": " Classifier-free guidance scale for prompts.",
          "min": 1.0,
          "max": 20.0
        },
        {
          "name": "s_churn",
          "type": {
            "type": "float"
          },
          "default": 5,
          "title": "S Churn",
          "description": "Original churn hy-param of EDM."
        },
        {
          "name": "s_noise",
          "type": {
            "type": "float"
          },
          "default": 1.003,
          "title": "S Noise",
          "description": "Original noise hy-param of EDM."
        },
        {
          "name": "upscale",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Upscale",
          "description": "Upsampling ratio of given inputs."
        },
        {
          "name": "a_prompt",
          "type": {
            "type": "str"
          },
          "default": "Cinematic, High Contrast, highly detailed, taken using a Canon EOS R camera, hyper detailed photo - realistic maximum detail, 32k, Color Grading, ultra HD, extreme meticulous detailing, skin pore detailing, hyper sharpness, perfect without deformations.",
          "title": "A Prompt",
          "description": "Additive positive prompt for the inputs."
        },
        {
          "name": "min_size",
          "type": {
            "type": "float"
          },
          "default": 1024,
          "title": "Min Size",
          "description": "Minimum resolution of output images."
        },
        {
          "name": "n_prompt",
          "type": {
            "type": "str"
          },
          "default": "painting, oil painting, illustration, drawing, art, sketch, oil painting, cartoon, CG Style, 3D render, unreal engine, blurring, dirty, messy, worst quality, low quality, frames, watermark, signature, jpeg artifacts, deformed, lowres, over-smooth",
          "title": "N Prompt",
          "description": "Negative prompt for the inputs."
        },
        {
          "name": "s_stage1",
          "type": {
            "type": "int"
          },
          "default": -1,
          "title": "S Stage1",
          "description": "Control Strength of Stage1 (negative means invalid)."
        },
        {
          "name": "s_stage2",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "S Stage2",
          "description": "Control Strength of Stage2."
        },
        {
          "name": "edm_steps",
          "type": {
            "type": "int"
          },
          "default": 50,
          "title": "Edm Steps",
          "description": "Number of steps for EDM Sampling Schedule.",
          "min": 1.0,
          "max": 500.0
        },
        {
          "name": "linear_CFG",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Linear Cfg",
          "description": "Linearly (with sigma) increase CFG from 'spt_linear_CFG' to s_cfg."
        },
        {
          "name": "color_fix_type",
          "type": {
            "type": "enum",
            "values": [
              "None",
              "AdaIn",
              "Wavelet"
            ],
            "type_name": "nodetool.nodes.replicate.image.enhance.Color_fix_type"
          },
          "default": "Wavelet",
          "title": "Color Fix Type",
          "description": "Color Fixing Type.."
        },
        {
          "name": "spt_linear_CFG",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Spt Linear Cfg",
          "description": "Start point of linearly increasing CFG."
        },
        {
          "name": "linear_s_stage2",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Linear S Stage2",
          "description": "Linearly (with sigma) increase s_stage2 from 'spt_linear_s_stage2' to s_stage2."
        },
        {
          "name": "spt_linear_s_stage2",
          "type": {
            "type": "float"
          },
          "default": 0,
          "title": "Spt Linear S Stage2",
          "description": "Start point of linearly increasing s_stage2."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://replicate.delivery/pbxt/gYLkKNiBcnZDD9dnPxlUR4iurpbr1QANec0VmA2kv3Ol6zMJA/out.png",
        "created_at": "2024-02-23T16:26:24.376439Z",
        "description": "Practicing Model Scaling for Photo-Realistic Image Restoration In the Wild. This is the SUPIR-v0Q model and does NOT use LLaVA-13b.",
        "github_url": "https://github.com/chenxwh/SUPIR",
        "license_url": "https://github.com/Fanghua-Yu/SUPIR/blob/master/LICENSE",
        "name": "supir-v0q",
        "owner": "cjwbw",
        "paper_url": "https://arxiv.org/abs/2401.13627",
        "run_count": 14361,
        "url": "https://replicate.com/cjwbw/supir-v0q",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "image",
        "s_cfg"
      ],
      "is_dynamic": false
    },
    {
      "title": "Clarity Upscaler",
      "description": "High resolution image Upscaler and Enhancer. Use at ClarityAI.co. A free Magnific alternative. Twitter/X: @philz1337x",
      "namespace": "replicate.image.upscale",
      "node_type": "replicate.image.upscale.ClarityUpscaler",
      "layout": "default",
      "properties": [
        {
          "name": "mask",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Mask",
          "description": "Mask image to mark areas that should be preserved during upscaling"
        },
        {
          "name": "seed",
          "type": {
            "type": "int"
          },
          "default": 1337,
          "title": "Seed",
          "description": "Random seed. Leave blank to randomize the seed"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "input image"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "masterpiece, best quality, highres, <lora:more_details:0.5> <lora:SDXLrender_v2.0:1>",
          "title": "Prompt",
          "description": "Prompt"
        },
        {
          "name": "dynamic",
          "type": {
            "type": "float"
          },
          "default": 6,
          "title": "Dynamic",
          "description": "HDR, try from 3 - 9",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "handfix",
          "type": {
            "type": "enum",
            "values": [
              "disabled",
              "hands_only",
              "image_and_hands"
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Handfix"
          },
          "default": "disabled",
          "title": "Handfix",
          "description": "Use clarity to fix hands in the image"
        },
        {
          "name": "pattern",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Pattern",
          "description": "Upscale a pattern with seamless tiling"
        },
        {
          "name": "sharpen",
          "type": {
            "type": "float"
          },
          "default": 0,
          "title": "Sharpen",
          "description": "Sharpen the image after upscaling. The higher the value, the more sharpening is applied. 0 for no sharpening",
          "min": 0.0,
          "max": 10.0
        },
        {
          "name": "sd_model",
          "type": {
            "type": "enum",
            "values": [
              "epicrealism_naturalSinRC1VAE.safetensors [84d76a0328]",
              "juggernaut_reborn.safetensors [338b85bc4f]",
              "flat2DAnimerge_v45Sharp.safetensors"
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Sd_model"
          },
          "default": "juggernaut_reborn.safetensors [338b85bc4f]",
          "title": "Sd Model",
          "description": "Stable Diffusion model checkpoint"
        },
        {
          "name": "scheduler",
          "type": {
            "type": "enum",
            "values": [
              "DPM++ 2M Karras",
              "DPM++ SDE Karras",
              "DPM++ 2M SDE Exponential",
              "DPM++ 2M SDE Karras",
              "Euler a",
              "Euler",
              "LMS",
              "Heun",
              "DPM2",
              "DPM2 a",
              "DPM++ 2S a",
              "DPM++ 2M",
              "DPM++ SDE",
              "DPM++ 2M SDE",
              "DPM++ 2M SDE Heun",
              "DPM++ 2M SDE Heun Karras",
              "DPM++ 2M SDE Heun Exponential",
              "DPM++ 3M SDE",
              "DPM++ 3M SDE Karras",
              "DPM++ 3M SDE Exponential",
              "DPM fast",
              "DPM adaptive",
              "LMS Karras",
              "DPM2 Karras",
              "DPM2 a Karras",
              "DPM++ 2S a Karras",
              "Restart",
              "DDIM",
              "PLMS",
              "UniPC"
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Scheduler"
          },
          "default": "DPM++ 3M SDE Karras",
          "title": "Scheduler",
          "description": "scheduler"
        },
        {
          "name": "creativity",
          "type": {
            "type": "float"
          },
          "default": 0.35,
          "title": "Creativity",
          "description": "Creativity, try from 0.3 - 0.9",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "lora_links",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Lora Links",
          "description": "Link to a lora file you want to use in your upscaling. Multiple links possible, seperated by comma"
        },
        {
          "name": "downscaling",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Downscaling",
          "description": "Downscale the image before upscaling. Can improve quality and speed for images with high resolution but lower quality"
        },
        {
          "name": "resemblance",
          "type": {
            "type": "float"
          },
          "default": 0.6,
          "title": "Resemblance",
          "description": "Resemblance, try from 0.3 - 1.6",
          "min": 0.0,
          "max": 3.0
        },
        {
          "name": "scale_factor",
          "type": {
            "type": "float"
          },
          "default": 2,
          "title": "Scale Factor",
          "description": "Scale factor"
        },
        {
          "name": "tiling_width",
          "type": {
            "type": "enum",
            "values": [
              16,
              32,
              48,
              64,
              80,
              96,
              112,
              128,
              144,
              160,
              176,
              192,
              208,
              224,
              240,
              256
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Tiling_width"
          },
          "default": 112,
          "title": "Tiling Width",
          "description": "Fractality, set lower tile width for a high Fractality"
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Output_format"
          },
          "default": "png",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "tiling_height",
          "type": {
            "type": "enum",
            "values": [
              16,
              32,
              48,
              64,
              80,
              96,
              112,
              128,
              144,
              160,
              176,
              192,
              208,
              224,
              240,
              256
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Tiling_height"
          },
          "default": 144,
          "title": "Tiling Height",
          "description": "Fractality, set lower tile height for a high Fractality"
        },
        {
          "name": "custom_sd_model",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Custom Sd Model"
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "(worst quality, low quality, normal quality:2) JuggernautNegative-neg",
          "title": "Negative Prompt",
          "description": "Negative Prompt"
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 18,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps",
          "min": 1.0,
          "max": 100.0
        },
        {
          "name": "downscaling_resolution",
          "type": {
            "type": "int"
          },
          "default": 768,
          "title": "Downscaling Resolution",
          "description": "Downscaling resolution"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/76fbe6df-517d-480a-a6e4-dce383b40bbb/Bildschirmfoto_2024-03-30_um_09.2.png",
        "created_at": "2024-03-15T02:35:32.167345Z",
        "description": "High resolution image Upscaler and Enhancer. Use at ClarityAI.co. A free Magnific alternative. Twitter/X: @philz1337x",
        "github_url": "https://github.com/philz1337x/clarity-upscaler",
        "license_url": "https://github.com/philz1337x/clarity-upscaler/blob/main/LICENSE.txt",
        "name": "clarity-upscaler",
        "owner": "philz1337x",
        "paper_url": "https://clarityai.co",
        "run_count": 9864042,
        "url": "https://replicate.com/philz1337x/clarity-upscaler",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "mask",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "GFPGAN",
      "description": "Practical face restoration algorithm for *old photos* or *AI-generated faces*",
      "namespace": "replicate.image.upscale",
      "node_type": "replicate.image.upscale.GFPGAN",
      "layout": "default",
      "properties": [
        {
          "name": "img",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Img",
          "description": "Input"
        },
        {
          "name": "scale",
          "type": {
            "type": "float"
          },
          "default": 2,
          "title": "Scale",
          "description": "Rescaling factor"
        },
        {
          "name": "version",
          "type": {
            "type": "enum",
            "values": [
              "v1.2",
              "v1.3",
              "v1.4",
              "RestoreFormer"
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Version"
          },
          "default": "v1.4",
          "title": "Version",
          "description": "GFPGAN version. v1.3: better quality. v1.4: more details and better identity."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/40223a51-a460-4f27-b13a-bf5d6429b686/output_1.png",
        "created_at": "2021-09-15T22:08:48.809672Z",
        "description": "Practical face restoration algorithm for *old photos* or *AI-generated faces*",
        "github_url": "https://github.com/replicate/GFPGAN",
        "license_url": "https://github.com/TencentARC/GFPGAN/blob/master/LICENSE",
        "name": "gfpgan",
        "owner": "tencentarc",
        "paper_url": "https://arxiv.org/abs/2101.04061",
        "run_count": 86750171,
        "url": "https://replicate.com/tencentarc/gfpgan",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "img",
        "scale",
        "version"
      ],
      "is_dynamic": false
    },
    {
      "title": "High Resolution Control Net Tile",
      "description": "UPDATE: new upscaling algorithm for a much improved image quality. Fermat.app open-source implementation of an efficient ControlNet 1.1 tile for high-quality upscales. Increase the creativity to encourage hallucination.",
      "namespace": "replicate.image.upscale",
      "node_type": "replicate.image.upscale.HighResolutionControlNetTile",
      "layout": "default",
      "properties": [
        {
          "name": "hdr",
          "type": {
            "type": "float"
          },
          "default": 0,
          "title": "Hdr",
          "description": "HDR improvement over the original image",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Seed"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Control image for scribble controlnet"
        },
        {
          "name": "steps",
          "type": {
            "type": "int"
          },
          "default": 8,
          "title": "Steps",
          "description": "Steps"
        },
        {
          "name": "format",
          "type": {
            "type": "enum",
            "values": [
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Format"
          },
          "default": "jpg",
          "title": "Format",
          "description": "Format of the output."
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Prompt for the model"
        },
        {
          "name": "scheduler",
          "type": {
            "type": "enum",
            "values": [
              "DDIM",
              "DPMSolverMultistep",
              "K_EULER_ANCESTRAL",
              "K_EULER"
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Scheduler"
          },
          "default": "DDIM",
          "title": "Scheduler",
          "description": "Choose a scheduler."
        },
        {
          "name": "creativity",
          "type": {
            "type": "float"
          },
          "default": 0.35,
          "title": "Creativity",
          "description": "Denoising strength. 1 means total destruction of the original image",
          "min": 0.1,
          "max": 1.0
        },
        {
          "name": "guess_mode",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Guess Mode",
          "description": "In this mode, the ControlNet encoder will try best to recognize the content of the input image even if you remove all prompts."
        },
        {
          "name": "resolution",
          "type": {
            "type": "enum",
            "values": [
              2048,
              2560,
              4096
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Resolution"
          },
          "default": 2560,
          "title": "Resolution",
          "description": "Image resolution"
        },
        {
          "name": "resemblance",
          "type": {
            "type": "float"
          },
          "default": 0.85,
          "title": "Resemblance",
          "description": "Conditioning scale for controlnet",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 0,
          "title": "Guidance Scale",
          "description": "Scale for classifier-free guidance, should be 0.",
          "min": 0.0,
          "max": 30.0
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "teeth, tooth, open mouth, longbody, lowres, bad anatomy, bad hands, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality, mutant",
          "title": "Negative Prompt",
          "description": "Negative prompt"
        },
        {
          "name": "lora_details_strength",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Lora Details Strength",
          "description": "Strength of the image's details",
          "min": -5.0,
          "max": 3.0
        },
        {
          "name": "lora_sharpness_strength",
          "type": {
            "type": "float"
          },
          "default": 1.25,
          "title": "Lora Sharpness Strength",
          "description": "Strength of the image's sharpness. We don't recommend values above 2.",
          "min": -5.0,
          "max": 10.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/db4434b4-7b0f-49f7-b78a-774fe9e630a7/batou.jpeg",
        "created_at": "2023-12-08T02:32:38.082772Z",
        "description": "UPDATE: new upscaling algorithm for a much improved image quality. Fermat.app open-source implementation of an efficient ControlNet 1.1 tile for high-quality upscales. Increase the creativity to encourage hallucination.",
        "github_url": null,
        "license_url": null,
        "name": "high-resolution-controlnet-tile",
        "owner": "fermatresearch",
        "paper_url": null,
        "run_count": 605582,
        "url": "https://replicate.com/fermatresearch/high-resolution-controlnet-tile",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "hdr",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Magic Image Refiner",
      "description": "A better alternative to SDXL refiners, providing a lot of quality and detail. Can also be used for inpainting or upscaling.",
      "namespace": "replicate.image.upscale",
      "node_type": "replicate.image.upscale.MagicImageRefiner",
      "layout": "default",
      "properties": [
        {
          "name": "hdr",
          "type": {
            "type": "float"
          },
          "default": 0,
          "title": "Hdr",
          "description": "HDR improvement over the original image",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "mask",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Mask",
          "description": "When provided, refines some section of the image. Must be the same size as the image"
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Seed"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Image to refine"
        },
        {
          "name": "steps",
          "type": {
            "type": "int"
          },
          "default": 20,
          "title": "Steps",
          "description": "Steps"
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Prompt for the model"
        },
        {
          "name": "scheduler",
          "type": {
            "type": "enum",
            "values": [
              "DDIM",
              "DPMSolverMultistep",
              "K_EULER_ANCESTRAL",
              "K_EULER"
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Scheduler"
          },
          "default": "DDIM",
          "title": "Scheduler",
          "description": "Choose a scheduler."
        },
        {
          "name": "creativity",
          "type": {
            "type": "float"
          },
          "default": 0.25,
          "title": "Creativity",
          "description": "Denoising strength. 1 means total destruction of the original image",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "guess_mode",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Guess Mode",
          "description": "In this mode, the ControlNet encoder will try best to recognize the content of the input image even if you remove all prompts. The `guidance_scale` between 3.0 and 5.0 is recommended."
        },
        {
          "name": "resolution",
          "type": {
            "type": "enum",
            "values": [
              "original",
              "1024",
              "2048"
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Resolution"
          },
          "default": "original",
          "title": "Resolution",
          "description": "Image resolution"
        },
        {
          "name": "resemblance",
          "type": {
            "type": "float"
          },
          "default": 0.75,
          "title": "Resemblance",
          "description": "Conditioning scale for controlnet",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 7,
          "title": "Guidance Scale",
          "description": "Scale for classifier-free guidance",
          "min": 0.1,
          "max": 30.0
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "teeth, tooth, open mouth, longbody, lowres, bad anatomy, bad hands, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality, mutant",
          "title": "Negative Prompt",
          "description": "Negative prompt"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://replicate.delivery/pbxt/H3ZmqoAgsBonKFilPafiEsvYsc2FnjD8EW3vMt6KpkYfd0ISA/out-0.png",
        "created_at": "2024-01-03T16:55:24.594128Z",
        "description": "A better alternative to SDXL refiners, providing a lot of quality and detail. Can also be used for inpainting or upscaling.",
        "github_url": "https://github.com/BatouResearch/magic-image-refiner",
        "license_url": null,
        "name": "magic-image-refiner",
        "owner": "fermatresearch",
        "paper_url": null,
        "run_count": 922987,
        "url": "https://replicate.com/fermatresearch/magic-image-refiner",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "hdr",
        "mask",
        "seed"
      ],
      "is_dynamic": false
    },
    {
      "title": "Real Esr Gan",
      "description": "Real-ESRGAN for image upscaling on an A100",
      "namespace": "replicate.image.upscale",
      "node_type": "replicate.image.upscale.RealEsrGan",
      "layout": "default",
      "properties": [
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image"
        },
        {
          "name": "scale",
          "type": {
            "type": "float"
          },
          "default": 4,
          "title": "Scale",
          "description": "Factor to scale image by",
          "min": 0.0,
          "max": 10.0
        },
        {
          "name": "face_enhance",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Face Enhance",
          "description": "Run GFPGAN face enhancement along with upscaling"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://replicate.delivery/pbxt/lv0iOW3u6DrNOd30ybfmufqWebiuW10YjILw05YZGbeipZZCB/output.png",
        "created_at": "2023-03-10T22:36:15.201038Z",
        "description": "Real-ESRGAN for image upscaling on an A100",
        "github_url": "https://github.com/replicate/cog-real-esrgan",
        "license_url": "https://github.com/replicate/cog-real-esrgan/blob/main/LICENSE",
        "name": "real-esrgan-a100",
        "owner": "daanelson",
        "paper_url": null,
        "run_count": 13505014,
        "url": "https://replicate.com/daanelson/real-esrgan-a100",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "image",
        "scale",
        "face_enhance"
      ],
      "is_dynamic": false
    },
    {
      "title": "Swin 2 SR",
      "description": "3 Million Runs! AI Photorealistic Image Super-Resolution and Restoration",
      "namespace": "replicate.image.upscale",
      "node_type": "replicate.image.upscale.Swin2SR",
      "layout": "default",
      "properties": [
        {
          "name": "task",
          "type": {
            "type": "enum",
            "values": [
              "classical_sr",
              "real_sr",
              "compressed_sr"
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Task"
          },
          "default": "real_sr",
          "title": "Task",
          "description": "Choose a task"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/aabde67b-bf5c-4fc8-a4bd-8b2dcba60be6/swin2sr-cover3.png",
        "created_at": "2022-10-28T22:59:05.692845Z",
        "description": "3 Million Runs! AI Photorealistic Image Super-Resolution and Restoration",
        "github_url": "https://github.com/mv-lab/swin2sr",
        "license_url": "https://github.com/mv-lab/swin2sr/blob/main/LICENSE",
        "name": "swin2sr",
        "owner": "mv-lab",
        "paper_url": "https://arxiv.org/abs/2209.11345",
        "run_count": 3559014,
        "url": "https://replicate.com/mv-lab/swin2sr",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "task",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Swin IR",
      "description": "Image Restoration Using Swin Transformer",
      "namespace": "replicate.image.upscale",
      "node_type": "replicate.image.upscale.SwinIR",
      "layout": "default",
      "properties": [
        {
          "name": "jpeg",
          "type": {
            "type": "int"
          },
          "default": 40,
          "title": "Jpeg",
          "description": "scale factor, activated for JPEG Compression Artifact Reduction. Leave it as default or arbitrary if other tasks are selected"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "input image"
        },
        {
          "name": "noise",
          "type": {
            "type": "enum",
            "values": [
              15,
              25,
              50
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Noise"
          },
          "default": 15,
          "title": "Noise",
          "description": "noise level, activated for Grayscale Image Denoising and Color Image Denoising. Leave it as default or arbitrary if other tasks are selected"
        },
        {
          "name": "task_type",
          "type": {
            "type": "enum",
            "values": [
              "Real-World Image Super-Resolution-Large",
              "Real-World Image Super-Resolution-Medium",
              "Grayscale Image Denoising",
              "Color Image Denoising",
              "JPEG Compression Artifact Reduction"
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Task_type"
          },
          "default": "Real-World Image Super-Resolution-Large",
          "title": "Task Type",
          "description": "Choose a task"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/c62290f9-ba1d-419b-95b8-eedfe5863122/out.png",
        "created_at": "2021-09-13T19:58:55.156216Z",
        "description": "Image Restoration Using Swin Transformer",
        "github_url": "https://github.com/JingyunLiang/SwinIR",
        "license_url": "https://github.com/JingyunLiang/SwinIR/blob/main/LICENSE",
        "name": "swinir",
        "owner": "jingyunliang",
        "paper_url": "https://arxiv.org/abs/2108.10257",
        "run_count": 5917155,
        "url": "https://replicate.com/jingyunliang/swinir",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "jpeg",
        "image",
        "noise"
      ],
      "is_dynamic": false
    },
    {
      "title": "Ultimate SDUpscale",
      "description": "Ultimate SD Upscale with ControlNet Tile",
      "namespace": "replicate.image.upscale",
      "node_type": "replicate.image.upscale.UltimateSDUpscale",
      "layout": "default",
      "properties": [
        {
          "name": "cfg",
          "type": {
            "type": "float"
          },
          "default": 8,
          "title": "Cfg",
          "description": "CFG"
        },
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Sampling seed, leave Empty for Random"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image"
        },
        {
          "name": "steps",
          "type": {
            "type": "int"
          },
          "default": 20,
          "title": "Steps",
          "description": "Steps"
        },
        {
          "name": "denoise",
          "type": {
            "type": "float"
          },
          "default": 0.2,
          "title": "Denoise",
          "description": "Denoise"
        },
        {
          "name": "upscaler",
          "type": {
            "type": "enum",
            "values": [
              "4x_NMKD-Siax_200k",
              "4x-UltraSharp",
              "RealESRGAN_x4plus",
              "RealESRGAN_x4plus_anime_6B"
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Upscaler"
          },
          "default": "4x-UltraSharp",
          "title": "Upscaler",
          "description": "Upscaler"
        },
        {
          "name": "mask_blur",
          "type": {
            "type": "int"
          },
          "default": 8,
          "title": "Mask Blur",
          "description": "Mask Blur"
        },
        {
          "name": "mode_type",
          "type": {
            "type": "enum",
            "values": [
              "Linear",
              "Chess",
              "None"
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Mode_type"
          },
          "default": "Linear",
          "title": "Mode Type",
          "description": "Mode Type"
        },
        {
          "name": "scheduler",
          "type": {
            "type": "enum",
            "values": [
              "normal",
              "karras",
              "exponential",
              "sgm_uniform",
              "simple",
              "ddim_uniform"
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Scheduler"
          },
          "default": "normal",
          "title": "Scheduler",
          "description": "Scheduler"
        },
        {
          "name": "tile_width",
          "type": {
            "type": "int"
          },
          "default": 512,
          "title": "Tile Width",
          "description": "Tile Width"
        },
        {
          "name": "upscale_by",
          "type": {
            "type": "float"
          },
          "default": 2,
          "title": "Upscale By",
          "description": "Upscale By"
        },
        {
          "name": "tile_height",
          "type": {
            "type": "int"
          },
          "default": 512,
          "title": "Tile Height",
          "description": "Tile Height"
        },
        {
          "name": "sampler_name",
          "type": {
            "type": "enum",
            "values": [
              "euler",
              "euler_ancestral",
              "heun",
              "dpm_2",
              "dpm_2_ancestral",
              "lms",
              "dpm_fast",
              "dpm_adaptive",
              "dpmpp_2s_ancestral",
              "dpmpp_sde",
              "dpmpp_sde_gpu",
              "dpmpp_2m",
              "dpmpp_2m_sde",
              "dpmpp_2m_sde_gpu",
              "dpmpp_3m_sde",
              "dpmpp_3m_sde_gpu",
              "dpmpp",
              "ddim",
              "uni_pc",
              "uni_pc_bh2"
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Sampler_name"
          },
          "default": "euler",
          "title": "Sampler Name",
          "description": "Sampler"
        },
        {
          "name": "tile_padding",
          "type": {
            "type": "int"
          },
          "default": 32,
          "title": "Tile Padding",
          "description": "Tile Padding"
        },
        {
          "name": "seam_fix_mode",
          "type": {
            "type": "enum",
            "values": [
              "None",
              "Band Pass",
              "Half Tile",
              "Half Tile + Intersections"
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Seam_fix_mode"
          },
          "default": "None",
          "title": "Seam Fix Mode",
          "description": "Seam Fix Mode"
        },
        {
          "name": "seam_fix_width",
          "type": {
            "type": "int"
          },
          "default": 64,
          "title": "Seam Fix Width",
          "description": "Seam Fix Width"
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Negative Prompt",
          "description": "Negative Prompt"
        },
        {
          "name": "positive_prompt",
          "type": {
            "type": "str"
          },
          "default": "Hey! Have a nice day :D",
          "title": "Positive Prompt",
          "description": "Positive Prompt"
        },
        {
          "name": "seam_fix_denoise",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Seam Fix Denoise",
          "description": "Seam Fix Denoise"
        },
        {
          "name": "seam_fix_padding",
          "type": {
            "type": "int"
          },
          "default": 16,
          "title": "Seam Fix Padding",
          "description": "Seam Fix Padding"
        },
        {
          "name": "seam_fix_mask_blur",
          "type": {
            "type": "int"
          },
          "default": 8,
          "title": "Seam Fix Mask Blur",
          "description": "Seam Fix Mask Blur"
        },
        {
          "name": "controlnet_strength",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Controlnet Strength",
          "description": "ControlNet Strength"
        },
        {
          "name": "force_uniform_tiles",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Force Uniform Tiles",
          "description": "Force Uniform Tiles"
        },
        {
          "name": "use_controlnet_tile",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Use Controlnet Tile",
          "description": "Use ControlNet Tile"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/ec52df9a-be01-4c74-af9d-a14df03bf03a/output.png",
        "created_at": "2023-11-14T08:41:40.364739Z",
        "description": "Ultimate SD Upscale with ControlNet Tile",
        "github_url": "https://github.com/fewjative/cog-ultimate-sd-upscale",
        "license_url": null,
        "name": "ultimate-sd-upscale",
        "owner": "fewjative",
        "paper_url": null,
        "run_count": 159119,
        "url": "https://replicate.com/fewjative/ultimate-sd-upscale",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "cfg",
        "seed",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "ru Dall E SR",
      "description": "Real-ESRGAN super-resolution model from ruDALL-E",
      "namespace": "replicate.image.upscale",
      "node_type": "replicate.image.upscale.ruDallE_SR",
      "layout": "default",
      "properties": [
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image"
        },
        {
          "name": "scale",
          "type": {
            "type": "enum",
            "values": [
              2,
              4,
              8
            ],
            "type_name": "nodetool.nodes.replicate.image.upscale.Scale"
          },
          "default": 4,
          "title": "Scale",
          "description": "Choose up-scaling factor"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://replicate.delivery/mgxm/588170af-559f-454e-967d-8fb6c7f8304b/out.png",
        "created_at": "2021-11-04T18:36:03.485750Z",
        "description": "Real-ESRGAN super-resolution model from ruDALL-E",
        "github_url": "https://github.com/CJWBW/rudalle-sr",
        "license_url": "https://github.com/chenxwh/rudalle-sr/blob/main/LICENSE.txt",
        "name": "rudalle-sr",
        "owner": "cjwbw",
        "paper_url": "https://arxiv.org/abs/2107.10833",
        "run_count": 483300,
        "url": "https://replicate.com/cjwbw/rudalle-sr",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "image",
        "scale"
      ],
      "is_dynamic": false
    },
    {
      "title": "Latex OCR",
      "description": "Optical character recognition to turn images of latex equations into latex format.",
      "namespace": "replicate.image.ocr",
      "node_type": "replicate.image.ocr.LatexOCR",
      "layout": "default",
      "properties": [
        {
          "name": "image_path",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Image Path",
          "description": "Input image"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/980ae6b5-4ab8-417a-8148-b244f4ae0493/latex.png",
        "created_at": "2023-11-06T10:13:47.198885Z",
        "description": "Optical character recognition to turn images of latex equations into latex format.",
        "github_url": "https://github.com/mickeybeurskens/LaTeX-OCR",
        "license_url": "https://github.com/mickeybeurskens/LaTeX-OCR/blob/main/LICENSE",
        "name": "latex-ocr",
        "owner": "mickeybeurskens",
        "paper_url": null,
        "run_count": 830,
        "url": "https://replicate.com/mickeybeurskens/latex-ocr",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "image_path"
      ],
      "is_dynamic": false
    },
    {
      "title": "Text Extract OCR",
      "description": "A simple OCR Model that can easily extract text from an image.",
      "namespace": "replicate.image.ocr",
      "node_type": "replicate.image.ocr.TextExtractOCR",
      "layout": "default",
      "properties": [
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Image to process"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/9d31603c-2266-4705-9d2d-01b4f6bff653/IM0077782.png",
        "created_at": "2023-10-19T13:20:00.740943Z",
        "description": "A simple OCR Model that can easily extract text from an image.",
        "github_url": null,
        "license_url": null,
        "name": "text-extract-ocr",
        "owner": "abiruyt",
        "paper_url": null,
        "run_count": 89849460,
        "url": "https://replicate.com/abiruyt/text-extract-ocr",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "DD Color",
      "description": "Towards Photo-Realistic Image Colorization via Dual Decoders",
      "namespace": "replicate.image.process",
      "node_type": "replicate.image.process.DD_Color",
      "layout": "default",
      "properties": [
        {
          "name": "image",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Image",
          "description": "Grayscale input image."
        },
        {
          "name": "model_size",
          "type": {
            "type": "enum",
            "values": [
              "large",
              "tiny"
            ],
            "type_name": "nodetool.nodes.replicate.image.process.Model_size"
          },
          "default": "large",
          "title": "Model Size",
          "description": "Choose the model size."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/d8d3648a-044e-4474-8392-87d52c0c2c68/ddcolor.jpg",
        "created_at": "2024-01-12T15:02:06.387410Z",
        "description": "Towards Photo-Realistic Image Colorization via Dual Decoders",
        "github_url": "https://github.com/piddnad/DDColor",
        "license_url": "https://github.com/piddnad/DDColor/blob/master/LICENSE",
        "name": "ddcolor",
        "owner": "piddnad",
        "paper_url": "https://arxiv.org/abs/2212.11613",
        "run_count": 215563,
        "url": "https://replicate.com/piddnad/ddcolor",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "image",
        "model_size"
      ],
      "is_dynamic": false
    },
    {
      "title": "Magic Style Transfer",
      "description": "Restyle an image with the style of another one. I strongly suggest to upscale the results with Clarity AI",
      "namespace": "replicate.image.process",
      "node_type": "replicate.image.process.Magic_Style_Transfer",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Leave blank to randomize the seed"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "An astronaut riding a rainbow unicorn",
          "title": "Prompt",
          "description": "Input prompt"
        },
        {
          "name": "ip_image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Ip Image",
          "description": "Input image for img2img or inpaint mode"
        },
        {
          "name": "ip_scale",
          "type": {
            "type": "float"
          },
          "default": 0.3,
          "title": "Ip Scale",
          "description": "IP Adapter strength.",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "strength",
          "type": {
            "type": "float"
          },
          "default": 0.9,
          "title": "Strength",
          "description": "When img2img is active, the denoising strength. 1 means total destruction of the input image.",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "scheduler",
          "type": {
            "type": "enum",
            "values": [
              "DDIM",
              "DPMSolverMultistep",
              "HeunDiscrete",
              "KarrasDPM",
              "K_EULER_ANCESTRAL",
              "K_EULER",
              "PNDM"
            ],
            "type_name": "nodetool.nodes.replicate.image.process.Scheduler"
          },
          "default": "K_EULER",
          "title": "Scheduler",
          "description": "scheduler"
        },
        {
          "name": "lora_scale",
          "type": {
            "type": "float"
          },
          "default": 0.9,
          "title": "Lora Scale",
          "description": "LoRA additive scale. Only applicable on trained models.",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of images to output",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "lora_weights",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Lora Weights",
          "description": "Replicate LoRA weights to use. Leave blank to use the default weights."
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 4,
          "title": "Guidance Scale",
          "description": "Scale for classifier-free guidance",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "resizing_scale",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Resizing Scale",
          "description": "If you want the image to have a solid margin. Scale of the solid margin. 1.0 means no resizing.",
          "min": 1.0,
          "max": 10.0
        },
        {
          "name": "apply_watermark",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Apply Watermark",
          "description": "Applies a watermark to enable determining if an image is generated in downstream applications. If you have other provisions for generating or deploying images safely, you can use this to disable watermarking."
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Negative Prompt",
          "description": "Input Negative Prompt"
        },
        {
          "name": "background_color",
          "type": {
            "type": "str"
          },
          "default": "#A2A2A2",
          "title": "Background Color",
          "description": "When passing an image with alpha channel, it will be replaced with this color"
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 30,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps",
          "min": 1.0,
          "max": 500.0
        },
        {
          "name": "condition_canny_scale",
          "type": {
            "type": "float"
          },
          "default": 0.15,
          "title": "Condition Canny Scale",
          "description": "The bigger this number is, the more ControlNet interferes",
          "min": 0.0,
          "max": 2.0
        },
        {
          "name": "condition_depth_scale",
          "type": {
            "type": "float"
          },
          "default": 0.35,
          "title": "Condition Depth Scale",
          "description": "The bigger this number is, the more ControlNet interferes",
          "min": 0.0,
          "max": 2.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://replicate.delivery/pbxt/CgdTGuA9wdoWGhVUMgpPIv9mh4rpLnYYViUmeLKV8wF2QGRJA/out-0.png",
        "created_at": "2024-03-20T16:20:23.445929Z",
        "description": "Restyle an image with the style of another one. I strongly suggest to upscale the results with Clarity AI",
        "github_url": "https://github.com/BatouResearch/Cog-Face-to-Anything/tree/magic-style-transfer",
        "license_url": null,
        "name": "magic-style-transfer",
        "owner": "fermatresearch",
        "paper_url": null,
        "run_count": 32308,
        "url": "https://replicate.com/fermatresearch/magic-style-transfer",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "image",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Mod Net",
      "description": "A deep learning approach to remove background & adding new background image",
      "namespace": "replicate.image.process",
      "node_type": "replicate.image.process.ModNet",
      "layout": "default",
      "properties": [
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "input image"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/bb0ab3e4-5efa-446f-939a-23e78f2b82de/output.png",
        "created_at": "2022-11-19T04:56:59.860128Z",
        "description": "A deep learning approach to remove background & adding new background image",
        "github_url": "https://github.com/pollinations/MODNet-BGRemover",
        "license_url": null,
        "name": "modnet",
        "owner": "pollinations",
        "paper_url": "https://arxiv.org/pdf/2011.11961.pdf",
        "run_count": 667715,
        "url": "https://replicate.com/pollinations/modnet",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Object Remover",
      "description": "None",
      "namespace": "replicate.image.process",
      "node_type": "replicate.image.process.ObjectRemover",
      "layout": "default",
      "properties": [
        {
          "name": "org_image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Org Image",
          "description": "Original input image"
        },
        {
          "name": "mask_image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Mask Image",
          "description": "Mask image"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://replicate.delivery/pbxt/PeUSD8TLKs0lXSTavj96kkOSfpoAKhRIG8LY5U0erX53QgskA/in-painted.png",
        "created_at": "2024-02-13T07:17:58.590961Z",
        "description": null,
        "github_url": null,
        "license_url": null,
        "name": "object_remover",
        "owner": "codeplugtech",
        "paper_url": null,
        "run_count": 6338,
        "url": "https://replicate.com/codeplugtech/object_remover",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "org_image",
        "mask_image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Remove Background",
      "description": "Remove images background",
      "namespace": "replicate.image.process",
      "node_type": "replicate.image.process.RemoveBackground",
      "layout": "default",
      "properties": [
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://replicate.delivery/pbxt/2hczaMwD9xrsIR8h3Cl8iYGbHaCdFhIOMZ0LfoYfHlKuuIBQA/out.png",
        "created_at": "2022-11-18T00:55:22.939155Z",
        "description": "Remove images background",
        "github_url": "https://github.com/chenxwh/rembg/tree/replicate",
        "license_url": "https://github.com/danielgatis/rembg/blob/main/LICENSE.txt",
        "name": "rembg",
        "owner": "cjwbw",
        "paper_url": null,
        "run_count": 8092828,
        "url": "https://replicate.com/cjwbw/rembg",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Blip",
      "description": "Generate image captions",
      "namespace": "replicate.image.analyze",
      "node_type": "replicate.image.analyze.Blip",
      "layout": "default",
      "properties": [
        {
          "name": "task",
          "type": {
            "type": "enum",
            "values": [
              "image_captioning",
              "visual_question_answering",
              "image_text_matching"
            ],
            "type_name": "nodetool.nodes.replicate.image.analyze.Task"
          },
          "default": "image_captioning",
          "title": "Task",
          "description": "Choose a task."
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image"
        },
        {
          "name": "caption",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Caption",
          "description": "Type caption for the input image for image text matching task."
        },
        {
          "name": "question",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Question",
          "description": "Type question for the input image for visual question answering task."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/b59b459c-c475-414f-ba67-c424a7e6e6ca/demo.jpg",
        "created_at": "2022-02-06T17:40:38.855280Z",
        "description": "Generate image captions",
        "github_url": "https://github.com/salesforce/BLIP",
        "license_url": "https://github.com/salesforce/BLIP/blob/main/LICENSE.txt",
        "name": "blip",
        "owner": "salesforce",
        "paper_url": "https://arxiv.org/abs/2201.12086",
        "run_count": 161029756,
        "url": "https://replicate.com/salesforce/blip",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "task",
        "image",
        "caption"
      ],
      "is_dynamic": false
    },
    {
      "title": "Blip 2",
      "description": "Answers questions about images",
      "namespace": "replicate.image.analyze",
      "node_type": "replicate.image.analyze.Blip2",
      "layout": "default",
      "properties": [
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image to query or caption"
        },
        {
          "name": "caption",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Caption",
          "description": "Select if you want to generate image captions instead of asking questions"
        },
        {
          "name": "context",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Context",
          "description": "Optional - previous questions and answers to be used as context for answering current question"
        },
        {
          "name": "question",
          "type": {
            "type": "str"
          },
          "default": "What is this a picture of?",
          "title": "Question",
          "description": "Question to ask about this image. Leave blank for captioning"
        },
        {
          "name": "temperature",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Temperature",
          "description": "Temperature for use with nucleus sampling",
          "min": 0.5,
          "max": 1.0
        },
        {
          "name": "use_nucleus_sampling",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Use Nucleus Sampling",
          "description": "Toggles the model using nucleus sampling to generate responses"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/031b9aee-ed15-4429-a7e4-813b72e9edc5/gg_bridge.jpeg",
        "created_at": "2023-02-13T07:06:23.521189Z",
        "description": "Answers questions about images",
        "github_url": "https://github.com/daanelson/cog-blip-2",
        "license_url": null,
        "name": "blip-2",
        "owner": "andreasjansson",
        "paper_url": "https://arxiv.org/abs/2301.12597",
        "run_count": 29462651,
        "url": "https://replicate.com/andreasjansson/blip-2",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "image",
        "caption",
        "context"
      ],
      "is_dynamic": false
    },
    {
      "title": "Clip Features",
      "description": "Return CLIP features for the clip-vit-large-patch14 model",
      "namespace": "replicate.image.analyze",
      "node_type": "replicate.image.analyze.ClipFeatures",
      "layout": "default",
      "properties": [
        {
          "name": "inputs",
          "type": {
            "type": "str"
          },
          "default": "a\nb",
          "title": "Inputs",
          "description": "Newline-separated inputs. Can either be strings of text or image URIs starting with http[s]://"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "list",
            "type_args": [
              {
                "type": "dict"
              }
            ]
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/07d242b3-4246-4da2-9522-b4ad134336fc/clip_image.png",
        "created_at": "2022-09-22T20:23:55.682616Z",
        "description": "Return CLIP features for the clip-vit-large-patch14 model",
        "github_url": "https://github.com/andreasjansson/cog-clip",
        "license_url": null,
        "name": "clip-features",
        "owner": "andreasjansson",
        "paper_url": null,
        "run_count": 81268730,
        "url": "https://replicate.com/andreasjansson/clip-features",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "inputs"
      ],
      "is_dynamic": false
    },
    {
      "title": "Clip Interrogator",
      "description": "The CLIP Interrogator is a prompt engineering tool that combines OpenAI's CLIP and Salesforce's BLIP to optimize text prompts to match a given image. Use the resulting prompts with text-to-image models like Stable Diffusion to create cool art!",
      "namespace": "replicate.image.analyze",
      "node_type": "replicate.image.analyze.ClipInterrogator",
      "layout": "default",
      "properties": [
        {
          "name": "mode",
          "type": {
            "type": "enum",
            "values": [
              "best",
              "classic",
              "fast",
              "negative"
            ],
            "type_name": "nodetool.nodes.replicate.image.analyze.Mode"
          },
          "default": "best",
          "title": "Mode",
          "description": "Prompt mode (best takes 10-20 seconds, fast takes 1-2 seconds)."
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image"
        },
        {
          "name": "clip_model_name",
          "type": {
            "type": "enum",
            "values": [
              "ViT-L-14/openai",
              "ViT-H-14/laion2b_s32b_b79k",
              "ViT-bigG-14/laion2b_s39b_b160k"
            ],
            "type_name": "nodetool.nodes.replicate.image.analyze.Clip_model_name"
          },
          "default": "ViT-L-14/openai",
          "title": "Clip Model Name",
          "description": "Choose ViT-L for Stable Diffusion 1, ViT-H for Stable Diffusion 2, or ViT-bigG for Stable Diffusion XL."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://replicate.delivery/pbxt/HrXsgowfhbZi3dImGZoIcvnz7oZfMtFY4UAEU8vBIakTd8JQ/watercolour-4799014_960_720.jpg",
        "created_at": "2022-10-28T17:47:38.473429Z",
        "description": "The CLIP Interrogator is a prompt engineering tool that combines OpenAI's CLIP and Salesforce's BLIP to optimize text prompts to match a given image. Use the resulting prompts with text-to-image models like Stable Diffusion to create cool art!",
        "github_url": "https://github.com/pharmapsychotic/clip-interrogator",
        "license_url": "https://github.com/pharmapsychotic/clip-interrogator/blob/main/LICENSE",
        "name": "clip-interrogator",
        "owner": "pharmapsychotic",
        "paper_url": null,
        "run_count": 3111091,
        "url": "https://replicate.com/pharmapsychotic/clip-interrogator",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "mode",
        "image",
        "clip_model_name"
      ],
      "is_dynamic": false
    },
    {
      "title": "Img 2 Prompt",
      "description": "Get an approximate text prompt, with style, matching an image.  (Optimized for stable-diffusion (clip ViT-L/14))",
      "namespace": "replicate.image.analyze",
      "node_type": "replicate.image.analyze.Img2Prompt",
      "layout": "default",
      "properties": [
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/504b1747-8c67-438b-b02f-a6ea9254589d/a_high_detail_shot_of_a_cat_we.png",
        "created_at": "2022-08-24T08:53:28.614572Z",
        "description": "Get an approximate text prompt, with style, matching an image.  (Optimized for stable-diffusion (clip ViT-L/14))",
        "github_url": "https://github.com/pharmapsychotic/clip-interrogator",
        "license_url": "https://github.com/pharmapsychotic/clip-interrogator/blob/main/LICENSE",
        "name": "img2prompt",
        "owner": "methexis-inc",
        "paper_url": null,
        "run_count": 2641248,
        "url": "https://replicate.com/methexis-inc/img2prompt",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Llava 13 b",
      "description": "Visual instruction tuning towards large language and vision models with GPT-4 level capabilities",
      "namespace": "replicate.image.analyze",
      "node_type": "replicate.image.analyze.Llava13b",
      "layout": "default",
      "properties": [
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image"
        },
        {
          "name": "top_p",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Top P",
          "description": "When decoding text, samples from the top p percentage of most likely tokens; lower to ignore less likely tokens",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Prompt to use for text generation"
        },
        {
          "name": "max_tokens",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Max Tokens",
          "description": "Maximum number of tokens to generate. A word is generally 2-3 tokens",
          "min": 0.0
        },
        {
          "name": "temperature",
          "type": {
            "type": "float"
          },
          "default": 0.2,
          "title": "Temperature",
          "description": "Adjusts randomness of outputs, greater than 1 is random and 0 is deterministic",
          "min": 0.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/454548d6-4978-4d85-bca3-d067dfc031bf/llava.png",
        "created_at": "2023-10-09T16:27:51.777748Z",
        "description": "Visual instruction tuning towards large language and vision models with GPT-4 level capabilities",
        "github_url": "https://github.com/haotian-liu/LLaVA",
        "license_url": "https://ai.meta.com/llama/license/",
        "name": "llava-13b",
        "owner": "yorickvp",
        "paper_url": "https://arxiv.org/abs/2310.03744",
        "run_count": 23531581,
        "url": "https://replicate.com/yorickvp/llava-13b",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "image",
        "top_p",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Moondream 2",
      "description": "moondream2 is a small vision language model designed to run efficiently on edge devices",
      "namespace": "replicate.image.analyze",
      "node_type": "replicate.image.analyze.Moondream2",
      "layout": "default",
      "properties": [
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "Describe this image",
          "title": "Prompt",
          "description": "Input prompt"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/dc0dc539-f592-4c34-b24f-2d112f742975/moondream2.png",
        "created_at": "2024-03-05T02:29:40.377800Z",
        "description": "moondream2 is a small vision language model designed to run efficiently on edge devices",
        "github_url": "https://github.com/lucataco/cog-moondream2",
        "license_url": "https://github.com/vikhyat/moondream?tab=Apache-2.0-1-ov-file#readme",
        "name": "moondream2",
        "owner": "lucataco",
        "paper_url": null,
        "run_count": 333951,
        "url": "https://replicate.com/lucataco/moondream2",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "image",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "NSFWImage Detection",
      "description": "Fine-Tuned Vision Transformer (ViT) for NSFW Image Classification",
      "namespace": "replicate.image.analyze",
      "node_type": "replicate.image.analyze.NSFWImageDetection",
      "layout": "default",
      "properties": [
        {
          "name": "image",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Image",
          "description": "Input image"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://replicate.delivery/pbxt/JurYNQcIfISvpS6WtaOcwZXw1ifEudlLyQqiLj5N1Zq977Q3/falcon.jpg",
        "created_at": "2023-11-21T14:53:34.798862Z",
        "description": "Fine-Tuned Vision Transformer (ViT) for NSFW Image Classification",
        "github_url": "https://github.com/lucataco/cog-nsfw_image_detection",
        "license_url": "https://huggingface.co/models?license=license:apache-2.0",
        "name": "nsfw_image_detection",
        "owner": "falcons-ai",
        "paper_url": "https://arxiv.org/abs/2010.11929",
        "run_count": 57124454,
        "url": "https://replicate.com/falcons-ai/nsfw_image_detection",
        "visibility": "public",
        "weights_url": "https://huggingface.co/Falconsai/nsfw_image_detection"
      },
      "recommended_models": [],
      "basic_fields": [
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "SDXLClip Interrogator",
      "description": "CLIP Interrogator for SDXL optimizes text prompts to match a given image",
      "namespace": "replicate.image.analyze",
      "node_type": "replicate.image.analyze.SDXLClipInterrogator",
      "layout": "default",
      "properties": [
        {
          "name": "mode",
          "type": {
            "type": "enum",
            "values": [
              "best",
              "fast"
            ],
            "type_name": "nodetool.nodes.replicate.image.analyze.Mode"
          },
          "default": "best",
          "title": "Mode",
          "description": "Prompt Mode: fast takes 1-2 seconds, best takes 15-25 seconds."
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/c200f919-4cc1-412b-8edf-e2863a5eef56/replicate-sdxl-inter.png",
        "created_at": "2023-08-14T20:06:38.402771Z",
        "description": "CLIP Interrogator for SDXL optimizes text prompts to match a given image",
        "github_url": "https://github.com/lucataco/cog-sdxl-clip-interrogator",
        "license_url": "https://github.com/pharmapsychotic/clip-interrogator/blob/main/LICENSE",
        "name": "sdxl-clip-interrogator",
        "owner": "lucataco",
        "paper_url": null,
        "run_count": 845970,
        "url": "https://replicate.com/lucataco/sdxl-clip-interrogator",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "mode",
        "image"
      ],
      "is_dynamic": false
    },
    {
      "title": "Become Image",
      "description": "Adapt any picture of a face into another image",
      "namespace": "replicate.image.face",
      "node_type": "replicate.image.face.BecomeImage",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Fix the random seed for reproducibility"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "An image of a person to be converted"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "a person",
          "title": "Prompt"
        },
        {
          "name": "image_to_become",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image To Become",
          "description": "Any image to convert the person to"
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Negative Prompt",
          "description": "Things you do not want in the image"
        },
        {
          "name": "prompt_strength",
          "type": {
            "type": "float"
          },
          "default": 2,
          "title": "Prompt Strength",
          "description": "Strength of the prompt. This is the CFG scale, higher numbers lead to stronger prompt, lower numbers will keep more of a likeness to the original.",
          "min": 0.0,
          "max": 3.0
        },
        {
          "name": "number_of_images",
          "type": {
            "type": "int"
          },
          "default": 2,
          "title": "Number Of Images",
          "description": "Number of images to generate",
          "min": 1.0,
          "max": 10.0
        },
        {
          "name": "denoising_strength",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Denoising Strength",
          "description": "How much of the original image of the person to keep. 1 is the complete destruction of the original image, 0 is the original image",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "instant_id_strength",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Instant Id Strength",
          "description": "How strong the InstantID will be.",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "image_to_become_noise",
          "type": {
            "type": "float"
          },
          "default": 0.3,
          "title": "Image To Become Noise",
          "description": "How much noise to add to the style image before processing. An alternative way of controlling stength.",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "control_depth_strength",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Control Depth Strength",
          "description": "Strength of depth controlnet. The bigger this is, the more controlnet affects the output.",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images"
        },
        {
          "name": "image_to_become_strength",
          "type": {
            "type": "float"
          },
          "default": 0.75,
          "title": "Image To Become Strength",
          "description": "How strong the style will be applied",
          "min": 0.0,
          "max": 1.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/b37fc7b7-0cef-4895-9176-bf5bb0cb7011/pearl-earring-1.webp",
        "created_at": "2024-03-11T11:16:22.168373Z",
        "description": "Adapt any picture of a face into another image",
        "github_url": "https://github.com/fofr/cog-become-image",
        "license_url": "https://github.com/fofr/cog-become-image/blob/main/weights_licenses.md",
        "name": "become-image",
        "owner": "fofr",
        "paper_url": null,
        "run_count": 474431,
        "url": "https://replicate.com/fofr/become-image",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "image",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Face To Many",
      "description": "Turn a face into 3D, emoji, pixel art, video game, claymation or toy",
      "namespace": "replicate.image.face",
      "node_type": "replicate.image.face.FaceToMany",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Fix the random seed for reproducibility"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "An image of a person to be converted"
        },
        {
          "name": "style",
          "type": {
            "type": "enum",
            "values": [
              "3D",
              "Emoji",
              "Video game",
              "Pixels",
              "Clay",
              "Toy"
            ],
            "type_name": "nodetool.nodes.replicate.image.face.Style"
          },
          "default": "3D",
          "title": "Style",
          "description": "Style to convert to"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "a person",
          "title": "Prompt"
        },
        {
          "name": "lora_scale",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Lora Scale",
          "description": "How strong the LoRA will be",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "custom_lora_url",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Custom Lora Url",
          "description": "URL to a Replicate custom LoRA. Must be in the format https://replicate.delivery/pbxt/[id]/trained_model.tar or https://pbxt.replicate.delivery/[id]/trained_model.tar"
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Negative Prompt",
          "description": "Things you do not want in the image"
        },
        {
          "name": "prompt_strength",
          "type": {
            "type": "float"
          },
          "default": 4.5,
          "title": "Prompt Strength",
          "description": "Strength of the prompt. This is the CFG scale, higher numbers lead to stronger prompt, lower numbers will keep more of a likeness to the original.",
          "min": 0.0,
          "max": 20.0
        },
        {
          "name": "denoising_strength",
          "type": {
            "type": "float"
          },
          "default": 0.65,
          "title": "Denoising Strength",
          "description": "How much of the original image to keep. 1 is the complete destruction of the original image, 0 is the original image",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "instant_id_strength",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Instant Id Strength",
          "description": "How strong the InstantID will be.",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "control_depth_strength",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Control Depth Strength",
          "description": "Strength of depth controlnet. The bigger this is, the more controlnet affects the output.",
          "min": 0.0,
          "max": 1.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/583bfb50-534d-4835-a856-80bd2abb332e/mona-list-emoji.webp",
        "created_at": "2024-03-05T13:01:03.163557Z",
        "description": "Turn a face into 3D, emoji, pixel art, video game, claymation or toy",
        "github_url": "https://github.com/fofr/cog-face-to-many",
        "license_url": "https://github.com/fofr/cog-face-to-many/blob/main/weights_licenses.md",
        "name": "face-to-many",
        "owner": "fofr",
        "paper_url": null,
        "run_count": 12626295,
        "url": "https://replicate.com/fofr/face-to-many",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "image",
        "style"
      ],
      "is_dynamic": false
    },
    {
      "title": "Face To Sticker",
      "description": "Turn a face into a sticker",
      "namespace": "replicate.image.face",
      "node_type": "replicate.image.face.FaceToSticker",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Fix the random seed for reproducibility"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "An image of a person to be converted to a sticker"
        },
        {
          "name": "steps",
          "type": {
            "type": "int"
          },
          "default": 20,
          "title": "Steps"
        },
        {
          "name": "width",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Width"
        },
        {
          "name": "height",
          "type": {
            "type": "int"
          },
          "default": 1024,
          "title": "Height"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "a person",
          "title": "Prompt"
        },
        {
          "name": "upscale",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Upscale",
          "description": "2x upscale the sticker"
        },
        {
          "name": "upscale_steps",
          "type": {
            "type": "int"
          },
          "default": 10,
          "title": "Upscale Steps",
          "description": "Number of steps to upscale"
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Negative Prompt",
          "description": "Things you do not want in the image"
        },
        {
          "name": "prompt_strength",
          "type": {
            "type": "float"
          },
          "default": 7,
          "title": "Prompt Strength",
          "description": "Strength of the prompt. This is the CFG scale, higher numbers lead to stronger prompt, lower numbers will keep more of a likeness to the original."
        },
        {
          "name": "ip_adapter_noise",
          "type": {
            "type": "float"
          },
          "default": 0.5,
          "title": "Ip Adapter Noise",
          "description": "How much noise is added to the IP adapter input",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "ip_adapter_weight",
          "type": {
            "type": "float"
          },
          "default": 0.2,
          "title": "Ip Adapter Weight",
          "description": "How much the IP adapter will influence the image",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "instant_id_strength",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Instant Id Strength",
          "description": "How strong the InstantID will be.",
          "min": 0.0,
          "max": 1.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://replicate.delivery/xezq/vvHSs2p5vPJtPRNW7ffCYt54fwP43r8I3kG4LPfoCCMaMBWPB/ComfyUI_00002_.png",
        "created_at": "2024-02-28T15:14:15.687345Z",
        "description": "Turn a face into a sticker",
        "github_url": "https://github.com/fofr/cog-face-to-sticker",
        "license_url": "https://github.com/fofr/cog-face-to-sticker/blob/main/weights_licenses.md",
        "name": "face-to-sticker",
        "owner": "fofr",
        "paper_url": null,
        "run_count": 1370085,
        "url": "https://replicate.com/fofr/face-to-sticker",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "image",
        "steps"
      ],
      "is_dynamic": false
    },
    {
      "title": "Instant Id",
      "description": "Make realistic images of real people instantly",
      "namespace": "replicate.image.face",
      "node_type": "replicate.image.face.InstantId",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Leave blank to randomize the seed"
        },
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input face image"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "a person",
          "title": "Prompt",
          "description": "Input prompt"
        },
        {
          "name": "scheduler",
          "type": {
            "type": "enum",
            "values": [
              "DEISMultistepScheduler",
              "HeunDiscreteScheduler",
              "EulerDiscreteScheduler",
              "DPMSolverMultistepScheduler",
              "DPMSolverMultistepScheduler-Karras",
              "DPMSolverMultistepScheduler-Karras-SDE"
            ],
            "type_name": "nodetool.nodes.replicate.image.face.Scheduler"
          },
          "default": "EulerDiscreteScheduler",
          "title": "Scheduler",
          "description": "Scheduler"
        },
        {
          "name": "enable_lcm",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Enable Lcm",
          "description": "Enable Fast Inference with LCM (Latent Consistency Models) - speeds up inference steps, trade-off is the quality of the generated image. Performs better with close-up portrait face images"
        },
        {
          "name": "pose_image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Pose Image",
          "description": "(Optional) reference pose image"
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of images to output",
          "min": 1.0,
          "max": 8.0
        },
        {
          "name": "sdxl_weights",
          "type": {
            "type": "enum",
            "values": [
              "stable-diffusion-xl-base-1.0",
              "juggernaut-xl-v8",
              "afrodite-xl-v2",
              "albedobase-xl-20",
              "albedobase-xl-v13",
              "animagine-xl-30",
              "anime-art-diffusion-xl",
              "anime-illust-diffusion-xl",
              "dreamshaper-xl",
              "dynavision-xl-v0610",
              "guofeng4-xl",
              "nightvision-xl-0791",
              "omnigen-xl",
              "pony-diffusion-v6-xl",
              "protovision-xl-high-fidel",
              "RealVisXL_V3.0_Turbo",
              "RealVisXL_V4.0_Lightning"
            ],
            "type_name": "nodetool.nodes.replicate.image.face.Sdxl_weights"
          },
          "default": "stable-diffusion-xl-base-1.0",
          "title": "Sdxl Weights",
          "description": "Pick which base weights you want to use"
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "webp",
              "jpg",
              "png"
            ],
            "type_name": "nodetool.nodes.replicate.image.face.Output_format"
          },
          "default": "webp",
          "title": "Output Format",
          "description": "Format of the output images"
        },
        {
          "name": "pose_strength",
          "type": {
            "type": "float"
          },
          "default": 0.4,
          "title": "Pose Strength",
          "description": "Openpose ControlNet strength, effective only if `enable_pose_controlnet` is true",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "canny_strength",
          "type": {
            "type": "float"
          },
          "default": 0.3,
          "title": "Canny Strength",
          "description": "Canny ControlNet strength, effective only if `enable_canny_controlnet` is true",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "depth_strength",
          "type": {
            "type": "float"
          },
          "default": 0.5,
          "title": "Depth Strength",
          "description": "Depth ControlNet strength, effective only if `enable_depth_controlnet` is true",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 7.5,
          "title": "Guidance Scale",
          "description": "Scale for classifier-free guidance",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "output_quality",
          "type": {
            "type": "int"
          },
          "default": 80,
          "title": "Output Quality",
          "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality.",
          "min": 0.0,
          "max": 100.0
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Negative Prompt",
          "description": "Input Negative Prompt"
        },
        {
          "name": "ip_adapter_scale",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Ip Adapter Scale",
          "description": "Scale for image adapter strength (for detail)",
          "min": 0.0,
          "max": 1.5
        },
        {
          "name": "lcm_guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 1.5,
          "title": "Lcm Guidance Scale",
          "description": "Only used when `enable_lcm` is set to True, Scale for classifier-free guidance when using LCM",
          "min": 1.0,
          "max": 20.0
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 30,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps",
          "min": 1.0,
          "max": 500.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images"
        },
        {
          "name": "enable_pose_controlnet",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Enable Pose Controlnet",
          "description": "Enable Openpose ControlNet, overrides strength if set to false"
        },
        {
          "name": "enhance_nonface_region",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Enhance Nonface Region",
          "description": "Enhance non-face region"
        },
        {
          "name": "enable_canny_controlnet",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Enable Canny Controlnet",
          "description": "Enable Canny ControlNet, overrides strength if set to false"
        },
        {
          "name": "enable_depth_controlnet",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Enable Depth Controlnet",
          "description": "Enable Depth ControlNet, overrides strength if set to false"
        },
        {
          "name": "lcm_num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 5,
          "title": "Lcm Num Inference Steps",
          "description": "Only used when `enable_lcm` is set to True, Number of denoising steps when using LCM",
          "min": 1.0,
          "max": 10.0
        },
        {
          "name": "face_detection_input_width",
          "type": {
            "type": "int"
          },
          "default": 640,
          "title": "Face Detection Input Width",
          "description": "Width of the input image for face detection",
          "min": 640.0,
          "max": 4096.0
        },
        {
          "name": "face_detection_input_height",
          "type": {
            "type": "int"
          },
          "default": 640,
          "title": "Face Detection Input Height",
          "description": "Height of the input image for face detection",
          "min": 640.0,
          "max": 4096.0
        },
        {
          "name": "controlnet_conditioning_scale",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Controlnet Conditioning Scale",
          "description": "Scale for IdentityNet strength (for fidelity)",
          "min": 0.0,
          "max": 1.5
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/3bb0b275-5996-4382-b73f-5bccfbddde92/instantidcover.jpg",
        "created_at": "2024-01-22T21:00:49.120905Z",
        "description": "Make realistic images of real people instantly",
        "github_url": "https://github.com/zsxkib/InstantID",
        "license_url": "https://github.com/zsxkib/InstantID/blob/main/LICENSE",
        "name": "instant-id",
        "owner": "zsxkib",
        "paper_url": "https://arxiv.org/abs/2401.07519",
        "run_count": 805604,
        "url": "https://replicate.com/zsxkib/instant-id",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "image",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Instant ID Artistic",
      "description": "InstantID : Zero-shot Identity-Preserving Generation in Seconds. Using Dreamshaper-XL as the base model to encourage artistic generations",
      "namespace": "replicate.image.face",
      "node_type": "replicate.image.face.Instant_ID_Artistic",
      "layout": "default",
      "properties": [
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image"
        },
        {
          "name": "width",
          "type": {
            "type": "int"
          },
          "default": 640,
          "title": "Width",
          "description": "Width of output image",
          "min": 512.0,
          "max": 2048.0
        },
        {
          "name": "height",
          "type": {
            "type": "int"
          },
          "default": 640,
          "title": "Height",
          "description": "Height of output image",
          "min": 512.0,
          "max": 2048.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "analog film photo of a man. faded film, desaturated, 35mm photo, grainy, vignette, vintage, Kodachrome, Lomography, stained, highly detailed, found footage, masterpiece, best quality",
          "title": "Prompt",
          "description": "Input prompt"
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 5,
          "title": "Guidance Scale",
          "description": "Scale for classifier-free guidance",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Negative Prompt",
          "description": "Input Negative Prompt"
        },
        {
          "name": "ip_adapter_scale",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Ip Adapter Scale",
          "description": "Scale for IP adapter",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 30,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps",
          "min": 1.0,
          "max": 500.0
        },
        {
          "name": "controlnet_conditioning_scale",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Controlnet Conditioning Scale",
          "description": "Scale for ControlNet conditioning",
          "min": 0.0,
          "max": 1.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/87b24249-b2c1-43f3-b3cf-a5005f23b21c/Screenshot_2024-01-24_at_15.24.13.png",
        "created_at": "2024-01-24T04:34:52.345779Z",
        "description": "InstantID : Zero-shot Identity-Preserving Generation in Seconds. Using Dreamshaper-XL as the base model to encourage artistic generations",
        "github_url": "https://github.com/GrandlineAI/InstantID",
        "license_url": "https://github.com/InstantID/InstantID/blob/main/LICENSE",
        "name": "instant-id-artistic",
        "owner": "grandlineai",
        "paper_url": null,
        "run_count": 5283,
        "url": "https://replicate.com/grandlineai/instant-id-artistic",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "image",
        "width",
        "height"
      ],
      "is_dynamic": false
    },
    {
      "title": "Instant ID Photorealistic",
      "description": "InstantID : Zero-shot Identity-Preserving Generation in Seconds. Using Juggernaut-XL v8 as the base model to encourage photorealism",
      "namespace": "replicate.image.face",
      "node_type": "replicate.image.face.Instant_ID_Photorealistic",
      "layout": "default",
      "properties": [
        {
          "name": "image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Image",
          "description": "Input image"
        },
        {
          "name": "width",
          "type": {
            "type": "int"
          },
          "default": 640,
          "title": "Width",
          "description": "Width of output image",
          "min": 512.0,
          "max": 2048.0
        },
        {
          "name": "height",
          "type": {
            "type": "int"
          },
          "default": 640,
          "title": "Height",
          "description": "Height of output image",
          "min": 512.0,
          "max": 2048.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "analog film photo of a man. faded film, desaturated, 35mm photo, grainy, vignette, vintage, Kodachrome, Lomography, stained, highly detailed, found footage, masterpiece, best quality",
          "title": "Prompt",
          "description": "Input prompt"
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 5,
          "title": "Guidance Scale",
          "description": "Scale for classifier-free guidance",
          "min": 1.0,
          "max": 50.0
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Negative Prompt",
          "description": "Input Negative Prompt"
        },
        {
          "name": "ip_adapter_scale",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Ip Adapter Scale",
          "description": "Scale for IP adapter",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 30,
          "title": "Num Inference Steps",
          "description": "Number of denoising steps",
          "min": 1.0,
          "max": 500.0
        },
        {
          "name": "controlnet_conditioning_scale",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Controlnet Conditioning Scale",
          "description": "Scale for ControlNet conditioning",
          "min": 0.0,
          "max": 1.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/0c6bd74f-6129-4323-8125-beb65871a8de/Screenshot_2024-01-24_at_15.24.13.png",
        "created_at": "2024-01-24T07:43:55.954510Z",
        "description": "InstantID : Zero-shot Identity-Preserving Generation in Seconds. Using Juggernaut-XL v8 as the base model to encourage photorealism",
        "github_url": "https://github.com/GrandlineAI/InstantID",
        "license_url": "https://github.com/InstantID/InstantID/blob/main/LICENSE",
        "name": "instant-id-photorealistic",
        "owner": "grandlineai",
        "paper_url": null,
        "run_count": 39827,
        "url": "https://replicate.com/grandlineai/instant-id-photorealistic",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "image",
        "width",
        "height"
      ],
      "is_dynamic": false
    },
    {
      "title": "Photo Maker",
      "description": "Create photos, paintings and avatars for anyone in any style within seconds.",
      "namespace": "replicate.image.face",
      "node_type": "replicate.image.face.PhotoMaker",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Seed. Leave blank to use a random number",
          "min": 0.0,
          "max": 2147483647.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "A photo of a person img",
          "title": "Prompt",
          "description": "Prompt. Example: 'a photo of a man/woman img'. The phrase 'img' is the trigger word."
        },
        {
          "name": "num_steps",
          "type": {
            "type": "int"
          },
          "default": 20,
          "title": "Num Steps",
          "description": "Number of sample steps",
          "min": 1.0,
          "max": 100.0
        },
        {
          "name": "style_name",
          "type": {
            "type": "enum",
            "values": [
              "(No style)",
              "Cinematic",
              "Disney Charactor",
              "Digital Art",
              "Photographic (Default)",
              "Fantasy art",
              "Neonpunk",
              "Enhance",
              "Comic book",
              "Lowpoly",
              "Line art"
            ],
            "type_name": "nodetool.nodes.replicate.image.face.Style_name"
          },
          "default": "Photographic (Default)",
          "title": "Style Name",
          "description": "Style template. The style template will add a style-specific prompt and negative prompt to the user's prompt."
        },
        {
          "name": "input_image",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Input Image",
          "description": "The input image, for example a photo of your face."
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of output images",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "input_image2",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Input Image2",
          "description": "Additional input image (optional)"
        },
        {
          "name": "input_image3",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Input Image3",
          "description": "Additional input image (optional)"
        },
        {
          "name": "input_image4",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Input Image4",
          "description": "Additional input image (optional)"
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 5,
          "title": "Guidance Scale",
          "description": "Guidance scale. A guidance scale of 1 corresponds to doing no classifier free guidance.",
          "min": 1.0,
          "max": 10.0
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "nsfw, lowres, bad anatomy, bad hands, text, error, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality, normal quality, jpeg artifacts, signature, watermark, username, blurry",
          "title": "Negative Prompt",
          "description": "Negative Prompt. The negative prompt should NOT contain the trigger word."
        },
        {
          "name": "style_strength_ratio",
          "type": {
            "type": "float"
          },
          "default": 20,
          "title": "Style Strength Ratio",
          "description": "Style strength (%)",
          "min": 15.0,
          "max": 50.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/c10ac3c0-f86a-4249-9f3d-d7723cc93d45/photomaker.jpg",
        "created_at": "2024-01-16T15:42:17.882162Z",
        "description": "Create photos, paintings and avatars for anyone in any style within seconds.",
        "github_url": "https://github.com/datakami-models/PhotoMaker",
        "license_url": "https://github.com/TencentARC/PhotoMaker/blob/main/LICENSE",
        "name": "photomaker",
        "owner": "tencentarc",
        "paper_url": "https://huggingface.co/papers/2312.04461",
        "run_count": 5769183,
        "url": "https://replicate.com/tencentarc/photomaker",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "prompt",
        "num_steps"
      ],
      "is_dynamic": false
    },
    {
      "title": "Photo Maker Style",
      "description": "Create photos, paintings and avatars for anyone in any style within seconds.  (Stylization version)",
      "namespace": "replicate.image.face",
      "node_type": "replicate.image.face.PhotoMakerStyle",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Seed. Leave blank to use a random number",
          "min": 0.0,
          "max": 2147483647.0
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "A photo of a person img",
          "title": "Prompt",
          "description": "Prompt. Example: 'a photo of a man/woman img'. The phrase 'img' is the trigger word."
        },
        {
          "name": "num_steps",
          "type": {
            "type": "int"
          },
          "default": 20,
          "title": "Num Steps",
          "description": "Number of sample steps",
          "min": 1.0,
          "max": 100.0
        },
        {
          "name": "style_name",
          "type": {
            "type": "enum",
            "values": [
              "(No style)",
              "Cinematic",
              "Disney Charactor",
              "Digital Art",
              "Photographic (Default)",
              "Fantasy art",
              "Neonpunk",
              "Enhance",
              "Comic book",
              "Lowpoly",
              "Line art"
            ],
            "type_name": "nodetool.nodes.replicate.image.face.Style_name"
          },
          "default": "(No style)",
          "title": "Style Name",
          "description": "Style template. The style template will add a style-specific prompt and negative prompt to the user's prompt."
        },
        {
          "name": "input_image",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Input Image",
          "description": "The input image, for example a photo of your face."
        },
        {
          "name": "num_outputs",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Num Outputs",
          "description": "Number of output images",
          "min": 1.0,
          "max": 4.0
        },
        {
          "name": "input_image2",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Input Image2",
          "description": "Additional input image (optional)"
        },
        {
          "name": "input_image3",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Input Image3",
          "description": "Additional input image (optional)"
        },
        {
          "name": "input_image4",
          "type": {
            "type": "image"
          },
          "default": {},
          "title": "Input Image4",
          "description": "Additional input image (optional)"
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 5,
          "title": "Guidance Scale",
          "description": "Guidance scale. A guidance scale of 1 corresponds to doing no classifier free guidance.",
          "min": 1.0,
          "max": 10.0
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "nsfw, lowres, bad anatomy, bad hands, text, error, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality, normal quality, jpeg artifacts, signature, watermark, username, blurry",
          "title": "Negative Prompt",
          "description": "Negative Prompt. The negative prompt should NOT contain the trigger word."
        },
        {
          "name": "style_strength_ratio",
          "type": {
            "type": "float"
          },
          "default": 20,
          "title": "Style Strength Ratio",
          "description": "Style strength (%)",
          "min": 15.0,
          "max": 50.0
        },
        {
          "name": "disable_safety_checker",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Disable Safety Checker",
          "description": "Disable safety checker for generated images."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "image"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/8e85a287-826f-4c21-9079-22eac106dd6b/output.0.png",
        "created_at": "2024-01-18T14:28:51.763369Z",
        "description": "Create photos, paintings and avatars for anyone in any style within seconds.  (Stylization version)",
        "github_url": "https://github.com/TencentARC/PhotoMaker",
        "license_url": "https://github.com/TencentARC/PhotoMaker/blob/main/LICENSE",
        "name": "photomaker-style",
        "owner": "tencentarc",
        "paper_url": "https://huggingface.co/papers/2312.04461",
        "run_count": 1181253,
        "url": "https://replicate.com/tencentarc/photomaker-style",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "prompt",
        "num_steps"
      ],
      "is_dynamic": false
    },
    {
      "title": "MMAudio",
      "description": "Add sound to video. An advanced AI model that synthesizes high-quality audio from video content, enabling seamless video-to-audio transformation",
      "namespace": "replicate.audio.generate",
      "node_type": "replicate.audio.generate.MMAudio",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "int"
          },
          "default": -1,
          "title": "Seed",
          "description": "Random seed. Use -1 to randomize the seed"
        },
        {
          "name": "video",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Video",
          "description": "Optional video file for video-to-audio generation"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Prompt",
          "description": "Text prompt for generated audio"
        },
        {
          "name": "duration",
          "type": {
            "type": "float"
          },
          "default": 8,
          "title": "Duration",
          "description": "Duration of output in seconds"
        },
        {
          "name": "num_steps",
          "type": {
            "type": "int"
          },
          "default": 25,
          "title": "Num Steps",
          "description": "Number of inference steps"
        },
        {
          "name": "cfg_strength",
          "type": {
            "type": "float"
          },
          "default": 4.5,
          "title": "Cfg Strength",
          "description": "Guidance strength (CFG)"
        },
        {
          "name": "negative_prompt",
          "type": {
            "type": "str"
          },
          "default": "music",
          "title": "Negative Prompt",
          "description": "Negative prompt to avoid certain sounds"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "audio"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/34262841-19bf-443c-9892-72488fec1ef2/mmaudio-cover.webp",
        "created_at": "2024-12-11T14:46:16.273908Z",
        "description": "Add sound to video. An advanced AI model that synthesizes high-quality audio from video content, enabling seamless video-to-audio transformation",
        "github_url": "https://github.com/hkchengrex/MMAudio",
        "license_url": "https://github.com/hkchengrex/MMAudio#MIT-1-ov-file",
        "name": "mmaudio",
        "owner": "zsxkib",
        "paper_url": "https://hkchengrex.github.io/MMAudio",
        "run_count": 159859,
        "url": "https://replicate.com/zsxkib/mmaudio",
        "visibility": "public",
        "weights_url": "https://huggingface.co/hkchengrex/MMAudio/tree/main"
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "video",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Music Gen",
      "description": "Generate music from a prompt or melody",
      "namespace": "replicate.audio.generate",
      "node_type": "replicate.audio.generate.MusicGen",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Seed for random number generator. If None or -1, a random seed will be used."
        },
        {
          "name": "top_k",
          "type": {
            "type": "int"
          },
          "default": 250,
          "title": "Top K",
          "description": "Reduces sampling to the k most likely tokens."
        },
        {
          "name": "top_p",
          "type": {
            "type": "float"
          },
          "default": 0,
          "title": "Top P",
          "description": "Reduces sampling to tokens with cumulative probability of p. When set to  `0` (default), top_k sampling is used."
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "A description of the music you want to generate."
        },
        {
          "name": "duration",
          "type": {
            "type": "int"
          },
          "default": 8,
          "title": "Duration",
          "description": "Duration of the generated audio in seconds."
        },
        {
          "name": "input_audio",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Input Audio",
          "description": "An audio file that will influence the generated music. If `continuation` is `True`, the generated music will be a continuation of the audio file. Otherwise, the generated music will mimic the audio file's melody."
        },
        {
          "name": "temperature",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Temperature",
          "description": "Controls the 'conservativeness' of the sampling process. Higher temperature means more diversity."
        },
        {
          "name": "continuation",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Continuation",
          "description": "If `True`, generated music will continue from `input_audio`. Otherwise, generated music will mimic `input_audio`'s melody."
        },
        {
          "name": "model_version",
          "type": {
            "type": "enum",
            "values": [
              "stereo-melody-large",
              "stereo-large",
              "melody-large",
              "large"
            ],
            "type_name": "nodetool.nodes.replicate.audio.generate.Model_version"
          },
          "default": "stereo-melody-large",
          "title": "Model Version",
          "description": "Model to use for generation"
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "wav",
              "mp3"
            ],
            "type_name": "nodetool.nodes.replicate.audio.generate.Output_format"
          },
          "default": "wav",
          "title": "Output Format",
          "description": "Output format for generated audio."
        },
        {
          "name": "continuation_end",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Continuation End",
          "description": "End time of the audio file to use for continuation. If -1 or None, will default to the end of the audio clip.",
          "min": 0.0
        },
        {
          "name": "continuation_start",
          "type": {
            "type": "int"
          },
          "default": 0,
          "title": "Continuation Start",
          "description": "Start time of the audio file to use for continuation.",
          "min": 0.0
        },
        {
          "name": "multi_band_diffusion",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Multi Band Diffusion",
          "description": "If `True`, the EnCodec tokens will be decoded with MultiBand Diffusion. Only works with non-stereo models."
        },
        {
          "name": "normalization_strategy",
          "type": {
            "type": "enum",
            "values": [
              "loudness",
              "clip",
              "peak",
              "rms"
            ],
            "type_name": "nodetool.nodes.replicate.audio.generate.Normalization_strategy"
          },
          "default": "loudness",
          "title": "Normalization Strategy",
          "description": "Strategy for normalizing audio."
        },
        {
          "name": "classifier_free_guidance",
          "type": {
            "type": "int"
          },
          "default": 3,
          "title": "Classifier Free Guidance",
          "description": "Increases the influence of inputs on the output. Higher values produce lower-varience outputs that adhere more closely to inputs."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "audio"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/a921a8b3-3e9e-48ef-995c-29143ea11bec/musicgen.jpeg",
        "created_at": "2023-06-12T19:22:05.525230Z",
        "description": "Generate music from a prompt or melody",
        "github_url": "https://github.com/replicate/cog-musicgen",
        "license_url": "https://github.com/facebookresearch/audiocraft/blob/main/LICENSE_weights",
        "name": "musicgen",
        "owner": "meta",
        "paper_url": "https://arxiv.org/abs/2306.05284",
        "run_count": 2309694,
        "url": "https://replicate.com/meta/musicgen",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "top_k",
        "top_p"
      ],
      "is_dynamic": false
    },
    {
      "title": "Realistic Voice Cloning",
      "description": "Create song covers with any RVC v2 trained AI voice from audio files.",
      "namespace": "replicate.audio.generate",
      "node_type": "replicate.audio.generate.RealisticVoiceCloning",
      "layout": "default",
      "properties": [
        {
          "name": "protect",
          "type": {
            "type": "float"
          },
          "default": 0.33,
          "title": "Protect",
          "description": "Control how much of the original vocals' breath and voiceless consonants to leave in the AI vocals. Set 0.5 to disable.",
          "min": 0.0,
          "max": 0.5
        },
        {
          "name": "rvc_model",
          "type": {
            "type": "enum",
            "values": [
              "Squidward",
              "MrKrabs",
              "Plankton",
              "Drake",
              "Vader",
              "Trump",
              "Biden",
              "Obama",
              "Guitar",
              "Voilin",
              "CUSTOM"
            ],
            "type_name": "nodetool.nodes.replicate.audio.generate.Rvc_model"
          },
          "default": "Squidward",
          "title": "Rvc Model",
          "description": "RVC model for a specific voice. If using a custom model, this should match the name of the downloaded model. If a 'custom_rvc_model_download_url' is provided, this will be automatically set to the name of the downloaded model."
        },
        {
          "name": "index_rate",
          "type": {
            "type": "float"
          },
          "default": 0.5,
          "title": "Index Rate",
          "description": "Control how much of the AI's accent to leave in the vocals.",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "song_input",
          "type": {
            "type": "audio"
          },
          "default": {},
          "title": "Song Input",
          "description": "Upload your audio file here."
        },
        {
          "name": "reverb_size",
          "type": {
            "type": "float"
          },
          "default": 0.15,
          "title": "Reverb Size",
          "description": "The larger the room, the longer the reverb time.",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "pitch_change",
          "type": {
            "type": "enum",
            "values": [
              "no-change",
              "male-to-female",
              "female-to-male"
            ],
            "type_name": "nodetool.nodes.replicate.audio.generate.Pitch_change"
          },
          "default": "no-change",
          "title": "Pitch Change",
          "description": "Adjust pitch of AI vocals. Options: `no-change`, `male-to-female`, `female-to-male`."
        },
        {
          "name": "rms_mix_rate",
          "type": {
            "type": "float"
          },
          "default": 0.25,
          "title": "Rms Mix Rate",
          "description": "Control how much to use the original vocal's loudness (0) or a fixed loudness (1).",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "filter_radius",
          "type": {
            "type": "int"
          },
          "default": 3,
          "title": "Filter Radius",
          "description": "If >=3: apply median filtering median filtering to the harvested pitch results.",
          "min": 0.0,
          "max": 7.0
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "mp3",
              "wav"
            ],
            "type_name": "nodetool.nodes.replicate.audio.generate.Output_format"
          },
          "default": "mp3",
          "title": "Output Format",
          "description": "wav for best quality and large file size, mp3 for decent quality and small file size."
        },
        {
          "name": "reverb_damping",
          "type": {
            "type": "float"
          },
          "default": 0.7,
          "title": "Reverb Damping",
          "description": "Absorption of high frequencies in the reverb.",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "reverb_dryness",
          "type": {
            "type": "float"
          },
          "default": 0.8,
          "title": "Reverb Dryness",
          "description": "Level of AI vocals without reverb.",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "reverb_wetness",
          "type": {
            "type": "float"
          },
          "default": 0.2,
          "title": "Reverb Wetness",
          "description": "Level of AI vocals with reverb.",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "crepe_hop_length",
          "type": {
            "type": "int"
          },
          "default": 128,
          "title": "Crepe Hop Length",
          "description": "When `pitch_detection_algo` is set to `mangio-crepe`, this controls how often it checks for pitch changes in milliseconds. Lower values lead to longer conversions and higher risk of voice cracks, but better pitch accuracy."
        },
        {
          "name": "pitch_change_all",
          "type": {
            "type": "float"
          },
          "default": 0,
          "title": "Pitch Change All",
          "description": "Change pitch/key of background music, backup vocals and AI vocals in semitones. Reduces sound quality slightly."
        },
        {
          "name": "main_vocals_volume_change",
          "type": {
            "type": "float"
          },
          "default": 0,
          "title": "Main Vocals Volume Change",
          "description": "Control volume of main AI vocals. Use -3 to decrease the volume by 3 decibels, or 3 to increase the volume by 3 decibels."
        },
        {
          "name": "pitch_detection_algorithm",
          "type": {
            "type": "enum",
            "values": [
              "rmvpe",
              "mangio-crepe"
            ],
            "type_name": "nodetool.nodes.replicate.audio.generate.Pitch_detection_algorithm"
          },
          "default": "rmvpe",
          "title": "Pitch Detection Algorithm",
          "description": "Best option is rmvpe (clarity in vocals), then mangio-crepe (smoother vocals)."
        },
        {
          "name": "instrumental_volume_change",
          "type": {
            "type": "float"
          },
          "default": 0,
          "title": "Instrumental Volume Change",
          "description": "Control volume of the background music/instrumentals."
        },
        {
          "name": "backup_vocals_volume_change",
          "type": {
            "type": "float"
          },
          "default": 0,
          "title": "Backup Vocals Volume Change",
          "description": "Control volume of backup AI vocals."
        },
        {
          "name": "custom_rvc_model_download_url",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Custom Rvc Model Download Url",
          "description": "URL to download a custom RVC model. If provided, the model will be downloaded (if it doesn't already exist) and used for prediction, regardless of the 'rvc_model' value."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "audio"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/ce3d3d2c-5a06-413c-96ff-546fc96c90e2/Out_0_1024x1024.png",
        "created_at": "2023-11-09T16:32:42.062982Z",
        "description": "Create song covers with any RVC v2 trained AI voice from audio files.",
        "github_url": "https://github.com/zsxkib/AICoverGen.git",
        "license_url": "https://github.com/SociallyIneptWeeb/AICoverGen/blob/main/LICENSE",
        "name": "realistic-voice-cloning",
        "owner": "zsxkib",
        "paper_url": null,
        "run_count": 619690,
        "url": "https://replicate.com/zsxkib/realistic-voice-cloning",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "protect",
        "rvc_model",
        "index_rate"
      ],
      "is_dynamic": false
    },
    {
      "title": "Riffusion",
      "description": "Stable diffusion for real-time music generation",
      "namespace": "replicate.audio.generate",
      "node_type": "replicate.audio.generate.Riffusion",
      "layout": "default",
      "properties": [
        {
          "name": "alpha",
          "type": {
            "type": "float"
          },
          "default": 0.5,
          "title": "Alpha",
          "description": "Interpolation alpha if using two prompts. A value of 0 uses prompt_a fully, a value of 1 uses prompt_b fully",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "prompt_a",
          "type": {
            "type": "str"
          },
          "default": "funky synth solo",
          "title": "Prompt A",
          "description": "The prompt for your audio"
        },
        {
          "name": "prompt_b",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt B",
          "description": "The second prompt to interpolate with the first, leave blank if no interpolation"
        },
        {
          "name": "denoising",
          "type": {
            "type": "float"
          },
          "default": 0.75,
          "title": "Denoising",
          "description": "How much to transform input spectrogram",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "seed_image_id",
          "type": {
            "type": "enum",
            "values": [
              "agile",
              "marim",
              "mask_beat_lines_80",
              "mask_gradient_dark",
              "mask_gradient_top_70",
              "mask_graident_top_fifth_75",
              "mask_top_third_75",
              "mask_top_third_95",
              "motorway",
              "og_beat",
              "vibes"
            ],
            "type_name": "nodetool.nodes.replicate.audio.generate.Seed_image_id"
          },
          "default": "vibes",
          "title": "Seed Image Id",
          "description": "Seed spectrogram to use"
        },
        {
          "name": "num_inference_steps",
          "type": {
            "type": "int"
          },
          "default": 50,
          "title": "Num Inference Steps",
          "description": "Number of steps to run the diffusion model",
          "min": 1.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "audio"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/4154e53a-5c5d-4ac5-9da8-62a1fec212bf/riffusion.gif",
        "created_at": "2022-12-16T07:31:34.983811Z",
        "description": "Stable diffusion for real-time music generation",
        "github_url": "https://github.com/riffusion/riffusion",
        "license_url": "https://github.com/riffusion/riffusion/blob/main/LICENSE",
        "name": "riffusion",
        "owner": "riffusion",
        "paper_url": "https://www.riffusion.com/about",
        "run_count": 1002412,
        "url": "https://replicate.com/riffusion/riffusion",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "alpha",
        "prompt_a",
        "prompt_b"
      ],
      "is_dynamic": false
    },
    {
      "title": "Style TTS 2",
      "description": "Generates speech from text",
      "namespace": "replicate.audio.generate",
      "node_type": "replicate.audio.generate.StyleTTS2",
      "layout": "default",
      "properties": [
        {
          "name": "beta",
          "type": {
            "type": "float"
          },
          "default": 0.7,
          "title": "Beta",
          "description": "Only used for long text inputs or in case of reference speaker,             determines the prosody of the speaker. Use lower values to sample style based             on previous or reference speech instead of text.",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "seed",
          "type": {
            "type": "int"
          },
          "default": 0,
          "title": "Seed",
          "description": "Seed for reproducibility"
        },
        {
          "name": "text",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Text",
          "description": "Text to convert to speech"
        },
        {
          "name": "alpha",
          "type": {
            "type": "float"
          },
          "default": 0.3,
          "title": "Alpha",
          "description": "Only used for long text inputs or in case of reference speaker,             determines the timbre of the speaker. Use lower values to sample style based             on previous or reference speech instead of text.",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "weights",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Weights",
          "description": "Replicate weights url for inference with model that is fine-tuned on new speakers.            If provided, a reference speech must also be provided.             If not provided, the default model will be used."
        },
        {
          "name": "reference",
          "type": {
            "type": "audio"
          },
          "default": {},
          "title": "Reference",
          "description": "Reference speech to copy style from"
        },
        {
          "name": "diffusion_steps",
          "type": {
            "type": "int"
          },
          "default": 10,
          "title": "Diffusion Steps",
          "description": "Number of diffusion steps",
          "min": 0.0,
          "max": 50.0
        },
        {
          "name": "embedding_scale",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Embedding Scale",
          "description": "Embedding scale, use higher values for pronounced emotion",
          "min": 0.0,
          "max": 5.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "audio"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/b3443880-411e-4b5f-b9f9-3db28c59b578/out-0.png",
        "created_at": "2023-11-20T19:22:15.416691Z",
        "description": "Generates speech from text",
        "github_url": "https://github.com/yl4579/StyleTTS2",
        "license_url": "https://github.com/yl4579/StyleTTS2/blob/main/LICENSE",
        "name": "styletts2",
        "owner": "adirik",
        "paper_url": "https://arxiv.org/abs/2306.07691",
        "run_count": 129814,
        "url": "https://replicate.com/adirik/styletts2",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "beta",
        "seed",
        "text"
      ],
      "is_dynamic": false
    },
    {
      "title": "Tortoise TTS",
      "description": "Generate speech from text, clone voices from mp3 files. From James Betker AKA \"neonbjb\".",
      "namespace": "replicate.audio.generate",
      "node_type": "replicate.audio.generate.TortoiseTTS",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "int"
          },
          "default": 0,
          "title": "Seed",
          "description": "Random seed which can be used to reproduce results."
        },
        {
          "name": "text",
          "type": {
            "type": "str"
          },
          "default": "The expressiveness of autoregressive transformers is literally nuts! I absolutely adore them.",
          "title": "Text",
          "description": "Text to speak."
        },
        {
          "name": "preset",
          "type": {
            "type": "enum",
            "values": [
              "ultra_fast",
              "fast",
              "standard",
              "high_quality"
            ],
            "type_name": "nodetool.nodes.replicate.audio.generate.Preset"
          },
          "default": "fast",
          "title": "Preset",
          "description": "Which voice preset to use. See the documentation for more information."
        },
        {
          "name": "voice_a",
          "type": {
            "type": "enum",
            "values": [
              "angie",
              "cond_latent_example",
              "deniro",
              "freeman",
              "halle",
              "lj",
              "myself",
              "pat2",
              "snakes",
              "tom",
              "train_daws",
              "train_dreams",
              "train_grace",
              "train_lescault",
              "weaver",
              "applejack",
              "daniel",
              "emma",
              "geralt",
              "jlaw",
              "mol",
              "pat",
              "rainbow",
              "tim_reynolds",
              "train_atkins",
              "train_dotrice",
              "train_empire",
              "train_kennard",
              "train_mouse",
              "william",
              "random",
              "custom_voice",
              "disabled"
            ],
            "type_name": "nodetool.nodes.replicate.audio.generate.Voice_a"
          },
          "default": "random",
          "title": "Voice A",
          "description": "Selects the voice to use for generation. Use `random` to select a random voice. Use `custom_voice` to use a custom voice."
        },
        {
          "name": "voice_b",
          "type": {
            "type": "enum",
            "values": [
              "angie",
              "cond_latent_example",
              "deniro",
              "freeman",
              "halle",
              "lj",
              "myself",
              "pat2",
              "snakes",
              "tom",
              "train_daws",
              "train_dreams",
              "train_grace",
              "train_lescault",
              "weaver",
              "applejack",
              "daniel",
              "emma",
              "geralt",
              "jlaw",
              "mol",
              "pat",
              "rainbow",
              "tim_reynolds",
              "train_atkins",
              "train_dotrice",
              "train_empire",
              "train_kennard",
              "train_mouse",
              "william",
              "random",
              "custom_voice",
              "disabled"
            ],
            "type_name": "nodetool.nodes.replicate.audio.generate.Voice_b"
          },
          "default": "disabled",
          "title": "Voice B",
          "description": "(Optional) Create new voice from averaging the latents for `voice_a`, `voice_b` and `voice_c`. Use `disabled` to disable voice mixing."
        },
        {
          "name": "voice_c",
          "type": {
            "type": "enum",
            "values": [
              "angie",
              "cond_latent_example",
              "deniro",
              "freeman",
              "halle",
              "lj",
              "myself",
              "pat2",
              "snakes",
              "tom",
              "train_daws",
              "train_dreams",
              "train_grace",
              "train_lescault",
              "weaver",
              "applejack",
              "daniel",
              "emma",
              "geralt",
              "jlaw",
              "mol",
              "pat",
              "rainbow",
              "tim_reynolds",
              "train_atkins",
              "train_dotrice",
              "train_empire",
              "train_kennard",
              "train_mouse",
              "william",
              "random",
              "custom_voice",
              "disabled"
            ],
            "type_name": "nodetool.nodes.replicate.audio.generate.Voice_c"
          },
          "default": "disabled",
          "title": "Voice C",
          "description": "(Optional) Create new voice from averaging the latents for `voice_a`, `voice_b` and `voice_c`. Use `disabled` to disable voice mixing."
        },
        {
          "name": "cvvp_amount",
          "type": {
            "type": "float"
          },
          "default": 0,
          "title": "Cvvp Amount",
          "description": "How much the CVVP model should influence the output. Increasing this can in some cases reduce the likelyhood of multiple speakers. Defaults to 0 (disabled)",
          "min": 0.0,
          "max": 1.0
        },
        {
          "name": "custom_voice",
          "type": {
            "type": "audio"
          },
          "default": {},
          "title": "Custom Voice",
          "description": "(Optional) Create a custom voice based on an mp3 file of a speaker. Audio should be at least 15 seconds, only contain one speaker, and be in mp3 format. Overrides the `voice_a` input."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "audio"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": null,
        "created_at": "2022-08-02T02:01:54.555794Z",
        "description": "Generate speech from text, clone voices from mp3 files. From James Betker AKA \"neonbjb\".",
        "github_url": "https://github.com/afiaka87/tortoise-tts",
        "license_url": "https://github.com/afiaka87/tortoise-tts/blob/main/LICENSE",
        "name": "tortoise-tts",
        "owner": "afiaka87",
        "paper_url": "https://github.com/neonbjb/tortoise-tts",
        "run_count": 167587,
        "url": "https://replicate.com/afiaka87/tortoise-tts",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "text",
        "preset"
      ],
      "is_dynamic": false
    },
    {
      "title": "Audio Super Resolution",
      "description": "AudioSR: Versatile Audio Super-resolution at Scale",
      "namespace": "replicate.audio.enhance",
      "node_type": "replicate.audio.enhance.AudioSuperResolution",
      "layout": "default",
      "properties": [
        {
          "name": "seed",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Seed",
          "description": "Random seed. Leave blank to randomize the seed"
        },
        {
          "name": "ddim_steps",
          "type": {
            "type": "int"
          },
          "default": 50,
          "title": "Ddim Steps",
          "description": "Number of inference steps",
          "min": 10.0,
          "max": 500.0
        },
        {
          "name": "input_file",
          "type": {
            "type": "audio"
          },
          "default": {},
          "title": "Input File",
          "description": "Audio to upsample"
        },
        {
          "name": "guidance_scale",
          "type": {
            "type": "float"
          },
          "default": 3.5,
          "title": "Guidance Scale",
          "description": "Scale for classifier free guidance",
          "min": 1.0,
          "max": 20.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "audio"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/6bc4e480-6695-451b-940d-48a3b83a1356/replicate-prediction-jvi5xvlbg4v4.png",
        "created_at": "2023-09-20T04:53:52.943393Z",
        "description": "AudioSR: Versatile Audio Super-resolution at Scale",
        "github_url": "https://github.com/haoheliu/versatile_audio_super_resolution",
        "license_url": "https://huggingface.co/haoheliu/wellsolve_audio_super_resolution_48k/blob/main/README.md",
        "name": "audio-super-resolution",
        "owner": "nateraw",
        "paper_url": "https://arxiv.org/abs/2309.07314",
        "run_count": 53659,
        "url": "https://replicate.com/nateraw/audio-super-resolution",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "seed",
        "ddim_steps",
        "input_file"
      ],
      "is_dynamic": false
    },
    {
      "title": "Demucs",
      "description": "Demucs is an audio source separator created by Facebook Research.",
      "namespace": "replicate.audio.separate",
      "node_type": "replicate.audio.separate.Demucs",
      "layout": "default",
      "properties": [
        {
          "name": "jobs",
          "type": {
            "type": "int"
          },
          "default": 0,
          "title": "Jobs",
          "description": "Choose the number of parallel jobs to use for separation."
        },
        {
          "name": "stem",
          "type": {
            "type": "enum",
            "values": [
              "none",
              "drums",
              "bass",
              "other",
              "vocals",
              "guitar",
              "piano"
            ],
            "type_name": "nodetool.nodes.replicate.audio.separate.Stem"
          },
          "default": "none",
          "title": "Stem",
          "description": "If you just want to isolate one stem, you can choose it here."
        },
        {
          "name": "audio",
          "type": {
            "type": "audio"
          },
          "default": {},
          "title": "Audio",
          "description": "Upload the file to be processed here."
        },
        {
          "name": "model",
          "type": {
            "type": "enum",
            "values": [
              "htdemucs",
              "htdemucs_ft",
              "htdemucs_6s",
              "hdemucs_mmi",
              "mdx_q",
              "mdx_extra_q"
            ],
            "type_name": "nodetool.nodes.replicate.audio.separate.Model"
          },
          "default": "htdemucs",
          "title": "Model",
          "description": "Choose the demucs audio that proccesses your audio. The readme has more information on what to choose."
        },
        {
          "name": "split",
          "type": {
            "type": "bool"
          },
          "default": true,
          "title": "Split",
          "description": "Choose whether or not the audio should be split into chunks."
        },
        {
          "name": "shifts",
          "type": {
            "type": "int"
          },
          "default": 1,
          "title": "Shifts",
          "description": "Choose the amount random shifts for equivariant stabilization. This performs multiple predictions with random shifts of the input and averages them, which makes it x times slower."
        },
        {
          "name": "overlap",
          "type": {
            "type": "float"
          },
          "default": 0.25,
          "title": "Overlap",
          "description": "Choose the amount of overlap between prediction windows."
        },
        {
          "name": "segment",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "int"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Segment",
          "description": "Choose the segment length to use for separation."
        },
        {
          "name": "clip_mode",
          "type": {
            "type": "enum",
            "values": [
              "rescale",
              "clamp",
              "none"
            ],
            "type_name": "nodetool.nodes.replicate.audio.separate.Clip_mode"
          },
          "default": "rescale",
          "title": "Clip Mode",
          "description": "Choose the strategy for avoiding clipping. Rescale will rescale entire signal if necessary or clamp will allow hard clipping."
        },
        {
          "name": "mp3_preset",
          "type": {
            "type": "enum",
            "values": [
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "type_name": "nodetool.nodes.replicate.audio.separate.Mp3_preset"
          },
          "default": 2,
          "title": "Mp3 Preset",
          "description": "Choose the preset for the MP3 output. Higher is faster but worse quality. If MP3 is not selected as the output type, this has no effect."
        },
        {
          "name": "wav_format",
          "type": {
            "type": "enum",
            "values": [
              "int16",
              "int24",
              "float32"
            ],
            "type_name": "nodetool.nodes.replicate.audio.separate.Wav_format"
          },
          "default": "int24",
          "title": "Wav Format",
          "description": "Choose format for the WAV output. If WAV is not selected as the output type, this has no effect."
        },
        {
          "name": "mp3_bitrate",
          "type": {
            "type": "int"
          },
          "default": 320,
          "title": "Mp3 Bitrate",
          "description": "Choose the bitrate for the MP3 output. Higher is better quality but larger file size. If MP3 is not selected as the output type, this has no effect."
        },
        {
          "name": "output_format",
          "type": {
            "type": "enum",
            "values": [
              "mp3",
              "flac",
              "wav"
            ],
            "type_name": "nodetool.nodes.replicate.audio.separate.Output_format"
          },
          "default": "mp3",
          "title": "Output Format",
          "description": "Choose the audio format you would like the result to be returned in."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "audio"
          },
          "name": "vocals"
        },
        {
          "type": {
            "type": "audio"
          },
          "name": "drums"
        },
        {
          "type": {
            "type": "audio"
          },
          "name": "bass"
        },
        {
          "type": {
            "type": "audio"
          },
          "name": "other"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/c13b51bf-69a4-474e-ad73-d800466ca357/588ff17a-e9c9-49c7-b572-e1b189d87.png",
        "created_at": "2022-11-08T22:25:48.183283Z",
        "description": "Demucs is an audio source separator created by Facebook Research.",
        "github_url": "https://github.com/ryan5453/demucs-cog",
        "license_url": "https://github.com/ryan5453/demucs-cog/blob/main/LICENSE",
        "name": "demucs",
        "owner": "ryan5453",
        "paper_url": "https://arxiv.org/abs/2111.03600",
        "run_count": 354480,
        "url": "https://replicate.com/ryan5453/demucs",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "jobs",
        "stem",
        "audio"
      ],
      "is_dynamic": false
    },
    {
      "title": "Incredibly Fast Whisper",
      "description": "whisper-large-v3, incredibly fast, powered by Hugging Face Transformers! \ud83e\udd17",
      "namespace": "replicate.audio.transcribe",
      "node_type": "replicate.audio.transcribe.IncrediblyFastWhisper",
      "layout": "default",
      "properties": [
        {
          "name": "task",
          "type": {
            "type": "enum",
            "values": [
              "transcribe",
              "translate"
            ],
            "type_name": "nodetool.nodes.replicate.audio.transcribe.Task"
          },
          "default": "transcribe",
          "title": "Task",
          "description": "Task to perform: transcribe or translate to another language."
        },
        {
          "name": "audio",
          "type": {
            "type": "audio"
          },
          "default": {},
          "title": "Audio",
          "description": "Audio file"
        },
        {
          "name": "hf_token",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Hf Token",
          "description": "Provide a hf.co/settings/token for Pyannote.audio to diarise the audio clips. You need to agree to the terms in 'https://huggingface.co/pyannote/speaker-diarization-3.1' and 'https://huggingface.co/pyannote/segmentation-3.0' first."
        },
        {
          "name": "language",
          "type": {
            "type": "enum",
            "values": [
              "None",
              "afrikaans",
              "albanian",
              "amharic",
              "arabic",
              "armenian",
              "assamese",
              "azerbaijani",
              "bashkir",
              "basque",
              "belarusian",
              "bengali",
              "bosnian",
              "breton",
              "bulgarian",
              "cantonese",
              "catalan",
              "chinese",
              "croatian",
              "czech",
              "danish",
              "dutch",
              "english",
              "estonian",
              "faroese",
              "finnish",
              "french",
              "galician",
              "georgian",
              "german",
              "greek",
              "gujarati",
              "haitian creole",
              "hausa",
              "hawaiian",
              "hebrew",
              "hindi",
              "hungarian",
              "icelandic",
              "indonesian",
              "italian",
              "japanese",
              "javanese",
              "kannada",
              "kazakh",
              "khmer",
              "korean",
              "lao",
              "latin",
              "latvian",
              "lingala",
              "lithuanian",
              "luxembourgish",
              "macedonian",
              "malagasy",
              "malay",
              "malayalam",
              "maltese",
              "maori",
              "marathi",
              "mongolian",
              "myanmar",
              "nepali",
              "norwegian",
              "nynorsk",
              "occitan",
              "pashto",
              "persian",
              "polish",
              "portuguese",
              "punjabi",
              "romanian",
              "russian",
              "sanskrit",
              "serbian",
              "shona",
              "sindhi",
              "sinhala",
              "slovak",
              "slovenian",
              "somali",
              "spanish",
              "sundanese",
              "swahili",
              "swedish",
              "tagalog",
              "tajik",
              "tamil",
              "tatar",
              "telugu",
              "thai",
              "tibetan",
              "turkish",
              "turkmen",
              "ukrainian",
              "urdu",
              "uzbek",
              "vietnamese",
              "welsh",
              "yiddish",
              "yoruba"
            ],
            "type_name": "nodetool.nodes.replicate.audio.transcribe.Language"
          },
          "default": "None",
          "title": "Language",
          "description": "Language spoken in the audio, specify 'None' to perform language detection."
        },
        {
          "name": "timestamp",
          "type": {
            "type": "enum",
            "values": [
              "chunk",
              "word"
            ],
            "type_name": "nodetool.nodes.replicate.audio.transcribe.Timestamp"
          },
          "default": "chunk",
          "title": "Timestamp",
          "description": "Whisper supports both chunked as well as word level timestamps."
        },
        {
          "name": "batch_size",
          "type": {
            "type": "int"
          },
          "default": 24,
          "title": "Batch Size",
          "description": "Number of parallel batches you want to compute. Reduce if you face OOMs."
        },
        {
          "name": "diarise_audio",
          "type": {
            "type": "bool"
          },
          "default": false,
          "title": "Diarise Audio",
          "description": "Use Pyannote.audio to diarise the audio clips. You will need to provide hf_token below too."
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/4c5d637c-c441-4857-9791-7c11111b38b4/52ebbd85-50a7-4741-b398-30e31.webp",
        "created_at": "2023-11-13T13:28:53.689979Z",
        "description": "whisper-large-v3, incredibly fast, powered by Hugging Face Transformers! \ud83e\udd17",
        "github_url": "https://github.com/chenxwh/insanely-fast-whisper",
        "license_url": "https://github.com/Vaibhavs10/insanely-fast-whisper/blob/main/LICENSE",
        "name": "incredibly-fast-whisper",
        "owner": "vaibhavs10",
        "paper_url": null,
        "run_count": 3869478,
        "url": "https://replicate.com/vaibhavs10/incredibly-fast-whisper",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "task",
        "audio",
        "hf_token"
      ],
      "is_dynamic": false
    },
    {
      "title": "Claude 3 7 Sonnet",
      "description": "The most intelligent Claude model and the first hybrid reasoning model on the market (claude-3-7-sonnet-20250219)",
      "namespace": "replicate.text.generate",
      "node_type": "replicate.text.generate.Claude_3_7_Sonnet",
      "layout": "default",
      "properties": [
        {
          "name": "image",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Image",
          "description": "Optional input image. Images are priced as (width px * height px)/750 input tokens"
        },
        {
          "name": "prompt",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Prompt",
          "description": "Input prompt"
        },
        {
          "name": "max_tokens",
          "type": {
            "type": "int"
          },
          "default": 8192,
          "title": "Max Tokens",
          "description": "Maximum number of output tokens",
          "min": 1024.0,
          "max": 64000.0
        },
        {
          "name": "system_prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "System Prompt",
          "description": "System prompt"
        },
        {
          "name": "max_image_resolution",
          "type": {
            "type": "float"
          },
          "default": 0.5,
          "title": "Max Image Resolution",
          "description": "Maximum image resolution in megapixels. Scales down image before sending it to Claude, to save time and money.",
          "min": 0.001,
          "max": 2.0
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/56aed331-fb30-4e82-9708-b63b2fa90699/claude-3.7-logo.webp",
        "created_at": "2025-02-25T15:21:57.270034Z",
        "description": "The most intelligent Claude model and the first hybrid reasoning model on the market (claude-3-7-sonnet-20250219)",
        "github_url": null,
        "license_url": "https://www.anthropic.com/legal/consumer-terms",
        "name": "claude-3.7-sonnet",
        "owner": "anthropic",
        "paper_url": null,
        "run_count": 19522,
        "url": "https://replicate.com/anthropic/claude-3.7-sonnet",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "image",
        "prompt",
        "max_tokens"
      ],
      "is_dynamic": false
    },
    {
      "title": "Deepseek R 1",
      "description": "A reasoning model trained with reinforcement learning, on par with OpenAI o1",
      "namespace": "replicate.text.generate",
      "node_type": "replicate.text.generate.Deepseek_R1",
      "layout": "default",
      "properties": [
        {
          "name": "top_p",
          "type": {
            "type": "float"
          },
          "default": 1,
          "title": "Top P",
          "description": "Top-p (nucleus) sampling"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Prompt",
          "description": "Prompt"
        },
        {
          "name": "max_tokens",
          "type": {
            "type": "int"
          },
          "default": 20480,
          "title": "Max Tokens",
          "description": "The maximum number of tokens the model should generate as output."
        },
        {
          "name": "temperature",
          "type": {
            "type": "float"
          },
          "default": 0.1,
          "title": "Temperature",
          "description": "The value used to modulate the next token probabilities."
        },
        {
          "name": "presence_penalty",
          "type": {
            "type": "float"
          },
          "default": 0,
          "title": "Presence Penalty",
          "description": "Presence penalty"
        },
        {
          "name": "frequency_penalty",
          "type": {
            "type": "float"
          },
          "default": 0,
          "title": "Frequency Penalty",
          "description": "Frequency penalty"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/302182ab-af74-4963-97f2-6121a80c61d7/deepseek-r1-cover.webp",
        "created_at": "2025-01-29T02:46:11.806773Z",
        "description": "A reasoning model trained with reinforcement learning, on par with OpenAI o1",
        "github_url": "https://github.com/deepseek-ai/DeepSeek-R1",
        "license_url": "https://github.com/deepseek-ai/DeepSeek-R1/blob/main/LICENSE",
        "name": "deepseek-r1",
        "owner": "deepseek-ai",
        "paper_url": null,
        "run_count": 498955,
        "url": "https://replicate.com/deepseek-ai/deepseek-r1",
        "visibility": "public",
        "weights_url": "https://huggingface.co/deepseek-ai/DeepSeek-R1"
      },
      "recommended_models": [],
      "basic_fields": [
        "top_p",
        "prompt",
        "max_tokens"
      ],
      "is_dynamic": false
    },
    {
      "title": "Llama 3 1 405 B Instruct",
      "description": "Meta's flagship 405 billion parameter language model, fine-tuned for chat completions",
      "namespace": "replicate.text.generate",
      "node_type": "replicate.text.generate.Llama3_1_405B_Instruct",
      "layout": "default",
      "properties": [
        {
          "name": "top_k",
          "type": {
            "type": "int"
          },
          "default": 50,
          "title": "Top K",
          "description": "The number of highest probability tokens to consider for generating the output. If > 0, only keep the top k tokens with highest probability (top-k filtering)."
        },
        {
          "name": "top_p",
          "type": {
            "type": "float"
          },
          "default": 0.9,
          "title": "Top P",
          "description": "A probability threshold for generating the output. If < 1.0, only keep the top tokens with cumulative probability >= top_p (nucleus filtering). Nucleus filtering is described in Holtzman et al. (http://arxiv.org/abs/1904.09751)."
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Prompt",
          "description": "Prompt"
        },
        {
          "name": "max_tokens",
          "type": {
            "type": "int"
          },
          "default": 512,
          "title": "Max Tokens",
          "description": "The maximum number of tokens the model should generate as output."
        },
        {
          "name": "min_tokens",
          "type": {
            "type": "int"
          },
          "default": 0,
          "title": "Min Tokens",
          "description": "The minimum number of tokens the model should generate as output."
        },
        {
          "name": "temperature",
          "type": {
            "type": "float"
          },
          "default": 0.6,
          "title": "Temperature",
          "description": "The value used to modulate the next token probabilities."
        },
        {
          "name": "system_prompt",
          "type": {
            "type": "str"
          },
          "default": "You are a helpful assistant.",
          "title": "System Prompt",
          "description": "System prompt to send to the model. This is prepended to the prompt and helps guide system behavior. Ignored for non-chat models."
        },
        {
          "name": "stop_sequences",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Stop Sequences",
          "description": "A comma-separated list of sequences to stop generation at. For example, '<end>,<stop>' will stop generation at the first instance of 'end' or '<stop>'."
        },
        {
          "name": "presence_penalty",
          "type": {
            "type": "float"
          },
          "default": 0,
          "title": "Presence Penalty",
          "description": "Presence penalty"
        },
        {
          "name": "frequency_penalty",
          "type": {
            "type": "float"
          },
          "default": 0,
          "title": "Frequency Penalty",
          "description": "Frequency penalty"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/81ca001f-6a0a-4bef-b2f1-32466887df20/meta-logo.png",
        "created_at": "2024-07-22T20:40:30.648238Z",
        "description": "Meta's flagship 405 billion parameter language model, fine-tuned for chat completions",
        "github_url": "https://github.com/meta-llama/llama-models/blob/main/models/llama3_1",
        "license_url": "https://github.com/meta-llama/llama-models/blob/main/models/llama3_1/LICENSE",
        "name": "meta-llama-3.1-405b-instruct",
        "owner": "meta",
        "paper_url": null,
        "run_count": 4954794,
        "url": "https://replicate.com/meta/meta-llama-3.1-405b-instruct",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "top_k",
        "top_p",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Llama 3 70 B",
      "description": "Base version of Llama 3, a 70 billion parameter language model from Meta.",
      "namespace": "replicate.text.generate",
      "node_type": "replicate.text.generate.Llama3_70B",
      "layout": "default",
      "properties": [
        {
          "name": "top_k",
          "type": {
            "type": "int"
          },
          "default": 50,
          "title": "Top K",
          "description": "The number of highest probability tokens to consider for generating the output. If > 0, only keep the top k tokens with highest probability (top-k filtering)."
        },
        {
          "name": "top_p",
          "type": {
            "type": "float"
          },
          "default": 0.9,
          "title": "Top P",
          "description": "A probability threshold for generating the output. If < 1.0, only keep the top tokens with cumulative probability >= top_p (nucleus filtering). Nucleus filtering is described in Holtzman et al. (http://arxiv.org/abs/1904.09751)."
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Prompt",
          "description": "Prompt"
        },
        {
          "name": "max_tokens",
          "type": {
            "type": "int"
          },
          "default": 512,
          "title": "Max Tokens",
          "description": "The maximum number of tokens the model should generate as output."
        },
        {
          "name": "min_tokens",
          "type": {
            "type": "int"
          },
          "default": 0,
          "title": "Min Tokens",
          "description": "The minimum number of tokens the model should generate as output."
        },
        {
          "name": "temperature",
          "type": {
            "type": "float"
          },
          "default": 0.6,
          "title": "Temperature",
          "description": "The value used to modulate the next token probabilities."
        },
        {
          "name": "prompt_template",
          "type": {
            "type": "str"
          },
          "default": "{prompt}",
          "title": "Prompt Template",
          "description": "Prompt template. The string `{prompt}` will be substituted for the input prompt. If you want to generate dialog output, use this template as a starting point and construct the prompt string manually, leaving `prompt_template={prompt}`."
        },
        {
          "name": "presence_penalty",
          "type": {
            "type": "float"
          },
          "default": 1.15,
          "title": "Presence Penalty",
          "description": "Presence penalty"
        },
        {
          "name": "frequency_penalty",
          "type": {
            "type": "float"
          },
          "default": 0.2,
          "title": "Frequency Penalty",
          "description": "Frequency penalty"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/8e044b4c-0b20-4717-83bd-a94d89fb0dbe/meta-logo.png",
        "created_at": "2024-04-17T18:05:18.044746Z",
        "description": "Base version of Llama 3, a 70 billion parameter language model from Meta.",
        "github_url": null,
        "license_url": "https://github.com/meta-llama/llama3/blob/main/LICENSE",
        "name": "meta-llama-3-70b",
        "owner": "meta",
        "paper_url": null,
        "run_count": 820484,
        "url": "https://replicate.com/meta/meta-llama-3-70b",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "top_k",
        "top_p",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Llama 3 70 B Instruct",
      "description": "A 70 billion parameter language model from Meta, fine tuned for chat completions",
      "namespace": "replicate.text.generate",
      "node_type": "replicate.text.generate.Llama3_70B_Instruct",
      "layout": "default",
      "properties": [
        {
          "name": "top_k",
          "type": {
            "type": "int"
          },
          "default": 50,
          "title": "Top K",
          "description": "The number of highest probability tokens to consider for generating the output. If > 0, only keep the top k tokens with highest probability (top-k filtering)."
        },
        {
          "name": "top_p",
          "type": {
            "type": "float"
          },
          "default": 0.9,
          "title": "Top P",
          "description": "A probability threshold for generating the output. If < 1.0, only keep the top tokens with cumulative probability >= top_p (nucleus filtering). Nucleus filtering is described in Holtzman et al. (http://arxiv.org/abs/1904.09751)."
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Prompt",
          "description": "Prompt"
        },
        {
          "name": "max_tokens",
          "type": {
            "type": "int"
          },
          "default": 512,
          "title": "Max Tokens",
          "description": "The maximum number of tokens the model should generate as output."
        },
        {
          "name": "min_tokens",
          "type": {
            "type": "int"
          },
          "default": 0,
          "title": "Min Tokens",
          "description": "The minimum number of tokens the model should generate as output."
        },
        {
          "name": "temperature",
          "type": {
            "type": "float"
          },
          "default": 0.6,
          "title": "Temperature",
          "description": "The value used to modulate the next token probabilities."
        },
        {
          "name": "prompt_template",
          "type": {
            "type": "str"
          },
          "default": "{prompt}",
          "title": "Prompt Template",
          "description": "Prompt template. The string `{prompt}` will be substituted for the input prompt. If you want to generate dialog output, use this template as a starting point and construct the prompt string manually, leaving `prompt_template={prompt}`."
        },
        {
          "name": "presence_penalty",
          "type": {
            "type": "float"
          },
          "default": 1.15,
          "title": "Presence Penalty",
          "description": "Presence penalty"
        },
        {
          "name": "frequency_penalty",
          "type": {
            "type": "float"
          },
          "default": 0.2,
          "title": "Frequency Penalty",
          "description": "Frequency penalty"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/3dcb020b-1fad-4101-84cf-88af9b20ac21/meta-logo.png",
        "created_at": "2024-04-17T21:44:13.482460Z",
        "description": "A 70 billion parameter language model from Meta, fine tuned for chat completions",
        "github_url": "https://github.com/meta-llama/llama3",
        "license_url": "https://github.com/meta-llama/llama3/blob/main/LICENSE",
        "name": "meta-llama-3-70b-instruct",
        "owner": "meta",
        "paper_url": null,
        "run_count": 145312032,
        "url": "https://replicate.com/meta/meta-llama-3-70b-instruct",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "top_k",
        "top_p",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Llama 3 8 B",
      "description": "Base version of Llama 3, an 8 billion parameter language model from Meta.",
      "namespace": "replicate.text.generate",
      "node_type": "replicate.text.generate.Llama3_8B",
      "layout": "default",
      "properties": [
        {
          "name": "top_k",
          "type": {
            "type": "int"
          },
          "default": 50,
          "title": "Top K",
          "description": "The number of highest probability tokens to consider for generating the output. If > 0, only keep the top k tokens with highest probability (top-k filtering)."
        },
        {
          "name": "top_p",
          "type": {
            "type": "float"
          },
          "default": 0.9,
          "title": "Top P",
          "description": "A probability threshold for generating the output. If < 1.0, only keep the top tokens with cumulative probability >= top_p (nucleus filtering). Nucleus filtering is described in Holtzman et al. (http://arxiv.org/abs/1904.09751)."
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Prompt",
          "description": "Prompt"
        },
        {
          "name": "max_tokens",
          "type": {
            "type": "int"
          },
          "default": 512,
          "title": "Max Tokens",
          "description": "The maximum number of tokens the model should generate as output."
        },
        {
          "name": "min_tokens",
          "type": {
            "type": "int"
          },
          "default": 0,
          "title": "Min Tokens",
          "description": "The minimum number of tokens the model should generate as output."
        },
        {
          "name": "temperature",
          "type": {
            "type": "float"
          },
          "default": 0.6,
          "title": "Temperature",
          "description": "The value used to modulate the next token probabilities."
        },
        {
          "name": "prompt_template",
          "type": {
            "type": "str"
          },
          "default": "{prompt}",
          "title": "Prompt Template",
          "description": "Prompt template. The string `{prompt}` will be substituted for the input prompt. If you want to generate dialog output, use this template as a starting point and construct the prompt string manually, leaving `prompt_template={prompt}`."
        },
        {
          "name": "presence_penalty",
          "type": {
            "type": "float"
          },
          "default": 1.15,
          "title": "Presence Penalty",
          "description": "Presence penalty"
        },
        {
          "name": "frequency_penalty",
          "type": {
            "type": "float"
          },
          "default": 0.2,
          "title": "Frequency Penalty",
          "description": "Frequency penalty"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/dd9ac11a-edda-4d33-b413-6a721c44dfb0/meta-logo.png",
        "created_at": "2024-04-17T18:04:26.049832Z",
        "description": "Base version of Llama 3, an 8 billion parameter language model from Meta.",
        "github_url": "https://github.com/meta-llama/llama3",
        "license_url": "https://github.com/meta-llama/llama3/blob/main/LICENSE",
        "name": "meta-llama-3-8b",
        "owner": "meta",
        "paper_url": null,
        "run_count": 50806621,
        "url": "https://replicate.com/meta/meta-llama-3-8b",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "top_k",
        "top_p",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Llama 3 8 B Instruct",
      "description": "An 8 billion parameter language model from Meta, fine tuned for chat completions",
      "namespace": "replicate.text.generate",
      "node_type": "replicate.text.generate.Llama3_8B_Instruct",
      "layout": "default",
      "properties": [
        {
          "name": "top_k",
          "type": {
            "type": "int"
          },
          "default": 50,
          "title": "Top K",
          "description": "The number of highest probability tokens to consider for generating the output. If > 0, only keep the top k tokens with highest probability (top-k filtering)."
        },
        {
          "name": "top_p",
          "type": {
            "type": "float"
          },
          "default": 0.9,
          "title": "Top P",
          "description": "A probability threshold for generating the output. If < 1.0, only keep the top tokens with cumulative probability >= top_p (nucleus filtering). Nucleus filtering is described in Holtzman et al. (http://arxiv.org/abs/1904.09751)."
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "",
          "title": "Prompt",
          "description": "Prompt"
        },
        {
          "name": "max_tokens",
          "type": {
            "type": "int"
          },
          "default": 512,
          "title": "Max Tokens",
          "description": "The maximum number of tokens the model should generate as output."
        },
        {
          "name": "min_tokens",
          "type": {
            "type": "int"
          },
          "default": 0,
          "title": "Min Tokens",
          "description": "The minimum number of tokens the model should generate as output."
        },
        {
          "name": "temperature",
          "type": {
            "type": "float"
          },
          "default": 0.6,
          "title": "Temperature",
          "description": "The value used to modulate the next token probabilities."
        },
        {
          "name": "prompt_template",
          "type": {
            "type": "str"
          },
          "default": "{prompt}",
          "title": "Prompt Template",
          "description": "Prompt template. The string `{prompt}` will be substituted for the input prompt. If you want to generate dialog output, use this template as a starting point and construct the prompt string manually, leaving `prompt_template={prompt}`."
        },
        {
          "name": "presence_penalty",
          "type": {
            "type": "float"
          },
          "default": 1.15,
          "title": "Presence Penalty",
          "description": "Presence penalty"
        },
        {
          "name": "frequency_penalty",
          "type": {
            "type": "float"
          },
          "default": 0.2,
          "title": "Frequency Penalty",
          "description": "Frequency penalty"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/68b7dc1a-4767-4353-b066-212b0126b5de/meta-logo.png",
        "created_at": "2024-04-17T21:44:58.480057Z",
        "description": "An 8 billion parameter language model from Meta, fine tuned for chat completions",
        "github_url": "https://github.com/meta-llama/llama3",
        "license_url": "https://github.com/meta-llama/llama3/blob/main/LICENSE",
        "name": "meta-llama-3-8b-instruct",
        "owner": "meta",
        "paper_url": null,
        "run_count": 325600516,
        "url": "https://replicate.com/meta/meta-llama-3-8b-instruct",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "top_k",
        "top_p",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Llama Guard 3 11 B Vision",
      "description": "A Llama-3.2-11B pretrained model, fine-tuned for content safety classification",
      "namespace": "replicate.text.generate",
      "node_type": "replicate.text.generate.LlamaGuard_3_11B_Vision",
      "layout": "default",
      "properties": [
        {
          "name": "image",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Image",
          "description": "Image to moderate"
        },
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "Which one should I buy?",
          "title": "Prompt",
          "description": "User message to moderate"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/d7d7e254-bf5a-458f-9754-791a7db8ba44/replicate-prediction-m8j_JCyBlXR.webp",
        "created_at": "2024-12-23T20:39:23.769654Z",
        "description": "A Llama-3.2-11B pretrained model, fine-tuned for content safety classification",
        "github_url": "https://github.com/lucataco/cog-Llama-Guard-3-11B-Vision",
        "license_url": "https://huggingface.co/meta-llama/Llama-3.2-1B/blob/main/LICENSE.txt",
        "name": "llama-guard-3-11b-vision",
        "owner": "meta",
        "paper_url": "https://arxiv.org/abs/2312.06674",
        "run_count": 50,
        "url": "https://replicate.com/meta/llama-guard-3-11b-vision",
        "visibility": "public",
        "weights_url": "https://huggingface.co/meta-llama/Llama-Guard-3-11B-Vision"
      },
      "recommended_models": [],
      "basic_fields": [
        "image",
        "prompt"
      ],
      "is_dynamic": false
    },
    {
      "title": "Llama Guard 3 8 B",
      "description": "A Llama-3.1-8B pretrained model, fine-tuned for content safety classification",
      "namespace": "replicate.text.generate",
      "node_type": "replicate.text.generate.LlamaGuard_3_8B",
      "layout": "default",
      "properties": [
        {
          "name": "prompt",
          "type": {
            "type": "str"
          },
          "default": "I forgot how to kill a process in Linux, can you help?",
          "title": "Prompt",
          "description": "User message to moderate"
        },
        {
          "name": "assistant",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Assistant",
          "description": "Assistant response to classify"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/b59edf5b-6571-4673-8cd8-87488501f5b7/replicate-prediction-d2c_9x54OXs.webp",
        "created_at": "2024-12-21T00:37:41.039448Z",
        "description": "A Llama-3.1-8B pretrained model, fine-tuned for content safety classification",
        "github_url": "https://github.com/lucataco/cog-Llama-Guard-3-8B",
        "license_url": "https://huggingface.co/meta-llama/Llama-3.1-70B-Instruct/blob/main/LICENSE",
        "name": "llama-guard-3-8b",
        "owner": "meta",
        "paper_url": "https://arxiv.org/abs/2407.21783",
        "run_count": 30683,
        "url": "https://replicate.com/meta/llama-guard-3-8b",
        "visibility": "public",
        "weights_url": "https://huggingface.co/meta-llama/Llama-Guard-3-8B"
      },
      "recommended_models": [],
      "basic_fields": [
        "prompt",
        "assistant"
      ],
      "is_dynamic": false
    },
    {
      "title": "Snowflake Arctic Instruct",
      "description": "An efficient, intelligent, and truly open-source language model",
      "namespace": "replicate.text.generate",
      "node_type": "replicate.text.generate.Snowflake_Arctic_Instruct",
      "layout": "default",
      "properties": [
        {
          "name": "name",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Name"
        },
        {
          "name": "name_file",
          "type": {
            "type": "union",
            "type_args": [
              {
                "type": "str"
              },
              {
                "type": "none"
              }
            ]
          },
          "title": "Name File"
        }
      ],
      "outputs": [
        {
          "type": {
            "type": "str"
          },
          "name": "output"
        }
      ],
      "the_model_info": {
        "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/793e32b4-913c-4036-a847-4afb38e42fc1/Snowflake_Arctic_Opengraph_120.png",
        "created_at": "2024-04-24T00:08:29.300675Z",
        "description": "An efficient, intelligent, and truly open-source language model",
        "github_url": "https://github.com/Snowflake-Labs/snowflake-arctic",
        "license_url": "https://www.apache.org/licenses/LICENSE-2.0",
        "name": "snowflake-arctic-instruct",
        "owner": "snowflake",
        "paper_url": null,
        "run_count": 1971050,
        "url": "https://replicate.com/snowflake/snowflake-arctic-instruct",
        "visibility": "public",
        "weights_url": null
      },
      "recommended_models": [],
      "basic_fields": [
        "name",
        "name_file"
      ],
      "is_dynamic": false
    }
  ]
}